[{"path":"https://inbo.github.io/multimput/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behaviour participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behaviour may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://inbo.github.io/multimput/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. E.g. edit roxygen2 comment .R file R/, .Rd file man/.","code":""},{"path":"https://inbo.github.io/multimput/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reproducible example.","code":""},{"path":"https://inbo.github.io/multimput/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look GitHub Actions build status making changes. README contain badges continuous integration services used package. require tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://inbo.github.io/multimput/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://inbo.github.io/multimput/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://inbo.github.io/multimput/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GNU GENERAL PUBLIC LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU GENERAL PUBLIC LICENSE","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU GENERAL PUBLIC LICENSE","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU GENERAL PUBLIC LICENSE","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU GENERAL PUBLIC LICENSE","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU GENERAL PUBLIC LICENSE","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU GENERAL PUBLIC LICENSE","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU GENERAL PUBLIC LICENSE","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU GENERAL PUBLIC LICENSE","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU GENERAL PUBLIC LICENSE","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU GENERAL PUBLIC LICENSE","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU GENERAL PUBLIC LICENSE","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU GENERAL PUBLIC LICENSE","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU GENERAL PUBLIC LICENSE","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://inbo.github.io/multimput/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU GENERAL PUBLIC LICENSE","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"the-multimput-package","dir":"Articles","previous_headings":"","what":"The multimput package","title":"Model data with missing observations using multiple imputation","text":"multimput package originally intended provide data code replicate results Onkelinx, Devos, Quataert (2016). paper freely available http://dx.doi.org/10.1007/s10336-016-1404-9. functions rewritten make user-friendly generic. order make package compact, removed original code data starting version 0.2.6. However original code data remain available older releases.","code":""},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"very-short-intro-to-multiple-imputation","dir":"Articles","previous_headings":"","what":"Very short intro to multiple imputation","title":"Model data with missing observations using multiple imputation","text":"Create imputation model Generate imputations missing observation Aggregate imputed data Model aggregated imputed data","code":""},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"short-intro-to-multiple-imputation","dir":"Articles","previous_headings":"","what":"Short intro to multiple imputation","title":"Model data with missing observations using multiple imputation","text":"imputations based model Y∼Xβ*Y \\sim X \\beta^* user specify. missing value ii covariates xix_i, draw random value yiy_i distribution ŷ\\hat{y}_i. case linear model, sample normal distribution yi∼N(ŷ,σi)y_i \\sim N(\\hat{y}_i, \\sigma_i). imputation set ll holds impute value yiy_i missing value. missing values replaced imputation set ll, dataset complete. can apply analysis wanted first place. can, don’t , include aggregating dataset prior analysis. analysis results set coefficients γal{\\gamma_a}_l standard error σal{\\sigma_a}_l. course, set depend imputed values imputation set ll. Another imputation set different imputed values hence lead different coefficients. Therefore imputation, aggregation analysis repeated LL different imputation sets, resulting LL sets coefficients standard errors. aggregated formulas . coefficient average coefficient imputation sets. standard error coefficient square root sum two parts. first part average squared standard error imputation sets. second part variance coefficient among imputation sets, multiplied correction factor 1+1L1 + \\frac{1}{L}. γ‾=∑l=1LγalL\\bar{\\gamma}_a = \\frac{\\sum_{l = 1}^L{\\gamma_a}_l}{L} σ‾=∑l=1Jσa2lL+(1+1L)∑l=1L(γal−γ‾)2L−1\\bar{\\sigma}_a = \\sqrt{\\frac{\\sum_{l = 1}^J {{\\sigma_a^2}_l}}{L} + (1 + \\frac{1}{L}) \\frac{\\sum_{l = 1}^L({\\gamma_a}_l - \\bar{\\gamma}_a) ^ 2}{L - 1}}","code":""},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"the-dataset","dir":"Articles","previous_headings":"","what":"The dataset","title":"Model data with missing observations using multiple imputation","text":"First, let’s generate dataset set observations missing. generateData() creates balanced dataset repeated visits number sites. site visited several years multiple times per year. look help-file generateData() details model. Variables dataset Year year observation integer fYear year observation factor Period period observation integer fPeriod period observation factor Site ID site integer fSite ID site factor Mu expected value negative binomial distribution Count realisation negative binomial distribution expected value Mu Observed Count variable missing data dataset missing observations.","code":"library(multimput) set.seed(123) prop_missing <- 0.5 dataset <- generate_data(n_year = 10, n_period = 6, n_site = 50, n_run = 1) dataset$Observed <- dataset$Count which_missing <- sample(nrow(dataset), size = nrow(dataset) * prop_missing) dataset$Observed[which_missing] <- NA dataset$fYear <- factor(dataset$Year) dataset$fPeriod <- factor(dataset$Period) dataset$fSite <- factor(dataset$Site) str(dataset) ## 'data.frame':    3000 obs. of  10 variables: ##  $ Year    : int  1 2 3 4 5 6 7 8 9 10 ... ##  $ Period  : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ Site    : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ Mu      : num  11.36 9.31 11.33 10.98 9.79 ... ##  $ Run     : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ Count   : num  8 2 10 21 2 2 13 8 10 4 ... ##  $ Observed: num  NA 2 10 NA 2 NA 13 NA NA NA ... ##  $ fYear   : Factor w/ 10 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 9 10 ... ##  $ fPeriod : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 1 1 1 1 1 ... ##  $ fSite   : Factor w/ 50 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 1 1 1 1 1 ... library(ggplot2) ggplot(dataset, aes(x = Year, y = Mu, group = Site)) +   geom_line() +   facet_wrap(~Period) +   scale_y_log10()"},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"create-the-imputation-model","dir":"Articles","previous_headings":"","what":"Create the imputation model","title":"Model data with missing observations using multiple imputation","text":"create several models, mainly illustrate capabilities multimput package. Hence several models good real life application.","code":"# a simple linear model imp_lm <- lm(Observed ~ fYear + fPeriod + fSite, data = dataset) # a mixed model with Poisson distribution # fYear and fPeriod are the fixed effects # Site are independent and identically distributed random intercepts library(lme4) imp_glmm <- glmer(   Observed ~ fYear + fPeriod + (1 | fSite),   data = dataset,   family = poisson ) library(INLA) # a mixed model with Poisson distribution # fYear and fPeriod are the fixed effects # Site are independent and identically distributed random intercepts # the same model as imp_glmm imp_inla_p <- inla(   Observed ~ fYear + fPeriod + f(Site, model = \"iid\"),   data = dataset,   family = \"poisson\",   control.compute = list(config = TRUE),   control.predictor = list(compute = TRUE, link = 1) ) # the same model as imp_inla_p but with negative binomial distribution imp_inla_nb <- inla(   Observed ~ fYear + fPeriod + f(fSite, model = \"iid\"),   data = dataset,   family = \"nbinomial\",   control.compute = list(config = TRUE),   control.predictor = list(compute = TRUE, link = 1) ) # a mixed model with negative binomial distribution # fPeriod is a fixed effect # f(Year, model = \"rw1\") is a global temporal trend #     modelled as a first order random walk #     delta_i = Year_i - Year_{i-1} with delta_i \\sim N(0, \\sigma_{rw1}) # f(YearCopy, model = \"ar1\", replicate = Site) is a temporal trend per Site #     modelled as an first order autoregressive model #     Year_i_k = \\rho Year_{i-1}_k + \\epsilon_i_k with #     \\epsilon_i_k \\sim N(0, \\sigma_{ar1}) dataset$YearCopy <- dataset$Year imp_better <- inla(   Observed ~     f(Year, model = \"rw1\") +     f(YearCopy, model = \"ar1\", replicate = Site) +     fPeriod,   data = dataset,   family = \"nbinomial\",   control.compute = list(config = TRUE),   control.predictor = list(compute = TRUE, link = 1) )"},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"apply-the-imputation-model","dir":"Articles","previous_headings":"","what":"Apply the imputation model","title":"Model data with missing observations using multiple imputation","text":"models predict method. case impute() requires model data argument. Note implies one can apply imputation dataset long dataset contains necessary variables. inla prediction simultaneously model fitting. Hence model contains required information data used. n_imp number imputations. default n_imp = 19.","code":"raw_lm <- impute(imp_lm, data = dataset) raw_glmm <- impute(imp_glmm, data = dataset) # setting `parallel_configs = FALSE` was required to pass R CMD Check # in practice you can use the default `parallel_configs = TRUE` raw_inla_p <- impute(imp_inla_p, parallel_configs = FALSE) raw_inla_nb <- impute(imp_inla_nb, parallel_configs = FALSE) raw_better <- impute(imp_better, parallel_configs = FALSE) raw_better_9 <- impute(imp_better, n_imp = 9, parallel_configs = FALSE)"},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"aggregate-the-imputed-dataset","dir":"Articles","previous_headings":"","what":"Aggregate the imputed dataset","title":"Model data with missing observations using multiple imputation","text":"Suppose interested sum counts sites combination year period. must aggregate imputations year period. resulting object contain imputed response grouping variables. easiest way variable like year continuous factor add Year fYear grouping.","code":"aggr_lm <- aggregate_impute(raw_lm, grouping = c(\"fYear\", \"fPeriod\"), fun = sum) aggr_glmm <- aggregate_impute(   raw_glmm, grouping = c(\"fYear\", \"fPeriod\"), fun = sum ) aggr_inla_p <- aggregate_impute(   raw_inla_p, grouping = c(\"fYear\", \"fPeriod\"), fun = sum ) aggr_inla_nb <- aggregate_impute(   raw_inla_nb, grouping = c(\"fYear\", \"fPeriod\"), fun = sum ) aggr_better <- aggregate_impute(   raw_better, grouping = c(\"fYear\", \"fPeriod\"), fun = sum ) aggr_better_9 <- aggregate_impute(   raw_better_9, grouping = c(\"fYear\", \"fPeriod\"), fun = sum )"},{"path":[]},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"simple-example","dir":"Articles","previous_headings":"Model the aggregated imputed dataset","what":"Simple example","title":"Model data with missing observations using multiple imputation","text":"model_impute() apply model_fun imputation set. covariates defined rhs argument. model_fun = lm combination rhs = \"0 + fYear + fPeriod\" equivalent lm(ImputedResponse ~ 0 + fYear + fPeriod, data = ImputedData). tricky part function extractor argument. user defined function must argument called model. function return data.frame matrix two columns. first column hold estimate parameter model, second column standard error. row represents parameter.","code":"extractor_lm <- function(model) {   summary(model)$coefficients[, c(\"Estimate\", \"Std. Error\")] } model_impute(   aggr_lm, model_fun = lm, rhs = \"0 + fYear + fPeriod\", extractor = extractor_lm ) ## # A tibble: 15 × 5 ##    Parameter Estimate    SE   LCL   UCL ##    <fct>        <dbl> <dbl> <dbl> <dbl> ##  1 fYear1       795.   166.  469. 1121. ##  2 fYear2       858.   174.  517. 1199. ##  3 fYear3      1152.   157.  845. 1459. ##  4 fYear4      1472.   159. 1161. 1784. ##  5 fYear5       922.   159.  610. 1233. ##  6 fYear6      1539.   162. 1222. 1855. ##  7 fYear7      1508.   164. 1187. 1829. ##  8 fYear8      1262.   173.  923. 1601. ##  9 fYear9      1200.   162.  883. 1518. ## 10 fYear10     1285.   154.  982. 1587. ## 11 fPeriod2     532.   136.  266.  799. ## 12 fPeriod3     451.   149.  158.  744. ## 13 fPeriod4     555.   142.  276.  833. ## 14 fPeriod5     -72.6  142. -350.  205. ## 15 fPeriod6    -484.   141. -760. -208."},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"return-only-the-parameters-associated-with-fyear","dir":"Articles","previous_headings":"Model the aggregated imputed dataset","what":"Return only the parameters associated with fYear","title":"Model data with missing observations using multiple imputation","text":"extractor function requires work user. cost compensated high degree flexibility. user doesn’t depend predefined extractor functions. illustrated following examples.","code":"extractor_lm2 <- function(model) {   cf <- summary(model)$coefficients   cf[grepl(\"fYear\", rownames(cf)), c(\"Estimate\", \"Std. Error\")] } model_impute(   aggr_lm, model_fun = lm, rhs = \"0 + fYear + fPeriod\",   extractor = extractor_lm2 ) ## # A tibble: 10 × 5 ##    Parameter Estimate    SE   LCL   UCL ##    <fct>        <dbl> <dbl> <dbl> <dbl> ##  1 fYear1        795.  166.  469. 1121. ##  2 fYear2        858.  174.  517. 1199. ##  3 fYear3       1152.  157.  845. 1459. ##  4 fYear4       1472.  159. 1161. 1784. ##  5 fYear5        922.  159.  610. 1233. ##  6 fYear6       1539.  162. 1222. 1855. ##  7 fYear7       1508.  164. 1187. 1829. ##  8 fYear8       1262.  173.  923. 1601. ##  9 fYear9       1200.  162.  883. 1518. ## 10 fYear10      1285.  154.  982. 1587."},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"predict-a-smoother-for-predefined-values","dir":"Articles","previous_headings":"Model the aggregated imputed dataset","what":"Predict a smoother for predefined values","title":"Model data with missing observations using multiple imputation","text":"Note pass extra arguments extractor function extractor_args argument. list. recommend use named list avoid confusion. estimated trend years.","code":"library(mgcv) new_set <- expand.grid(   Year = pretty(dataset$Year, 20),   fPeriod = dataset$fPeriod[1] ) extractor_lm3 <- function(model, newdata) {   predictions <- predict(model, newdata = newdata, se.fit = TRUE)   cbind(predictions$fit, predictions$se.fit) } model_gam <- model_impute(   aggr_lm, model_fun = gam, rhs = \"s(Year) + fPeriod\",   extractor = extractor_lm3, extractor_args = list(newdata = new_set),   mutate = list(Year = ~as.integer(levels(fYear))[fYear]) ) model_gam <- cbind(new_set, model_gam) ggplot(model_gam, aes(x = Year, y = Estimate, ymin = LCL, ymax = UCL)) +   geom_ribbon(alpha = 0.1) +   geom_line()"},{"path":[]},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"modelling-aggregated-data-with-glm-nb","dir":"Articles","previous_headings":"Model the aggregated imputed dataset > Compare the results using different imputation models","what":"Modelling aggregated data with glm.nb","title":"Model data with missing observations using multiple imputation","text":"Suppose interested yearly relative index taking account average seasonal pattern. complete dataset (without missing values) model like example : generalised linear model negative binomial distribution counts likely overdispersed. fYear models yearly index fPeriod average seasonal pattern. 0 + part removes intercept model. simple trick gives direct estimates effect fYear. effects fYear needed index. Therefore extractor functions selects parameters ’s row name contains fYear. case want first year used reference (index year 1 = 100%), can subtract estimate year estimates. result indices relative first year, still log scale. Note estimated index year 1 0 log(100%)=0log(100\\%) = 0. Now relevant model extractor function, can apply aggregate imputed datasets. estimated relative index years.","code":"library(MASS) aggr_complete <- aggregate(   dataset[, \"Count\", drop = FALSE], dataset[, c(\"fYear\", \"fPeriod\")], FUN = sum ) model_complete <- glm.nb(Count ~ 0 + fYear + fPeriod, data = aggr_complete) summary(model_complete) ##  ## Call: ## glm.nb(formula = Count ~ 0 + fYear + fPeriod, data = aggr_complete,  ##     init.theta = 31.78765186, link = log) ##  ## Coefficients: ##          Estimate Std. Error z value Pr(>|z|)     ## fYear1    6.72514    0.09016  74.590  < 2e-16 *** ## fYear2    6.83730    0.09005  75.929  < 2e-16 *** ## fYear3    7.06993    0.08985  78.684  < 2e-16 *** ## fYear4    7.09550    0.08983  78.985  < 2e-16 *** ## fYear5    6.94750    0.08995  77.237  < 2e-16 *** ## fYear6    7.13813    0.08980  79.487  < 2e-16 *** ## fYear7    7.23272    0.08974  80.597  < 2e-16 *** ## fYear8    7.16345    0.08979  79.784  < 2e-16 *** ## fYear9    7.05221    0.08987  78.475  < 2e-16 *** ## fYear10   7.10071    0.08983  79.046  < 2e-16 *** ## fPeriod2  0.36211    0.08027   4.511 6.44e-06 *** ## fPeriod3  0.41944    0.08024   5.227 1.72e-07 *** ## fPeriod4  0.34524    0.08027   4.301 1.70e-05 *** ## fPeriod5 -0.02515    0.08045  -0.313    0.755     ## fPeriod6 -0.47112    0.08076  -5.833 5.44e-09 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## (Dispersion parameter for Negative Binomial(31.7877) family taken to be 1) ##  ##     Null deviance: 541101.695  on 60  degrees of freedom ## Residual deviance:     60.596  on 45  degrees of freedom ## AIC: 852.28 ##  ## Number of Fisher Scoring iterations: 1 ##  ##  ##               Theta:  31.79  ##           Std. Err.:  5.96  ##  ##  2 x log-likelihood:  -820.275 extractor_logindex <- function(model) {   coef <- summary(model)$coefficients   log_index <- coef[grepl(\"fYear\", rownames(coef)), c(\"Estimate\", \"Std. Error\")]   log_index[, \"Estimate\"] <- log_index[, \"Estimate\"] -     log_index[\"fYear1\", \"Estimate\"]   log_index } model_glmm <- model_impute(   object = aggr_glmm, model_fun = glm.nb, rhs = \"0 + fYear + fPeriod\",   extractor = extractor_logindex ) model_p <- model_impute(   object = aggr_inla_p, model_fun = glm.nb, rhs = \"0 + fYear + fPeriod\",   extractor = extractor_logindex ) model_nb <- model_impute(   object = aggr_inla_nb, model_fun = glm.nb, rhs = \"0 + fYear + fPeriod\",   extractor = extractor_logindex ) model_better <- model_impute(   object = aggr_better, model_fun = glm.nb, rhs = \"0 + fYear + fPeriod\",   extractor = extractor_logindex ) model_complete <- extractor_logindex(model_complete) colnames(model_complete) <- c(\"Estimate\", \"SE\") library(dplyr) model_complete <- model_complete |>   as.data.frame() |>   mutate(     LCL = qnorm(0.025, Estimate, SE),     UCL = qnorm(0.975, Estimate, SE),     Parameter = paste0(\"fYear\", sort(unique(dataset$Year)))   ) covar <- data.frame(   Year = sort(unique(dataset$Year)) ) # combine all results and add the Year parameters <- rbind(   cbind(covar, model_glmm, Model = \"glmm\"),   cbind(covar, model_p, Model = \"poisson\"),   cbind(covar, model_nb, Model = \"negative binomial\"),   cbind(covar, model_better, Model = \"better\"),   cbind(covar, model_complete, Model = \"complete\") ) # convert estimate and confidence interval to the original scale parameters[, c(\"Estimate\", \"LCL\", \"UCL\")] <- exp(   parameters[, c(\"Estimate\", \"LCL\", \"UCL\")] ) ggplot(parameters, aes(x = Year, y = Estimate, ymin = LCL, ymax = UCL)) +   geom_hline(yintercept = 1, linetype = 3) +   geom_ribbon(alpha = 0.2) +   geom_line() +   facet_wrap(~Model)"},{"path":"https://inbo.github.io/multimput/articles/impute.html","id":"modelling-aggregated-data-with-inla","dir":"Articles","previous_headings":"Model the aggregated imputed dataset > Compare the results using different imputation models","what":"Modelling aggregated data with inla","title":"Model data with missing observations using multiple imputation","text":"example something similar. Two things different: 1) instead glm.nb use inla model imputed totals. 2) model seasonal pattern random intercept instead fixed effect. estimated relative index years.","code":"extractor_inla <- function(model) {   fe <- model$summary.fixed[, c(\"mean\", \"sd\")]   log_index <- fe[grepl(\"fYear\", rownames(fe)), ]   log_index[, \"mean\"] <- log_index[, \"mean\"] - log_index[\"fYear1\", \"mean\"]   log_index } model_p <- model_impute(   object = aggr_glmm, model_fun = inla,   rhs = \"0 + fYear + f(fPeriod, model = 'iid')\",   model_args = list(family = \"nbinomial\"), extractor = extractor_inla ) model_nb <- model_impute(   object = aggr_inla_nb, model_fun = inla,   rhs = \"0 + fYear + f(fPeriod, model = 'iid')\",   model_args = list(family = \"nbinomial\"), extractor = extractor_inla ) model_better <- model_impute(   object = aggr_better, model_fun = inla,   rhs = \"0 + fYear + f(fPeriod, model = 'iid')\",   model_args = list(family = \"nbinomial\"), extractor = extractor_inla ) m_complete <- inla(   Count ~ 0 + fYear + f(fPeriod, model = \"iid\"), data = aggr_complete,   family = \"nbinomial\" ) model_complete <- extractor_inla(m_complete) colnames(model_complete) <- c(\"Estimate\", \"SE\") model_complete <- model_complete |>   as.data.frame() |>   mutate(     LCL = qnorm(0.025, Estimate, SE),     UCL = qnorm(0.975, Estimate, SE),     Parameter = paste0(\"fYear\", sort(unique(dataset$Year)))   ) # combine all results and add the Year parameters <- rbind(   cbind(covar, model_glmm, Model = \"glmm\"),   cbind(covar, model_p, Model = \"poisson\"),   cbind(covar, model_nb, Model = \"negative binomial\"),   cbind(covar, model_better, Model = \"better\"),   cbind(covar, model_complete, Model = \"complete\") ) # convert estimate and confidence interval to the original scale parameters[, c(\"Estimate\", \"LCL\", \"UCL\")] <- exp(   parameters[, c(\"Estimate\", \"LCL\", \"UCL\")] ) ggplot(parameters, aes(x = Year, y = Estimate, ymin = LCL, ymax = UCL)) +   geom_hline(yintercept = 1, linetype = 3) +   geom_ribbon(alpha = 0.2) +   geom_line() +   facet_wrap(~Model)"},{"path":[]},{"path":"https://inbo.github.io/multimput/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thierry Onkelinx. Author, maintainer.            Research Institute Nature Forest (INBO) Koen Devos. Author.            Research Institute Nature Forest (INBO) Paul Quataert. Author. . Copyright holder, funder.","code":""},{"path":"https://inbo.github.io/multimput/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Onkelinx, Thierry; Devos, Koen; Quataert, Paul (2024) multimput: Using Multiple Imputation Address Missing Data. Version 0.2.14. https://inbo.github.io/multimput/","code":"@Manual{,   title = {multimput: Using Multiple Imputation to Address Missing Data. Version 0.2.14},   author = {Thierry Onkelinx and Koen Devos and Paul Quataert},   year = {2024},   url = {https://inbo.github.io/multimput/},   abstract = {Accompanying package for the paper: Working with population totals in the presence of missing data comparing imputation methods in terms of bias and precision. Published in 2017 in the Journal of Ornithology volume 158 page 603–615 (doi:10.1007/s10336-016-1404-9).},   keywords = {missing data, multiple imputation, Rubin},   doi = {10.5281/zenodo.598331}, }"},{"path":[]},{"path":"https://inbo.github.io/multimput/index.html","id":"rationale","dir":"","previous_headings":"","what":"Rationale","title":"Using Multiple Imputation to Address Missing Data","text":"multimput package originally intended provide data code replicate results Onkelinx, Devos, Quataert (2016). paper freely available http://dx.doi.org/10.1007/s10336-016-1404-9. functions rewritten make user-friendly generic. order make package compact, removed original code data starting version 0.2.6. However original code data remain available older releases.","code":""},{"path":"https://inbo.github.io/multimput/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Using Multiple Imputation to Address Missing Data","text":"helpfiles vignettes available https://inbo.github.io/multimput/","code":""},{"path":"https://inbo.github.io/multimput/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Using Multiple Imputation to Address Missing Data","text":"package requires INLA package. need install install.packages(\"INLA\", repos = \"https://inla.r-inla-download.org/R/stable\"). fails can use remotes::install_github(\"inbo/INLA\"). Note latter just read-mirror infrequently updated. Hence installing INLA https://inla.r-inla-download.org highly recommended. INLA installed, can install multimput using remotes package: remotes::install_github(\"inbo/multimput\", build_vignettes = TRUE)). view vignette use vignette(\"Impute\", package = \"multimput\"). vignette also available https://inbo.github.io/multimput/articles/impute.html docker image required dependencies available https://hub.docker.com/r/inbobmk/multimput/. Use docker pull inbobmk/multimput get .","code":""},{"path":"https://inbo.github.io/multimput/index.html","id":"folder-structure","dir":"","previous_headings":"","what":"Folder structure","title":"Using Multiple Imputation to Address Missing Data","text":"folder structure typical R packages mandatory R folder (definition functions) man (helpfiles Rd format). data optional folder data sets stored. optional test folder contains unit tests using infrastructure testthat package. optional vignette folder contains examples available themes. man-roxygen contains roxygen2 templates documentation.","code":"multimput |-- data |-- man |-- man-roxygen |-- R |-- tests    |-- testthat |-- vignettes"},{"path":"https://inbo.github.io/multimput/reference/aggregate_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate an imputed dataset — aggregate_impute","title":"Aggregate an imputed dataset — aggregate_impute","text":"Aggregate imputed dataset","code":""},{"path":"https://inbo.github.io/multimput/reference/aggregate_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate an imputed dataset — aggregate_impute","text":"","code":"aggregate_impute(object, grouping, fun, filter = list(), join)  # S4 method for class 'ANY' aggregate_impute(object, grouping, fun, filter = list(), join)  # S4 method for class 'rawImputed' aggregate_impute(object, grouping, fun, filter = list(), join)  # S4 method for class 'aggregatedImputed' aggregate_impute(object, grouping, fun, filter = list(), join)"},{"path":"https://inbo.github.io/multimput/reference/aggregate_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate an imputed dataset — aggregate_impute","text":"object rawImputed object. grouping vector variables names group aggregation . fun function aggregate. filter optional argument filter raw dataset aggregation. passed dplyr::filter(). join optional argument filter raw dataset based data.frame. dplyr::semi_join() applied join element join case join list.","code":""},{"path":"https://inbo.github.io/multimput/reference/aggregate_impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate an imputed dataset — aggregate_impute","text":"","code":"dataset <- generate_data(n_year = 10, n_site = 50, n_run = 1) dataset$Count[sample(nrow(dataset), 50)] <- NA model <- lm(Count ~ Year + factor(Period) + factor(Site), data = dataset) imputed <- impute(data = dataset, model = model) aggregate_impute(imputed, grouping = c(\"Year\", \"Period\"), fun = sum) #> An object of class \"aggregatedImputed\" #> Slot \"Covariate\": #>    Year Period #> 1     1      1 #> 2     1      2 #> 3     1      3 #> 4     1      4 #> 5     1      5 #> 6     1      6 #> 7     2      1 #> 8     2      2 #> 9     2      3 #> 10    2      4 #> 11    2      5 #> 12    2      6 #> 13    3      1 #> 14    3      2 #> 15    3      3 #> 16    3      4 #> 17    3      5 #> 18    3      6 #> 19    4      1 #> 20    4      2 #> 21    4      3 #> 22    4      4 #> 23    4      5 #> 24    4      6 #> 25    5      1 #> 26    5      2 #> 27    5      3 #> 28    5      4 #> 29    5      5 #> 30    5      6 #> 31    6      1 #> 32    6      2 #> 33    6      3 #> 34    6      4 #> 35    6      5 #> 36    6      6 #> 37    7      1 #> 38    7      2 #> 39    7      3 #> 40    7      4 #> 41    7      5 #> 42    7      6 #> 43    8      1 #> 44    8      2 #> 45    8      3 #> 46    8      4 #> 47    8      5 #> 48    8      6 #> 49    9      1 #> 50    9      2 #> 51    9      3 #> 52    9      4 #> 53    9      5 #> 54    9      6 #> 55   10      1 #> 56   10      2 #> 57   10      3 #> 58   10      4 #> 59   10      5 #> 60   10      6 #>  #> Slot \"Imputation\": #>       Imputation0001 Imputation0002 Imputation0003 Imputation0004 #>  [1,]       756.3526       734.4290       734.7943       754.6791 #>  [2,]      1067.0000      1067.0000      1067.0000      1067.0000 #>  [3,]      1947.1719      1962.5697      1969.5826      2025.1728 #>  [4,]      1300.8334      1314.5699      1314.4742      1337.1357 #>  [5,]       923.6729       878.4131       940.3766       952.5347 #>  [6,]       697.0000       697.0000       697.0000       697.0000 #>  [7,]       674.9876       843.9430       732.4395       701.7702 #>  [8,]      1096.7673      1103.7887      1044.7352      1112.1938 #>  [9,]      1821.0000      1821.0000      1821.0000      1821.0000 #> [10,]      1514.3596      1544.7936      1486.1576      1477.5799 #> [11,]      1003.2117      1018.3315      1072.5774      1079.9879 #> [12,]       620.6377       697.9800       578.5839       664.1148 #> [13,]      1007.5702      1001.5890       881.7306      1036.8691 #> [14,]      1445.5250      1463.4137      1455.3599      1408.6289 #> [15,]      1116.7524      1157.6726      1079.5502      1152.3430 #> [16,]       965.0000       965.0000       965.0000       965.0000 #> [17,]       429.0955       427.1248       421.8147       430.7142 #> [18,]       387.0000       387.0000       387.0000       387.0000 #> [19,]       499.2491       550.8225       535.6697       515.9135 #> [20,]      1137.0000      1137.0000      1137.0000      1137.0000 #> [21,]      1080.4678      1098.6832      1081.4857      1113.1610 #> [22,]      1240.1549      1229.2085      1206.2580      1244.1476 #> [23,]      1229.9433      1228.0616      1232.9711      1185.3930 #> [24,]       548.2974       477.2315       501.8332       493.6696 #> [25,]      1085.6475      1040.7069      1070.2838      1050.7967 #> [26,]      1746.0000      1746.0000      1746.0000      1746.0000 #> [27,]      1334.0000      1334.0000      1334.0000      1334.0000 #> [28,]      1162.8787      1135.8472      1198.9784      1161.8557 #> [29,]       584.0000       584.0000       584.0000       584.0000 #> [30,]       575.5428       642.2964       566.1852       649.5908 #> [31,]       785.0000       785.0000       785.0000       785.0000 #> [32,]      1291.0000      1291.0000      1291.0000      1291.0000 #> [33,]      1912.0000      1912.0000      1912.0000      1912.0000 #> [34,]      1832.0000      1832.0000      1832.0000      1832.0000 #> [35,]      1497.8362      1509.0415      1506.5780      1375.2277 #> [36,]       689.7552       670.1139       683.0374       630.2704 #> [37,]       824.4284       855.9830       754.8499       850.5965 #> [38,]      1403.7285      1321.7283      1370.7881      1436.1340 #> [39,]      1125.0000      1125.0000      1125.0000      1125.0000 #> [40,]      1200.0000      1200.0000      1200.0000      1200.0000 #> [41,]       819.9588       836.8221       804.0500       795.7137 #> [42,]       879.1477       861.7562       876.6918       872.0062 #> [43,]       621.0000       621.0000       621.0000       621.0000 #> [44,]       991.1248      1030.1170      1036.9789      1052.8339 #> [45,]      1073.1094      1146.0057      1136.9600      1028.7495 #> [46,]      1080.4544      1101.8357      1088.5774      1075.5436 #> [47,]       875.0000       875.0000       875.0000       875.0000 #> [48,]       526.0000       526.0000       526.0000       526.0000 #> [49,]       520.4784       513.8523       401.0042       490.8617 #> [50,]      1496.4838      1512.2244      1559.3394      1540.6975 #> [51,]      1363.0000      1363.0000      1363.0000      1363.0000 #> [52,]      1132.3621      1088.2788      1151.0379      1182.6207 #> [53,]       621.3340       611.5562       618.5966       670.3268 #> [54,]       405.0000       405.0000       405.0000       405.0000 #> [55,]       658.0000       658.0000       658.0000       658.0000 #> [56,]       996.0000       996.0000       996.0000       996.0000 #> [57,]      1382.9942      1333.6401      1366.9134      1402.3085 #> [58,]      1548.0000      1548.0000      1548.0000      1548.0000 #> [59,]       772.0000       772.0000       772.0000       772.0000 #> [60,]       567.5417       619.2688       646.8944       646.2323 #>       Imputation0005 Imputation0006 Imputation0007 Imputation0008 #>  [1,]       777.1575       777.0502       725.7339       782.4002 #>  [2,]      1067.0000      1067.0000      1067.0000      1067.0000 #>  [3,]      1940.5955      1909.9186      1956.6923      2038.3129 #>  [4,]      1301.3806      1304.2358      1293.6845      1266.0089 #>  [5,]       918.5958       952.7087       983.9895       931.2888 #>  [6,]       697.0000       697.0000       697.0000       697.0000 #>  [7,]       789.9625       722.3787       782.7494       746.5058 #>  [8,]      1106.4081      1102.4398      1101.4732      1151.2396 #>  [9,]      1821.0000      1821.0000      1821.0000      1821.0000 #> [10,]      1508.2606      1524.6855      1491.6162      1554.9514 #> [11,]      1027.2552      1073.4629      1088.5658      1022.3842 #> [12,]       620.6114       649.9751       615.9351       663.8915 #> [13,]       981.7254       935.6395       948.1448      1000.8034 #> [14,]      1435.9619      1404.1054      1424.6858      1458.3267 #> [15,]      1143.2234      1131.9240      1104.1557      1122.5821 #> [16,]       965.0000       965.0000       965.0000       965.0000 #> [17,]       404.3039       450.7239       467.6272       391.7591 #> [18,]       387.0000       387.0000       387.0000       387.0000 #> [19,]       530.0287       556.8164       558.8397       537.9898 #> [20,]      1137.0000      1137.0000      1137.0000      1137.0000 #> [21,]      1127.3270      1126.6531      1169.0293      1126.6007 #> [22,]      1232.1431      1279.2419      1233.4098      1281.8244 #> [23,]      1254.3693      1191.2632      1282.0444      1272.6835 #> [24,]       575.4052       580.3917       520.2302       494.4040 #> [25,]      1012.6618      1034.3870      1068.3449      1090.1999 #> [26,]      1746.0000      1746.0000      1746.0000      1746.0000 #> [27,]      1334.0000      1334.0000      1334.0000      1334.0000 #> [28,]      1147.8557      1206.0343      1190.0132      1214.1559 #> [29,]       584.0000       584.0000       584.0000       584.0000 #> [30,]       634.9835       693.5978       654.4297       601.3246 #> [31,]       785.0000       785.0000       785.0000       785.0000 #> [32,]      1291.0000      1291.0000      1291.0000      1291.0000 #> [33,]      1912.0000      1912.0000      1912.0000      1912.0000 #> [34,]      1832.0000      1832.0000      1832.0000      1832.0000 #> [35,]      1433.8443      1489.5043      1456.7516      1478.3300 #> [36,]       678.5509       693.2098       721.2096       697.9982 #> [37,]       825.7455       927.3899       817.2105       840.9626 #> [38,]      1310.3743      1481.5412      1348.5855      1363.7032 #> [39,]      1125.0000      1125.0000      1125.0000      1125.0000 #> [40,]      1200.0000      1200.0000      1200.0000      1200.0000 #> [41,]       773.7779       755.2333       766.6573       777.9643 #> [42,]       914.6413       842.1325       888.4747       905.2454 #> [43,]       621.0000       621.0000       621.0000       621.0000 #> [44,]      1019.6329      1013.7484      1010.0786      1016.3449 #> [45,]      1153.7357      1145.5965      1119.0917      1140.4010 #> [46,]      1136.9768      1042.0315      1103.8561      1114.8815 #> [47,]       875.0000       875.0000       875.0000       875.0000 #> [48,]       526.0000       526.0000       526.0000       526.0000 #> [49,]       436.5086       444.5606       535.8038       463.6371 #> [50,]      1553.2292      1561.6815      1515.1499      1552.6508 #> [51,]      1363.0000      1363.0000      1363.0000      1363.0000 #> [52,]      1174.4683      1188.1093      1135.7376      1120.2778 #> [53,]       662.5482       623.0870       626.0436       624.0827 #> [54,]       405.0000       405.0000       405.0000       405.0000 #> [55,]       658.0000       658.0000       658.0000       658.0000 #> [56,]       996.0000       996.0000       996.0000       996.0000 #> [57,]      1308.9352      1403.7359      1426.9446      1346.0950 #> [58,]      1548.0000      1548.0000      1548.0000      1548.0000 #> [59,]       772.0000       772.0000       772.0000       772.0000 #> [60,]       613.0373       560.2690       609.4566       646.2113 #>       Imputation0009 Imputation0010 Imputation0011 Imputation0012 #>  [1,]       762.3365       702.4994       754.5193       701.4686 #>  [2,]      1067.0000      1067.0000      1067.0000      1067.0000 #>  [3,]      1826.9642      1965.3479      2002.8980      1935.5162 #>  [4,]      1274.7922      1334.9214      1343.1334      1284.9220 #>  [5,]       987.0087       923.4516       898.0379       901.0275 #>  [6,]       697.0000       697.0000       697.0000       697.0000 #>  [7,]       706.1038       792.2479       794.5704       749.4217 #>  [8,]      1184.2485      1145.9764      1115.2753      1138.1598 #>  [9,]      1821.0000      1821.0000      1821.0000      1821.0000 #> [10,]      1532.0102      1503.4456      1470.4584      1503.1981 #> [11,]      1008.6793      1030.2800      1086.4156      1025.6837 #> [12,]       637.1983       641.4424       672.9571       675.4227 #> [13,]      1041.2325      1002.3852       967.5405      1003.9373 #> [14,]      1460.2299      1435.9974      1436.7831      1406.8152 #> [15,]      1154.6468      1098.4794      1126.4899      1067.0077 #> [16,]       965.0000       965.0000       965.0000       965.0000 #> [17,]       403.4692       405.0092       455.8890       394.5001 #> [18,]       387.0000       387.0000       387.0000       387.0000 #> [19,]       482.9874       536.2932       443.6764       575.8810 #> [20,]      1137.0000      1137.0000      1137.0000      1137.0000 #> [21,]      1080.4487      1131.3208      1130.8488      1119.7201 #> [22,]      1273.2778      1239.2402      1241.5470      1207.1243 #> [23,]      1180.1830      1275.8002      1208.4689      1193.5587 #> [24,]       570.5918       551.7186       590.6041       527.2699 #> [25,]      1046.4649      1044.1372      1036.9793      1024.3054 #> [26,]      1746.0000      1746.0000      1746.0000      1746.0000 #> [27,]      1334.0000      1334.0000      1334.0000      1334.0000 #> [28,]      1120.7270      1210.7327      1157.9030      1171.4021 #> [29,]       584.0000       584.0000       584.0000       584.0000 #> [30,]       609.9457       551.9321       589.3027       537.6691 #> [31,]       785.0000       785.0000       785.0000       785.0000 #> [32,]      1291.0000      1291.0000      1291.0000      1291.0000 #> [33,]      1912.0000      1912.0000      1912.0000      1912.0000 #> [34,]      1832.0000      1832.0000      1832.0000      1832.0000 #> [35,]      1439.4738      1522.3846      1442.0762      1500.1594 #> [36,]       638.4892       698.4770       688.8377       705.6235 #> [37,]       813.0453       862.0413       849.8011       849.5343 #> [38,]      1295.8157      1409.4346      1401.1996      1251.0787 #> [39,]      1125.0000      1125.0000      1125.0000      1125.0000 #> [40,]      1200.0000      1200.0000      1200.0000      1200.0000 #> [41,]       781.5310       753.2245       830.3501       800.2953 #> [42,]       956.3875       851.1245       886.6091       823.3506 #> [43,]       621.0000       621.0000       621.0000       621.0000 #> [44,]      1024.1337      1014.9217      1002.6583      1016.6846 #> [45,]      1090.5448      1084.0804      1144.9754      1144.0011 #> [46,]      1083.3307      1117.9794      1052.4657      1138.1113 #> [47,]       875.0000       875.0000       875.0000       875.0000 #> [48,]       526.0000       526.0000       526.0000       526.0000 #> [49,]       417.6197       368.2496       488.7746       443.2056 #> [50,]      1494.1742      1492.3820      1485.8659      1535.0662 #> [51,]      1363.0000      1363.0000      1363.0000      1363.0000 #> [52,]      1174.3571      1147.8157      1133.4019      1140.3049 #> [53,]       639.7818       594.2266       693.6094       662.0018 #> [54,]       405.0000       405.0000       405.0000       405.0000 #> [55,]       658.0000       658.0000       658.0000       658.0000 #> [56,]       996.0000       996.0000       996.0000       996.0000 #> [57,]      1451.1800      1303.8054      1333.6563      1306.0203 #> [58,]      1548.0000      1548.0000      1548.0000      1548.0000 #> [59,]       772.0000       772.0000       772.0000       772.0000 #> [60,]       618.1451       565.1245       617.9595       625.1172 #>       Imputation0013 Imputation0014 Imputation0015 Imputation0016 #>  [1,]       734.9059       682.9614       726.0731       722.4775 #>  [2,]      1067.0000      1067.0000      1067.0000      1067.0000 #>  [3,]      1965.6300      2050.8871      2018.6023      2003.7769 #>  [4,]      1306.0825      1304.0560      1272.0326      1367.8217 #>  [5,]       943.7690       929.8961       903.8432       961.4262 #>  [6,]       697.0000       697.0000       697.0000       697.0000 #>  [7,]       771.7014       770.3811       833.0295       719.1908 #>  [8,]      1052.5544      1020.4598      1057.9895      1105.6142 #>  [9,]      1821.0000      1821.0000      1821.0000      1821.0000 #> [10,]      1524.3258      1537.2743      1488.2460      1515.1131 #> [11,]      1107.7228      1080.8152      1042.2053      1014.4154 #> [12,]       653.2549       667.7424       612.3179       674.6549 #> [13,]       983.5168       961.9835       933.9022       935.1612 #> [14,]      1415.8872      1398.7146      1459.7217      1506.5152 #> [15,]      1095.7598      1109.9671      1120.0672      1094.0817 #> [16,]       965.0000       965.0000       965.0000       965.0000 #> [17,]       419.2068       400.8527       411.1601       402.4652 #> [18,]       387.0000       387.0000       387.0000       387.0000 #> [19,]       505.2765       542.8521       497.6097       509.1735 #> [20,]      1137.0000      1137.0000      1137.0000      1137.0000 #> [21,]      1105.4495      1113.8871      1088.6780      1133.6379 #> [22,]      1255.0148      1263.2007      1225.5397      1212.7531 #> [23,]      1194.6409      1234.9469      1214.8926      1165.8309 #> [24,]       525.2650       510.5291       496.1009       542.9157 #> [25,]      1078.3206      1035.4586      1009.6423      1081.5098 #> [26,]      1746.0000      1746.0000      1746.0000      1746.0000 #> [27,]      1334.0000      1334.0000      1334.0000      1334.0000 #> [28,]      1168.0524      1162.3855      1154.7688      1181.2978 #> [29,]       584.0000       584.0000       584.0000       584.0000 #> [30,]       694.3590       620.3692       633.8897       531.6744 #> [31,]       785.0000       785.0000       785.0000       785.0000 #> [32,]      1291.0000      1291.0000      1291.0000      1291.0000 #> [33,]      1912.0000      1912.0000      1912.0000      1912.0000 #> [34,]      1832.0000      1832.0000      1832.0000      1832.0000 #> [35,]      1458.6805      1474.2558      1415.3017      1392.3547 #> [36,]       705.8275       696.7865       674.7753       625.8122 #> [37,]       826.2039       841.2898       830.6565       906.7560 #> [38,]      1390.1662      1357.6213      1430.8220      1330.0074 #> [39,]      1125.0000      1125.0000      1125.0000      1125.0000 #> [40,]      1200.0000      1200.0000      1200.0000      1200.0000 #> [41,]       841.0511       748.9825       744.9457       768.4256 #> [42,]       902.7139       946.1529       892.9410       902.8751 #> [43,]       621.0000       621.0000       621.0000       621.0000 #> [44,]      1005.8134       944.1505       976.8940      1006.8101 #> [45,]      1050.5889      1208.7150      1112.8573      1026.0176 #> [46,]      1110.6308      1064.0595      1035.6353      1071.5970 #> [47,]       875.0000       875.0000       875.0000       875.0000 #> [48,]       526.0000       526.0000       526.0000       526.0000 #> [49,]       515.9279       448.3636       500.2307       544.1037 #> [50,]      1507.8152      1531.6430      1488.3937      1567.0617 #> [51,]      1363.0000      1363.0000      1363.0000      1363.0000 #> [52,]      1099.0646      1122.1181      1140.1346      1165.6774 #> [53,]       655.6631       626.4257       627.7772       696.3059 #> [54,]       405.0000       405.0000       405.0000       405.0000 #> [55,]       658.0000       658.0000       658.0000       658.0000 #> [56,]       996.0000       996.0000       996.0000       996.0000 #> [57,]      1355.6644      1341.9050      1323.1260      1387.6118 #> [58,]      1548.0000      1548.0000      1548.0000      1548.0000 #> [59,]       772.0000       772.0000       772.0000       772.0000 #> [60,]       590.5856       647.4067       658.4874       659.8481 #>       Imputation0017 Imputation0018 Imputation0019 #>  [1,]       738.7338       726.3210       728.7715 #>  [2,]      1067.0000      1067.0000      1067.0000 #>  [3,]      1989.3143      2026.1021      2067.8230 #>  [4,]      1291.1363      1338.1904      1259.3492 #>  [5,]       946.6657       842.8117       940.2037 #>  [6,]       697.0000       697.0000       697.0000 #>  [7,]       783.8549       834.4632       781.6655 #>  [8,]      1035.9830      1103.8968      1080.5993 #>  [9,]      1821.0000      1821.0000      1821.0000 #> [10,]      1491.4572      1552.5197      1488.5066 #> [11,]      1090.7591      1084.1834       971.9762 #> [12,]       654.9439       630.8406       586.6854 #> [13,]       933.2566       893.8548       987.6105 #> [14,]      1400.0275      1435.0666      1391.1023 #> [15,]      1133.4538      1174.2747      1117.8469 #> [16,]       965.0000       965.0000       965.0000 #> [17,]       444.4995       404.0816       412.8053 #> [18,]       387.0000       387.0000       387.0000 #> [19,]       507.9464       511.6933       528.5907 #> [20,]      1137.0000      1137.0000      1137.0000 #> [21,]      1083.3817      1128.9490      1106.0187 #> [22,]      1239.8899      1282.9062      1215.2118 #> [23,]      1210.6404      1176.8412      1277.2041 #> [24,]       604.5069       520.2017       488.1031 #> [25,]      1112.8337      1060.6292      1079.6510 #> [26,]      1746.0000      1746.0000      1746.0000 #> [27,]      1334.0000      1334.0000      1334.0000 #> [28,]      1166.7804      1127.6374      1160.3206 #> [29,]       584.0000       584.0000       584.0000 #> [30,]       649.2854       631.5079       695.9504 #> [31,]       785.0000       785.0000       785.0000 #> [32,]      1291.0000      1291.0000      1291.0000 #> [33,]      1912.0000      1912.0000      1912.0000 #> [34,]      1832.0000      1832.0000      1832.0000 #> [35,]      1441.0126      1484.3318      1492.2947 #> [36,]       681.8295       610.5560       699.5633 #> [37,]       832.5401       822.9822       798.8032 #> [38,]      1387.8170      1382.2515      1417.8331 #> [39,]      1125.0000      1125.0000      1125.0000 #> [40,]      1200.0000      1200.0000      1200.0000 #> [41,]       801.3724       781.7383       843.9341 #> [42,]       880.4329       824.3995       899.4606 #> [43,]       621.0000       621.0000       621.0000 #> [44,]      1046.8741      1006.1536      1020.6185 #> [45,]      1131.6942      1126.0651      1142.1394 #> [46,]      1062.8018      1105.7430      1021.0993 #> [47,]       875.0000       875.0000       875.0000 #> [48,]       526.0000       526.0000       526.0000 #> [49,]       488.4032       469.5937       520.7041 #> [50,]      1468.4070      1528.1518      1512.3829 #> [51,]      1363.0000      1363.0000      1363.0000 #> [52,]      1150.7099      1105.8309      1120.2139 #> [53,]       632.7313       660.4897       649.3671 #> [54,]       405.0000       405.0000       405.0000 #> [55,]       658.0000       658.0000       658.0000 #> [56,]       996.0000       996.0000       996.0000 #> [57,]      1349.1546      1351.2851      1394.5557 #> [58,]      1548.0000      1548.0000      1548.0000 #> [59,]       772.0000       772.0000       772.0000 #> [60,]       703.0794       562.7616       632.2358 #>"},{"path":"https://inbo.github.io/multimput/reference/aggregatedImputed-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The aggregatedImputed class Holds an aggregated imputation data set — aggregatedImputed-class","title":"The aggregatedImputed class Holds an aggregated imputation data set — aggregatedImputed-class","text":"aggregatedImputed class Holds aggregated imputation data set","code":""},{"path":"https://inbo.github.io/multimput/reference/aggregatedImputed-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The aggregatedImputed class Holds an aggregated imputation data set — aggregatedImputed-class","text":"Covariate data.frame covariates. Imputation matrix aggregated imputed values.","code":""},{"path":"https://inbo.github.io/multimput/reference/generate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated data — generate_data","title":"Generate simulated data — generate_data","text":"Generate data regular monitoring design. counts follow negative binomial distribution given size parameters true mean mu depending year, period site effect. effects independent , log-scale, normal distribution zero mean given standard deviation.","code":""},{"path":"https://inbo.github.io/multimput/reference/generate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated data — generate_data","text":"","code":"generate_data(   intercept = 2,   n_year = 24,   n_period = 6,   n_site = 20,   year_factor = FALSE,   period_factor = FALSE,   site_factor = FALSE,   trend = 0.01,   sd_rw_year = 0.1,   amplitude_period = 1,   mean_phase_period = 0,   sd_phase_period = 0.2,   sd_site = 1,   sd_rw_site = 0.02,   sd_noise = 0.01,   size = 2,   n_run = 10,   as_list = FALSE,   details = FALSE )"},{"path":"https://inbo.github.io/multimput/reference/generate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated data — generate_data","text":"intercept global mean log-scale. n_year number years. n_period number periods. n_site number sites. year_factor Convert year factor. Defaults FALSE. period_factor Convert period factor. Defaults FALSE. site_factor Convert site factor. Defaults FALSE. trend long-term linear trend log-scale. sd_rw_year standard deviation year effects log-scale. amplitude_period amplitude periodic effect log-scale. mean_phase_period mean phase periodic effect among years. Defaults 0. sd_phase_period standard deviation phase periodic effect among years. sd_site standard deviation site effects log-scale. sd_rw_site standard deviation random walk along year per site log-scale. sd_noise standard deviation noise effects log-scale. size size parameter negative binomial distribution. n_run number runs mu. as_list Return dataset list rather data.frame. Defaults FALSE. details Add variables containing year, period site effects. Defaults tot FALSE.","code":""},{"path":"https://inbo.github.io/multimput/reference/generate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated data — generate_data","text":"data.frame five variables. Year, Month Site factors identifying location time monitoring. Mu true mean negative binomial distribution original scale. Count simulated counts.","code":""},{"path":"https://inbo.github.io/multimput/reference/hurdle_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two models into a hurdle model — hurdle_impute","title":"Combine two models into a hurdle model — hurdle_impute","text":"Multiplies imputed values presence model count model. Please make sure order observations models identical. resulting object contain union covariates models. Variables name different values get presence_ count_ prefix.","code":""},{"path":"https://inbo.github.io/multimput/reference/hurdle_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two models into a hurdle model — hurdle_impute","text":"","code":"hurdle_impute(presence, count)"},{"path":"https://inbo.github.io/multimput/reference/hurdle_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two models into a hurdle model — hurdle_impute","text":"presence rawImputed object presence. count rawImputed object counts.","code":""},{"path":"https://inbo.github.io/multimput/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute a dataset — impute","title":"Impute a dataset — impute","text":"Impute dataset","code":""},{"path":"https://inbo.github.io/multimput/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute a dataset — impute","text":"","code":"impute(model, ..., extra, n_imp = 19)  # S4 method for class 'ANY' impute(model, ..., extra, n_imp = 19)  # S4 method for class 'glmerMod' impute(model, data, ..., extra, n_imp)  # S4 method for class 'maybeInla' impute(   model,   ...,   seed = 0L,   num_threads = NULL,   parallel_configs = TRUE,   extra,   n_imp = 19 )  # S4 method for class 'lm' impute(model, data, ..., extra, n_imp)"},{"path":"https://inbo.github.io/multimput/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute a dataset — impute","text":"model model impute dataset ... arguments. See details extra data.frame extra observations used model. added subsequent analyses. n_imp number imputations. Defaults 19. data dataset holding observed missing values seed See argument INLA::inla.qsample() information. order produce reproducible results, ALSO need make sure RNG R state, see example INLA::inla.posterior.sample(). seed non-zero, num_threads forced \"1:1\" parallel_configs set FALSE, since parallel sampling produce reproducible sequence pseudo-random numbers. num_threads number threads use format \":B\" defining number threads outer () inner (B) layer nested parallelism. \"0\" replaced intelligently. seed != 0 requires serial computations. parallel_configs Logical. TRUE Windows, try run configuration parallel (Windows) using threads (see num_threads), using B:0 threads.","code":""},{"path":"https://inbo.github.io/multimput/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute a dataset — impute","text":"","code":"dataset <- generate_data(n_year = 10, n_site = 50, n_run = 1) dataset$Count[sample(nrow(dataset), 50)] <- NA model <- lm(Count ~ Year + factor(Period) + factor(Site), data = dataset) impute(model, dataset) #> An object of class \"rawImputed\" #> Slot \"Data\": #>      Year Period Site          Mu Run Count #> 1       1      1    1  10.9194207   1    13 #> 2       2      1    1  14.4895493   1    12 #> 3       3      1    1  17.7822371   1     9 #> 4       4      1    1  14.4718502   1    12 #> 5       5      1    1   8.6200620   1    21 #> 6       6      1    1  15.4208607   1    18 #> 7       7      1    1  15.1123062   1    52 #> 8       8      1    1  15.9243235   1    28 #> 9       9      1    1  15.5552789   1    10 #> 10     10      1    1  14.2201519   1    20 #> 11      1      2    1  16.9654269   1     9 #> 12      2      2    1  19.9747219   1    27 #> 13      3      2    1  22.5172730   1    38 #> 14      4      2    1  19.9130770   1     3 #> 15      5      2    1  13.9703354   1     2 #> 16      6      2    1  21.5945729   1     7 #> 17      7      2    1  20.5658553   1     5 #> 18      8      2    1  23.3105212   1    28 #> 19      9      2    1  20.8788370   1    11 #> 20     10      2    1  20.1704877   1     2 #> 21      1      3    1  21.6860791   1    12 #> 22      2      3    1  21.2470292   1    68 #> 23      3      3    1  22.1896350   1     9 #> 24      4      3    1  21.5729214   1    18 #> 25      5      3    1  18.6904176   1    16 #> 26      6      3    1  22.7147512   1    99 #> 27      7      3    1  22.4982385   1    13 #> 28      8      3    1  27.1048033   1    23 #> 29      9      3    1  21.9189680   1    14 #> 30     10      3    1  23.1584038   1    41 #> 31      1      4    1  21.1840687   1    13 #> 32      2      4    1  16.9691060   1    17 #> 33      3      4    1  16.7410588   1    31 #> 34      4      4    1  18.0535474   1     4 #> 35      5      4    1  19.4167462   1     8 #> 36      6      4    1  18.5602521   1     9 #> 37      7      4    1  18.5840396   1    33 #> 38      8      4    1  23.7230045   1    57 #> 39      9      4    1  17.5345000   1    46 #> 40     10      4    1  20.1292184   1    11 #> 41      1      5    1  16.0664222   1    20 #> 42      2      5    1  11.3439276   1     7 #> 43      3      5    1  10.7999097   1     3 #> 44      4      5    1  12.0516631   1     8 #> 45      5      5    1  15.5197357   1    11 #> 46      6      5    1  12.1031301   1    18 #> 47      7      5    1  12.6200359   1     7 #> 48      8      5    1  16.2618918   1     2 #> 49      9      5    1  11.5576332   1     5 #> 50     10      5    1  13.6645810   1    25 #> 51      1      6    1  10.3436909   1     3 #> 52      2      6    1   6.9226153   1    11 #> 53      3      6    1   6.4397429   1     3 #> 54      4      6    1   7.3640250   1     3 #> 55      5      6    1  10.1879768   1    NA #> 56      6      6    1   7.5709997   1     5 #> 57      7      6    1   7.4162435   1     8 #> 58      8      6    1   9.9919082   1     2 #> 59      9      6    1   6.9345434   1     0 #> 60     10      6    1   8.3375077   1     4 #> 61      1      1    2   3.2590049   1     6 #> 62      2      1    2   4.3590642   1     3 #> 63      3      1    2   5.1488110   1     2 #> 64      4      1    2   4.3306251   1     2 #> 65      5      1    2   2.7340790   1     0 #> 66      6      1    2   4.7007962   1     4 #> 67      7      1    2   4.4745477   1     1 #> 68      8      1    2   4.7643584   1     4 #> 69      9      1    2   4.7129123   1     0 #> 70     10      1    2   4.4664090   1     6 #> 71      1      2    2   5.1765084   1     3 #> 72      2      2    2   5.8792490   1     9 #> 73      3      2    2   6.6885516   1     9 #> 74      4      2    2   5.9980842   1     3 #> 75      5      2    2   4.3295329   1     3 #> 76      6      2    2   6.3659029   1     6 #> 77      7      2    2   6.2390299   1     8 #> 78      8      2    2   6.9471723   1     6 #> 79      9      2    2   6.3537731   1     8 #> 80     10      2    2   6.3920897   1     3 #> 81      1      3    2   6.5895549   1    21 #> 82      2      3    2   6.3894318   1     2 #> 83      3      3    2   6.6851416   1     3 #> 84      4      3    2   6.5325792   1     0 #> 85      5      3    2   5.8000207   1    25 #> 86      6      3    2   6.9277636   1     6 #> 87      7      3    2   6.6749879   1    13 #> 88      8      3    2   7.9918747   1    10 #> 89      9      3    2   6.6526291   1    23 #> 90     10      3    2   7.2032152   1     5 #> 91      1      4    2   6.4459433   1     7 #> 92      2      4    2   5.2177320   1     3 #> 93      3      4    2   5.1002514   1     6 #> 94      4      4    2   5.4998065   1     3 #> 95      5      4    2   6.1634232   1     2 #> 96      6      4    2   5.5796743   1     4 #> 97      7      4    2   5.5131923   1     6 #> 98      8      4    2   7.0241636   1     0 #> 99      9      4    2   5.3436537   1     2 #> 100    10      4    2   6.2421965   1     7 #> 101     1      5    2   4.8901402   1     7 #> 102     2      5    2   3.4200961   1     2 #> 103     3      5    2   3.2655819   1     1 #> 104     4      5    2   3.6948011   1     9 #> 105     5      5    2   4.8340049   1     4 #> 106     6      5    2   3.7612671   1     1 #> 107     7      5    2   3.6990384   1     5 #> 108     8      5    2   4.8382552   1     5 #> 109     9      5    2   3.5133556   1     1 #> 110    10      5    2   4.2449282   1     0 #> 111     1      6    2   3.0940915   1     2 #> 112     2      6    2   2.0270251   1     0 #> 113     3      6    2   1.9450822   1     3 #> 114     4      6    2   2.1799396   1     2 #> 115     5      6    2   3.1604792   1     2 #> 116     6      6    2   2.2624925   1    NA #> 117     7      6    2   2.1912681   1     3 #> 118     8      6    2   2.9551611   1     3 #> 119     9      6    2   2.0748194   1     2 #> 120    10      6    2   2.5603505   1     1 #> 121     1      1    3  13.5597331   1    18 #> 122     2      1    3  18.0006581   1     7 #> 123     3      1    3  21.8045314   1    13 #> 124     4      1    3  18.0171052   1    33 #> 125     5      1    3  11.4913665   1     7 #> 126     6      1    3  20.0164941   1    14 #> 127     7      1    3  18.6610008   1    16 #> 128     8      1    3  20.3779390   1    31 #> 129     9      1    3  20.1435565   1    15 #> 130    10      1    3  18.5905135   1    18 #> 131     1      2    3  20.7835413   1    46 #> 132     2      2    3  24.9093995   1    16 #> 133     3      2    3  28.6237494   1    59 #> 134     4      2    3  24.6673498   1    43 #> 135     5      2    3  18.4240950   1    17 #> 136     6      2    3  27.1609774   1    23 #> 137     7      2    3  25.4513059   1     9 #> 138     8      2    3  29.5565664   1    12 #> 139     9      2    3  27.3444709   1    13 #> 140    10      2    3  27.0979234   1    15 #> 141     1      3    3  26.7936387   1    18 #> 142     2      3    3  26.9153051   1     4 #> 143     3      3    3  28.4944207   1     6 #> 144     4      3    3  27.6258295   1    19 #> 145     5      3    3  24.8257840   1     5 #> 146     6      3    3  29.2105780   1    NA #> 147     7      3    3  28.0043082   1    40 #> 148     8      3    3  33.6804833   1    42 #> 149     9      3    3  29.0585186   1    20 #> 150    10      3    3  30.3915165   1    48 #> 151     1      4    3  26.1614686   1    13 #> 152     2      4    3  21.4834388   1    11 #> 153     3      4    3  21.4593318   1     9 #> 154     4      4    3  23.2973382   1    28 #> 155     5      4    3  25.7780911   1    14 #> 156     6      4    3  24.2903264   1    46 #> 157     7      4    3  22.8368660   1    34 #> 158     8      4    3  30.2822504   1    37 #> 159     9      4    3  22.5336407   1    61 #> 160    10      4    3  26.4863148   1    11 #> 161     1      5    3  19.7264356   1    25 #> 162     2      5    3  14.3806869   1    18 #> 163     3      5    3  13.8640866   1    26 #> 164     4      5    3  15.4674015   1     5 #> 165     5      5    3  20.4541615   1    21 #> 166     6      5    3  15.8135887   1     8 #> 167     7      5    3  15.6504914   1    14 #> 168     8      5    3  21.0156024   1    28 #> 169     9      5    3  15.0886008   1     6 #> 170    10      5    3  18.1132444   1    18 #> 171     1      6    3  12.6175972   1     9 #> 172     2      6    3   8.6207859   1    11 #> 173     3      6    3   8.1773806   1     3 #> 174     4      6    3   9.4452993   1     1 #> 175     5      6    3  13.4836646   1     0 #> 176     6      6    3   9.7992744   1     1 #> 177     7      6    3   9.1972373   1    11 #> 178     8      6    3  12.4676896   1     5 #> 179     9      6    3   8.9846248   1    12 #> 180    10      6    3  10.9347669   1     4 #> 181     1      1    4  23.5591537   1    11 #> 182     2      1    4  30.6467767   1    31 #> 183     3      1    4  37.0988530   1    40 #> 184     4      1    4  29.0909778   1    24 #> 185     5      1    4  18.3826720   1    10 #> 186     6      1    4  31.9436542   1    38 #> 187     7      1    4  29.5592905   1    27 #> 188     8      1    4  31.7092637   1    55 #> 189     9      1    4  30.6216923   1     1 #> 190    10      1    4  29.5196297   1    29 #> 191     1      2    4  36.8251436   1    63 #> 192     2      2    4  42.2979101   1    35 #> 193     3      2    4  48.1489120   1     5 #> 194     4      2    4  40.7486987   1    27 #> 195     5      2    4  29.7610207   1    21 #> 196     6      2    4  42.8832720   1    11 #> 197     7      2    4  40.0677124   1    14 #> 198     8      2    4  45.9705286   1    17 #> 199     9      2    4  41.3349721   1    24 #> 200    10      2    4  43.0789552   1    39 #> 201     1      3    4  46.7710113   1    39 #> 202     2      3    4  44.7132047   1    59 #> 203     3      3    4  46.4968617   1    84 #> 204     4      3    4  44.1342345   1    24 #> 205     5      3    4  39.5697273   1    47 #> 206     6      3    4  46.4110099   1    85 #> 207     7      3    4  44.3377496   1    57 #> 208     8      3    4  52.8693573   1   142 #> 209     9      3    4  43.5793085   1    18 #> 210    10      3    4  47.1216991   1    45 #> 211     1      4    4  45.5111271   1    11 #> 212     2      4    4  36.6912657   1    21 #> 213     3      4    4  36.3830415   1    39 #> 214     4      4    4  37.0410518   1    85 #> 215     5      4    4  41.1584032   1    55 #> 216     6      4    4  37.5281789   1    23 #> 217     7      4    4  36.2841822   1    12 #> 218     8      4    4  46.5765585   1    33 #> 219     9      4    4  33.9750882   1    33 #> 220    10      4    4  41.1490269   1    30 #> 221     1      5    4  34.6311360   1     3 #> 222     2      5    4  24.0304228   1     5 #> 223     3      5    4  22.7926221   1    27 #> 224     4      5    4  24.3560286   1     5 #> 225     5      5    4  32.5674538   1     7 #> 226     6      5    4  25.5612204   1    28 #> 227     7      5    4  23.9949368   1    25 #> 228     8      5    4  32.1330105   1    25 #> 229     9      5    4  22.6568497   1     7 #> 230    10      5    4  28.2876129   1    12 #> 231     1      6    4  21.9132215   1    55 #> 232     2      6    4  14.6686149   1    41 #> 233     3      6    4  13.3009502   1    18 #> 234     4      6    4  14.9618373   1     6 #> 235     5      6    4  21.3259825   1    16 #> 236     6      6    4  14.7447365   1    15 #> 237     7      6    4  14.5357475   1     8 #> 238     8      6    4  19.6828881   1     3 #> 239     9      6    4  13.4064454   1    15 #> 240    10      6    4  17.0632241   1    19 #> 241     1      1    5  13.8612667   1    15 #> 242     2      1    5  18.1500473   1    10 #> 243     3      1    5  22.8308325   1    15 #> 244     4      1    5  18.3647954   1    34 #> 245     5      1    5  11.4770242   1    10 #> 246     6      1    5  19.5137122   1    31 #> 247     7      1    5  18.4427610   1    49 #> 248     8      1    5  19.3172482   1    10 #> 249     9      1    5  17.5940766   1    14 #> 250    10      1    5  16.4005628   1     1 #> 251     1      2    5  21.5503176   1    32 #> 252     2      2    5  24.4757514   1    10 #> 253     3      2    5  29.2012710   1    36 #> 254     4      2    5  25.9436630   1    11 #> 255     5      2    5  17.6319905   1     8 #> 256     6      2    5  27.3964484   1     7 #> 257     7      2    5  26.2303050   1    10 #> 258     8      2    5  27.7041290   1     4 #> 259     9      2    5  23.6592374   1    23 #> 260    10      2    5  23.2837213   1    59 #> 261     1      3    5  27.7569278   1    34 #> 262     2      3    5  26.2284633   1    44 #> 263     3      3    5  28.7654265   1     3 #> 264     4      3    5  28.5504512   1    32 #> 265     5      3    5  24.1011757   1    38 #> 266     6      3    5  28.6168506   1    NA #> 267     7      3    5  27.6612424   1    25 #> 268     8      3    5  31.9169049   1    35 #> 269     9      3    5  24.8295875   1     5 #> 270    10      3    5  26.4571585   1    14 #> 271     1      4    5  26.7738797   1    24 #> 272     2      4    5  21.1366748   1    16 #> 273     3      4    5  21.8158543   1     9 #> 274     4      4    5  23.3579213   1     0 #> 275     5      4    5  25.7980527   1    67 #> 276     6      4    5  23.5550903   1    20 #> 277     7      4    5  23.2399383   1    18 #> 278     8      4    5  27.6758681   1     8 #> 279     9      4    5  19.6900517   1    22 #> 280    10      4    5  22.9999358   1    45 #> 281     1      5    5  20.4872689   1    48 #> 282     2      5    5  14.1352118   1    19 #> 283     3      5    5  13.8164812   1    10 #> 284     4      5    5  15.8645221   1     4 #> 285     5      5    5  20.3211593   1    13 #> 286     6      5    5  15.6609161   1    11 #> 287     7      5    5  15.4641470   1    21 #> 288     8      5    5  19.3354471   1    35 #> 289     9      5    5  12.8846413   1     6 #> 290    10      5    5  15.7296277   1    12 #> 291     1      6    5  12.8044288   1    35 #> 292     2      6    5   8.3987106   1     6 #> 293     3      6    5   8.3342949   1     3 #> 294     4      6    5   9.4241981   1    28 #> 295     5      6    5  13.5166171   1    18 #> 296     6      6    5   9.4292715   1     1 #> 297     7      6    5   9.2711248   1     2 #> 298     8      6    5  11.7915328   1    11 #> 299     9      6    5   7.7858017   1    15 #> 300    10      6    5   9.4786468   1     4 #> 301     1      1    6   5.2012794   1     2 #> 302     2      1    6   6.8844812   1     6 #> 303     3      1    6   8.3422686   1     9 #> 304     4      1    6   6.5977021   1     3 #> 305     5      1    6   4.0933212   1     4 #> 306     6      1    6   7.3144701   1     5 #> 307     7      1    6   6.7887165   1     5 #> 308     8      1    6   7.2868001   1     4 #> 309     9      1    6   7.1419625   1    11 #> 310    10      1    6   7.0233043   1     5 #> 311     1      2    6   8.0995202   1     7 #> 312     2      2    6   9.6440155   1    22 #> 313     3      2    6  10.7414449   1    10 #> 314     4      2    6   9.1974758   1     7 #> 315     5      2    6   6.6694702   1    24 #> 316     6      2    6   9.8506154   1     8 #> 317     7      2    6   9.7317061   1    14 #> 318     8      2    6  10.4951938   1    33 #> 319     9      2    6   9.6617819   1    21 #> 320    10      2    6   9.8787892   1    19 #> 321     1      3    6  10.4954242   1    12 #> 322     2      3    6  10.2120431   1     7 #> 323     3      3    6  10.6256665   1    18 #> 324     4      3    6  10.1767427   1     5 #> 325     5      3    6   8.7199815   1     5 #> 326     6      3    6  10.7010029   1    14 #> 327     7      3    6  10.3451031   1     7 #> 328     8      3    6  12.1124645   1     2 #> 329     9      3    6   9.9757874   1     3 #> 330    10      3    6  11.0676096   1    10 #> 331     1      4    6  10.3194289   1    13 #> 332     2      4    6   8.2640198   1    15 #> 333     3      4    6   8.2841911   1    19 #> 334     4      4    6   8.5488907   1     6 #> 335     5      4    6   9.1553535   1     9 #> 336     6      4    6   8.5875816   1    11 #> 337     7      4    6   8.4570440   1     6 #> 338     8      4    6  10.5176546   1     7 #> 339     9      4    6   8.2252526   1     3 #> 340    10      4    6   9.5953654   1    30 #> 341     1      5    6   7.8611570   1    16 #> 342     2      5    6   5.4422902   1     5 #> 343     3      5    6   5.1807940   1     0 #> 344     4      5    6   5.7182889   1     1 #> 345     5      5    6   7.3051250   1    14 #> 346     6      5    6   5.8102587   1     2 #> 347     7      5    6   5.6275509   1     3 #> 348     8      5    6   7.4723403   1     6 #> 349     9      5    6   5.4181629   1     5 #> 350    10      5    6   6.5691704   1    13 #> 351     1      6    6   4.9476516   1     5 #> 352     2      6    6   3.2744917   1     2 #> 353     3      6    6   3.0942115   1     2 #> 354     4      6    6   3.3990553   1     4 #> 355     5      6    6   4.7815339   1     2 #> 356     6      6    6   3.4160631   1     4 #> 357     7      6    6   3.3760634   1     7 #> 358     8      6    6   4.4115569   1     4 #> 359     9      6    6   3.1555251   1     0 #> 360    10      6    6   3.9645388   1     1 #> 361     1      1    7  39.6774682   1    33 #> 362     2      1    7  50.7713815   1    11 #> 363     3      1    7  63.3609326   1    78 #> 364     4      1    7  51.5582962   1    25 #> 365     5      1    7  33.5805620   1    33 #> 366     6      1    7  58.2743444   1    53 #> 367     7      1    7  53.3670237   1    34 #> 368     8      1    7  56.5408008   1    76 #> 369     9      1    7  55.4900457   1    46 #> 370    10      1    7  51.7914455   1    55 #> 371     1      2    7  62.0447820   1    80 #> 372     2      2    7  68.7556136   1   114 #> 373     3      2    7  80.8857851   1    65 #> 374     4      2    7  72.6305770   1   115 #> 375     5      2    7  52.8276007   1     6 #> 376     6      2    7  79.7595873   1   139 #> 377     7      2    7  75.0367751   1    79 #> 378     8      2    7  84.1478214   1    51 #> 379     9      2    7  75.3029008   1   144 #> 380    10      2    7  74.9209665   1    17 #> 381     1      3    7  79.0611577   1   136 #> 382     2      3    7  73.8219911   1     8 #> 383     3      3    7  78.3956452   1   147 #> 384     4      3    7  79.0929257   1    69 #> 385     5      3    7  72.6205855   1    46 #> 386     6      3    7  84.6266999   1    13 #> 387     7      3    7  80.3822986   1   134 #> 388     8      3    7  93.8820472   1    75 #> 389     9      3    7  79.4882484   1    55 #> 390    10      3    7  83.7460245   1    50 #> 391     1      4    7  76.9047773   1    93 #> 392     2      4    7  59.9777096   1    14 #> 393     3      4    7  61.2531884   1    15 #> 394     4      4    7  64.8105416   1    NA #> 395     5      4    7  73.8657154   1    15 #> 396     6      4    7  68.9308414   1   106 #> 397     7      4    7  66.6118591   1   149 #> 398     8      4    7  82.4121802   1    33 #> 399     9      4    7  63.5814590   1    92 #> 400    10      4    7  72.1133694   1    21 #> 401     1      5    7  59.5537003   1    64 #> 402     2      5    7  39.6902111   1     8 #> 403     3      5    7  38.6078054   1    48 #> 404     4      5    7  43.9063702   1    46 #> 405     5      5    7  59.8033769   1   137 #> 406     6      5    7  45.9316939   1    44 #> 407     7      5    7  44.9938798   1    20 #> 408     8      5    7  57.1436120   1    73 #> 409     9      5    7  40.9123248   1    34 #> 410    10      5    7  50.9648453   1    19 #> 411     1      6    7  37.5557757   1    40 #> 412     2      6    7  23.9960510   1    21 #> 413     3      6    7  23.4599470   1    14 #> 414     4      6    7  26.3276804   1     2 #> 415     5      6    7  38.6851657   1    55 #> 416     6      6    7  27.0831087   1    24 #> 417     7      6    7  27.1935844   1    16 #> 418     8      6    7  34.8234058   1    18 #> 419     9      6    7  24.9380050   1    17 #> 420    10      6    7  29.8788955   1    25 #> 421     1      1    8  25.3793803   1     4 #> 422     2      1    8  34.8217786   1    44 #> 423     3      1    8  42.5250407   1    44 #> 424     4      1    8  36.5670097   1    14 #> 425     5      1    8  22.9688665   1    18 #> 426     6      1    8  39.5595465   1    70 #> 427     7      1    8  37.6790466   1    12 #> 428     8      1    8  39.3343668   1    34 #> 429     9      1    8  38.3407911   1    64 #> 430    10      1    8  35.4029582   1    NA #> 431     1      2    8  39.8897925   1    73 #> 432     2      2    8  47.2347238   1    25 #> 433     3      2    8  55.6046319   1   156 #> 434     4      2    8  50.8521862   1    24 #> 435     5      2    8  37.1805808   1   105 #> 436     6      2    8  55.2747197   1    21 #> 437     7      2    8  52.3228544   1    25 #> 438     8      2    8  57.6545511   1    19 #> 439     9      2    8  51.0807211   1    84 #> 440    10      2    8  50.4087001   1    10 #> 441     1      3    8  51.1521523   1    65 #> 442     2      3    8  49.6291249   1    14 #> 443     3      3    8  55.2935937   1    29 #> 444     4      3    8  54.6351079   1    54 #> 445     5      3    8  49.8275193   1   115 #> 446     6      3    8  59.1275649   1    44 #> 447     7      3    8  56.9577663   1     4 #> 448     8      3    8  65.6759891   1    33 #> 449     9      3    8  54.1964759   1    16 #> 450    10      3    8  57.6666710   1    89 #> 451     1      4    8  50.0631658   1     7 #> 452     2      4    8  40.5961985   1    49 #> 453     3      4    8  41.6367104   1    45 #> 454     4      4    8  46.4621862   1    51 #> 455     5      4    8  50.8253142   1    43 #> 456     6      4    8  49.2541927   1    74 #> 457     7      4    8  46.6195800   1    50 #> 458     8      4    8  56.6284402   1    20 #> 459     9      4    8  43.5064961   1    63 #> 460    10      4    8  49.2900494   1    10 #> 461     1      5    8  38.8105415   1    84 #> 462     2      5    8  27.0199673   1    17 #> 463     3      5    8  26.5346812   1    16 #> 464     4      5    8  30.2172858   1    24 #> 465     5      5    8  40.4367333   1    62 #> 466     6      5    8  32.7491183   1    56 #> 467     7      5    8  30.9786363   1     4 #> 468     8      5    8  40.1463580   1    21 #> 469     9      5    8  28.2389500   1    45 #> 470    10      5    8  33.7799831   1    65 #> 471     1      6    8  24.1355518   1    27 #> 472     2      6    8  16.2074767   1    24 #> 473     3      6    8  15.8966486   1    34 #> 474     4      6    8  18.6288391   1    20 #> 475     5      6    8  26.6364051   1    33 #> 476     6      6    8  19.3053886   1     1 #> 477     7      6    8  19.1412187   1     1 #> 478     8      6    8  24.1535867   1     7 #> 479     9      6    8  16.6820076   1    72 #> 480    10      6    8  19.8976609   1    11 #> 481     1      1    9   3.8412628   1     5 #> 482     2      1    9   5.4334463   1     3 #> 483     3      1    9   6.4442890   1     7 #> 484     4      1    9   5.3820496   1    14 #> 485     5      1    9   3.3853324   1     0 #> 486     6      1    9   5.8498357   1     4 #> 487     7      1    9   5.4282694   1     7 #> 488     8      1    9   6.3079294   1     0 #> 489     9      1    9   5.9331262   1    12 #> 490    10      1    9   5.6046924   1    14 #> 491     1      2    9   5.8950732   1    NA #> 492     2      2    9   7.4989831   1     8 #> 493     3      2    9   8.3023700   1     4 #> 494     4      2    9   7.5599428   1     6 #> 495     5      2    9   5.5694356   1     5 #> 496     6      2    9   7.8986626   1    11 #> 497     7      2    9   7.5284057   1     1 #> 498     8      2    9   8.8558808   1    19 #> 499     9      2    9   8.0387014   1    25 #> 500    10      2    9   8.0479467   1     6 #> 501     1      3    9   7.5572471   1     3 #> 502     2      3    9   7.7160415   1     4 #> 503     3      3    9   8.2716000   1     4 #> 504     4      3    9   8.0518182   1     0 #> 505     5      3    9   7.3729485   1     9 #> 506     6      3    9   8.5686528   1     2 #> 507     7      3    9   8.1910212   1     6 #> 508     8      3    9  10.2655235   1     5 #> 509     9      3    9   8.3573473   1     3 #> 510    10      3    9   9.1023157   1     3 #> 511     1      4    9   7.5410141   1     7 #> 512     2      4    9   6.2848206   1    20 #> 513     3      4    9   6.1161399   1     1 #> 514     4      4    9   6.7252748   1     4 #> 515     5      4    9   7.6962170   1     4 #> 516     6      4    9   7.0497489   1     7 #> 517     7      4    9   6.7884065   1     3 #> 518     8      4    9   8.8872331   1     9 #> 519     9      4    9   6.8880814   1     6 #> 520    10      4    9   7.9297200   1     6 #> 521     1      5    9   5.6790710   1     8 #> 522     2      5    9   4.1612260   1     6 #> 523     3      5    9   4.0300711   1     5 #> 524     4      5    9   4.5376180   1     2 #> 525     5      5    9   6.0946732   1    13 #> 526     6      5    9   4.5982531   1     2 #> 527     7      5    9   4.5595468   1     4 #> 528     8      5    9   6.1268260   1     8 #> 529     9      5    9   4.6155262   1    10 #> 530    10      5    9   5.4690480   1     6 #> 531     1      6    9   3.6514502   1     4 #> 532     2      6    9   2.4881509   1     0 #> 533     3      6    9   2.3844423   1     2 #> 534     4      6    9   2.7288751   1     2 #> 535     5      6    9   4.0327393   1     3 #> 536     6      6    9   2.8111128   1     0 #> 537     7      6    9   2.7099650   1     3 #> 538     8      6    9   3.7500566   1    11 #> 539     9      6    9   2.6433309   1     4 #> 540    10      6    9   3.2505319   1     7 #> 541     1      1   10  12.3354971   1    12 #> 542     2      1   10  16.5696833   1    NA #> 543     3      1   10  19.6787232   1    26 #> 544     4      1   10  16.0450008   1    19 #> 545     5      1   10   9.9836721   1     1 #> 546     6      1   10  17.1824983   1    16 #> 547     7      1   10  16.1875279   1    30 #> 548     8      1   10  16.2208079   1    12 #> 549     9      1   10  16.2211398   1    28 #> 550    10      1   10  14.7782914   1     8 #> 551     1      2   10  18.5485870   1    27 #> 552     2      2   10  22.6590813   1    48 #> 553     3      2   10  25.8461460   1    22 #> 554     4      2   10  22.4288964   1    23 #> 555     5      2   10  16.0963332   1     1 #> 556     6      2   10  23.4760986   1     9 #> 557     7      2   10  22.0748092   1    24 #> 558     8      2   10  23.5681028   1     2 #> 559     9      2   10  21.6593663   1    17 #> 560    10      2   10  21.5097531   1    21 #> 561     1      3   10  24.6391281   1    48 #> 562     2      3   10  23.8699374   1    36 #> 563     3      3   10  25.4944599   1    29 #> 564     4      3   10  24.9009469   1    26 #> 565     5      3   10  21.4019465   1    52 #> 566     6      3   10  25.0513964   1    22 #> 567     7      3   10  23.4936398   1    24 #> 568     8      3   10  27.1423194   1    19 #> 569     9      3   10  22.9008155   1    10 #> 570    10      3   10  24.2802281   1    30 #> 571     1      4   10  23.8371525   1    NA #> 572     2      4   10  19.3273149   1    39 #> 573     3      4   10  19.9252091   1     7 #> 574     4      4   10  20.1567523   1     3 #> 575     5      4   10  22.6424650   1    10 #> 576     6      4   10  20.6539845   1    30 #> 577     7      4   10  19.4936007   1    NA #> 578     8      4   10  24.2548491   1    22 #> 579     9      4   10  18.3285321   1     4 #> 580    10      4   10  20.6686664   1    52 #> 581     1      5   10  17.9030652   1     6 #> 582     2      5   10  12.7109093   1     4 #> 583     3      5   10  12.5227020   1    33 #> 584     4      5   10  13.7655050   1    12 #> 585     5      5   10  18.0333144   1    53 #> 586     6      5   10  13.8448692   1    11 #> 587     7      5   10  13.2631218   1     9 #> 588     8      5   10  17.0174839   1     1 #> 589     9      5   10  12.0836231   1     4 #> 590    10      5   10  14.3619283   1     5 #> 591     1      6   10  11.4042466   1    25 #> 592     2      6   10   7.5659414   1    10 #> 593     3      6   10   7.3169687   1     6 #> 594     4      6   10   8.0869840   1     0 #> 595     5      6   10  11.8765205   1     4 #> 596     6      6   10   8.2130162   1     8 #> 597     7      6   10   7.9632033   1     0 #> 598     8      6   10   9.9727494   1     7 #> 599     9      6   10   7.2641597   1     3 #> 600    10      6   10   8.5159324   1     4 #> 601     1      1   11   6.3268042   1    11 #> 602     2      1   11   8.4769448   1     9 #> 603     3      1   11  10.6595326   1     4 #> 604     4      1   11   8.7081889   1    13 #> 605     5      1   11   5.5519093   1    26 #> 606     6      1   11   9.7020683   1     6 #> 607     7      1   11   8.9632048   1    10 #> 608     8      1   11   9.8158763   1     1 #> 609     9      1   11   9.4039263   1     5 #> 610    10      1   11   8.8033989   1    13 #> 611     1      2   11   9.6053894   1     5 #> 612     2      2   11  11.8135174   1    14 #> 613     3      2   11  13.6290999   1    22 #> 614     4      2   11  12.3185509   1    14 #> 615     5      2   11   8.9743988   1     9 #> 616     6      2   11  13.2476749   1    13 #> 617     7      2   11  12.5737076   1     7 #> 618     8      2   11  14.0977743   1    19 #> 619     9      2   11  12.6626550   1    20 #> 620    10      2   11  12.4035744   1     3 #> 621     1      3   11  12.3394048   1     6 #> 622     2      3   11  12.4223418   1     2 #> 623     3      3   11  13.6567163   1     7 #> 624     4      3   11  13.6658106   1     5 #> 625     5      3   11  12.1792495   1     9 #> 626     6      3   11  13.8992130   1    24 #> 627     7      3   11  13.6940287   1     2 #> 628     8      3   11  16.1698814   1    14 #> 629     9      3   11  13.0057817   1    NA #> 630    10      3   11  14.1959004   1    20 #> 631     1      4   11  12.1402069   1    16 #> 632     2      4   11  10.0545995   1     4 #> 633     3      4   11  10.3889536   1    14 #> 634     4      4   11  11.1203545   1    15 #> 635     5      4   11  12.4138009   1    11 #> 636     6      4   11  11.8462219   1     7 #> 637     7      4   11  11.3294153   1    15 #> 638     8      4   11  13.9547483   1     9 #> 639     9      4   11  10.3543904   1     1 #> 640    10      4   11  12.2223312   1    40 #> 641     1      5   11   9.1494082   1     1 #> 642     2      5   11   6.7140607   1     3 #> 643     3      5   11   6.5864872   1     0 #> 644     4      5   11   7.3762209   1     5 #> 645     5      5   11   9.7821413   1    11 #> 646     6      5   11   7.7793168   1     4 #> 647     7      5   11   7.6482497   1    13 #> 648     8      5   11  10.0524649   1     6 #> 649     9      5   11   6.9238872   1     5 #> 650    10      5   11   8.2831175   1     2 #> 651     1      6   11   5.7376624   1    11 #> 652     2      6   11   4.0214603   1     3 #> 653     3      6   11   3.9301049   1     7 #> 654     4      6   11   4.4896105   1     3 #> 655     5      6   11   6.6358121   1     0 #> 656     6      6   11   4.6183227   1     1 #> 657     7      6   11   4.6151077   1     3 #> 658     8      6   11   5.9212821   1     8 #> 659     9      6   11   4.1608085   1    12 #> 660    10      6   11   5.0431783   1     6 #> 661     1      1   12  15.6444576   1    12 #> 662     2      1   12  20.2179523   1    11 #> 663     3      1   12  24.6494997   1     5 #> 664     4      1   12  20.5274116   1    36 #> 665     5      1   12  12.7471255   1     6 #> 666     6      1   12  21.7145915   1    18 #> 667     7      1   12  20.2689570   1    27 #> 668     8      1   12  21.9840447   1    33 #> 669     9      1   12  21.4808134   1    24 #> 670    10      1   12  19.9382848   1    13 #> 671     1      2   12  23.7949509   1    12 #> 672     2      2   12  27.8636655   1    26 #> 673     3      2   12  31.4714155   1    24 #> 674     4      2   12  28.6656892   1    69 #> 675     5      2   12  20.1872052   1    19 #> 676     6      2   12  29.7022791   1    24 #> 677     7      2   12  28.1558172   1    45 #> 678     8      2   12  32.3617800   1    53 #> 679     9      2   12  28.8475076   1    32 #> 680    10      2   12  28.4353794   1    47 #> 681     1      3   12  31.2582394   1    11 #> 682     2      3   12  29.6195412   1    41 #> 683     3      3   12  30.9887053   1    50 #> 684     4      3   12  30.7215131   1    51 #> 685     5      3   12  26.9131366   1     2 #> 686     6      3   12  31.2291082   1     9 #> 687     7      3   12  30.6621451   1    31 #> 688     8      3   12  36.6825530   1    35 #> 689     9      3   12  29.7422947   1    37 #> 690    10      3   12  32.6466019   1    37 #> 691     1      4   12  30.4232040   1    61 #> 692     2      4   12  23.9862136   1     5 #> 693     3      4   12  24.0140200   1    24 #> 694     4      4   12  25.7062886   1    30 #> 695     5      4   12  27.8117391   1     3 #> 696     6      4   12  25.7112670   1    38 #> 697     7      4   12  25.3589994   1    26 #> 698     8      4   12  32.4967545   1    83 #> 699     9      4   12  24.2127478   1    25 #> 700    10      4   12  27.8125522   1    11 #> 701     1      5   12  22.7741805   1    18 #> 702     2      5   12  15.7171659   1    16 #> 703     3      5   12  15.0823453   1    28 #> 704     4      5   12  17.3819923   1    26 #> 705     5      5   12  22.3277868   1    32 #> 706     6      5   12  17.3311098   1    19 #> 707     7      5   12  16.7712402   1     8 #> 708     8      5   12  22.7730171   1    26 #> 709     9      5   12  16.0060050   1     5 #> 710    10      5   12  19.2906333   1    23 #> 711     1      6   12  14.3776740   1    19 #> 712     2      6   12   9.4561432   1    20 #> 713     3      6   12   8.9724790   1     8 #> 714     4      6   12  10.4269952   1     8 #> 715     5      6   12  14.8480854   1    21 #> 716     6      6   12  10.6771575   1     2 #> 717     7      6   12  10.0823531   1     8 #> 718     8      6   12  13.6255958   1     2 #> 719     9      6   12   9.3895648   1    39 #> 720    10      6   12  11.6586978   1     5 #> 721     1      1   13   2.3387876   1     3 #> 722     2      1   13   3.1413433   1     0 #> 723     3      1   13   3.8187220   1     7 #> 724     4      1   13   3.1470952   1     5 #> 725     5      1   13   1.9897085   1     0 #> 726     6      1   13   3.4090429   1     4 #> 727     7      1   13   3.2316723   1     4 #> 728     8      1   13   3.3298685   1     2 #> 729     9      1   13   3.2306197   1     0 #> 730    10      1   13   2.9917351   1     3 #> 731     1      2   13   3.6599636   1     5 #> 732     2      2   13   4.2463556   1     5 #> 733     3      2   13   4.8395924   1     9 #> 734     4      2   13   4.2990295   1     5 #> 735     5      2   13   3.1827164   1     3 #> 736     6      2   13   4.6735405   1     0 #> 737     7      2   13   4.3878219   1     4 #> 738     8      2   13   4.9414184   1     2 #> 739     9      2   13   4.3934680   1    NA #> 740    10      2   13   4.2339370   1     5 #> 741     1      3   13   4.5963721   1    11 #> 742     2      3   13   4.4800127   1     7 #> 743     3      3   13   4.8123785   1     2 #> 744     4      3   13   4.6278673   1     5 #> 745     5      3   13   4.2383118   1     4 #> 746     6      3   13   5.0305215   1     9 #> 747     7      3   13   4.8225295   1     2 #> 748     8      3   13   5.6942795   1     0 #> 749     9      3   13   4.5857421   1     4 #> 750    10      3   13   4.8390295   1     5 #> 751     1      4   13   4.6317626   1     1 #> 752     2      4   13   3.7279293   1     5 #> 753     3      4   13   3.6902148   1     5 #> 754     4      4   13   3.9193034   1     2 #> 755     5      4   13   4.4794797   1     2 #> 756     6      4   13   4.1646291   1     6 #> 757     7      4   13   3.9814999   1    NA #> 758     8      4   13   4.9566993   1     0 #> 759     9      4   13   3.6876561   1     2 #> 760    10      4   13   4.1461859   1     5 #> 761     1      5   13   3.5010380   1     5 #> 762     2      5   13   2.4801149   1     2 #> 763     3      5   13   2.3435168   1     3 #> 764     4      5   13   2.6197836   1     2 #> 765     5      5   13   3.6213968   1     3 #> 766     6      5   13   2.7539392   1    NA #> 767     7      5   13   2.6657104   1     5 #> 768     8      5   13   3.3699566   1     3 #> 769     9      5   13   2.4131957   1     6 #> 770    10      5   13   2.9036287   1     4 #> 771     1      6   13   2.2186051   1     2 #> 772     2      6   13   1.4573247   1     0 #> 773     3      6   13   1.3980268   1     0 #> 774     4      6   13   1.5614431   1     0 #> 775     5      6   13   2.3338359   1     5 #> 776     6      6   13   1.6114880   1     0 #> 777     7      6   13   1.5757356   1     3 #> 778     8      6   13   2.0935711   1     0 #> 779     9      6   13   1.4280044   1     1 #> 780    10      6   13   1.7586285   1     0 #> 781     1      1   14   8.3367994   1     4 #> 782     2      1   14  10.7739253   1    10 #> 783     3      1   14  12.8846079   1    24 #> 784     4      1   14  10.8466122   1     7 #> 785     5      1   14   6.6622485   1     0 #> 786     6      1   14  11.6872644   1     9 #> 787     7      1   14  11.0878802   1    21 #> 788     8      1   14  12.1498524   1     5 #> 789     9      1   14  11.7914572   1    10 #> 790    10      1   14  11.1142979   1    36 #> 791     1      2   14  12.9203431   1    16 #> 792     2      2   14  14.7771275   1    30 #> 793     3      2   14  16.5376076   1    19 #> 794     4      2   14  15.0968483   1    24 #> 795     5      2   14  10.6509984   1    11 #> 796     6      2   14  16.1045452   1    20 #> 797     7      2   14  15.5349741   1     5 #> 798     8      2   14  17.5623296   1    13 #> 799     9      2   14  16.1150305   1    14 #> 800    10      2   14  16.1413575   1    18 #> 801     1      3   14  16.2573759   1     4 #> 802     2      3   14  16.0330165   1    31 #> 803     3      3   14  16.5334153   1    17 #> 804     4      3   14  16.2367998   1    13 #> 805     5      3   14  14.2996966   1    17 #> 806     6      3   14  17.2987193   1    NA #> 807     7      3   14  17.0945589   1    10 #> 808     8      3   14  19.9390570   1    40 #> 809     9      3   14  16.6602937   1    29 #> 810    10      3   14  17.9790834   1    33 #> 811     1      4   14  15.7989640   1     7 #> 812     2      4   14  12.7650362   1     4 #> 813     3      4   14  12.5151092   1     2 #> 814     4      4   14  13.6808861   1    11 #> 815     5      4   14  15.3264365   1     7 #> 816     6      4   14  14.1777861   1    21 #> 817     7      4   14  13.9066258   1    10 #> 818     8      4   14  17.8016048   1    19 #> 819     9      4   14  13.5718964   1    16 #> 820    10      4   14  15.4901560   1    39 #> 821     1      5   14  12.2069437   1    19 #> 822     2      5   14   8.4953174   1     2 #> 823     3      5   14   8.0143379   1     2 #> 824     4      5   14   9.2838680   1    20 #> 825     5      5   14  11.8818274   1    17 #> 826     6      5   14   9.5382529   1     6 #> 827     7      5   14   9.2056318   1     3 #> 828     8      5   14  12.4962580   1    14 #> 829     9      5   14   8.7796418   1     7 #> 830    10      5   14  10.5198628   1    10 #> 831     1      6   14   7.6721564   1     9 #> 832     2      6   14   5.1117536   1     1 #> 833     3      6   14   4.7938726   1     4 #> 834     4      6   14   5.5070167   1    NA #> 835     5      6   14   7.9095664   1     0 #> 836     6      6   14   5.6439099   1     7 #> 837     7      6   14   5.5747153   1     4 #> 838     8      6   14   7.2672581   1     2 #> 839     9      6   14   5.2988494   1     7 #> 840    10      6   14   6.4195978   1     9 #> 841     1      1   15  47.3484677   1    39 #> 842     2      1   15  63.8629208   1   156 #> 843     3      1   15  75.2369844   1    14 #> 844     4      1   15  63.1026021   1    10 #> 845     5      1   15  39.5505857   1    19 #> 846     6      1   15  66.2461684   1   104 #> 847     7      1   15  63.2079477   1   170 #> 848     8      1   15  66.7289486   1     9 #> 849     9      1   15  62.1927032   1    56 #> 850    10      1   15  59.7702735   1    30 #> 851     1      2   15  73.3866257   1    94 #> 852     2      2   15  86.5729243   1    NA #> 853     3      2   15  94.5442465   1    20 #> 854     4      2   15  89.8540430   1   178 #> 855     5      2   15  63.1780590   1    46 #> 856     6      2   15  91.7807240   1    67 #> 857     7      2   15  86.9607799   1   203 #> 858     8      2   15  95.4414069   1   171 #> 859     9      2   15  84.4487850   1   266 #> 860    10      2   15  85.6711875   1    34 #> 861     1      3   15  92.0720796   1    71 #> 862     2      3   15  92.4333917   1    62 #> 863     3      3   15  97.7454244   1    86 #> 864     4      3   15  97.1334306   1    93 #> 865     5      3   15  83.3537176   1    83 #> 866     6      3   15  96.8181431   1   140 #> 867     7      3   15  94.1804010   1    98 #> 868     8      3   15 107.4170067   1    39 #> 869     9      3   15  88.0324192   1    47 #> 870    10      3   15  93.9181368   1    89 #> 871     1      4   15  91.6249142   1    53 #> 872     2      4   15  76.0769124   1    39 #> 873     3      4   15  72.3661550   1   102 #> 874     4      4   15  79.5207643   1    11 #> 875     5      4   15  88.3824060   1   123 #> 876     6      4   15  77.8485559   1    11 #> 877     7      4   15  79.0023079   1    88 #> 878     8      4   15  96.7433031   1    NA #> 879     9      4   15  72.1005949   1    40 #> 880    10      4   15  82.2990961   1    94 #> 881     1      5   15  70.4316564   1    63 #> 882     2      5   15  49.6079708   1    29 #> 883     3      5   15  47.2849771   1    35 #> 884     4      5   15  53.4777987   1    65 #> 885     5      5   15  69.1932376   1   116 #> 886     6      5   15  52.8543273   1    45 #> 887     7      5   15  51.8799850   1    32 #> 888     8      5   15  67.0767594   1     8 #> 889     9      5   15  46.8398455   1    49 #> 890    10      5   15  56.9294794   1    74 #> 891     1      6   15  45.3221716   1    25 #> 892     2      6   15  29.8813668   1    18 #> 893     3      6   15  27.8665339   1    20 #> 894     4      6   15  31.5559676   1    20 #> 895     5      6   15  45.9722474   1    83 #> 896     6      6   15  31.5570775   1    24 #> 897     7      6   15  31.2238500   1    10 #> 898     8      6   15  40.6838418   1    41 #> 899     9      6   15  27.9079019   1    17 #> 900    10      6   15  33.9780682   1    21 #> 901     1      1   16  19.8735787   1    21 #> 902     2      1   16  25.7234894   1    58 #> 903     3      1   16  30.6294531   1    15 #> 904     4      1   16  24.9639894   1    13 #> 905     5      1   16  15.7434305   1    30 #> 906     6      1   16  27.3988723   1    16 #> 907     7      1   16  25.2216158   1    30 #> 908     8      1   16  26.2314971   1     9 #> 909     9      1   16  26.4088977   1    11 #> 910    10      1   16  24.4930850   1    18 #> 911     1      2   16  30.6032492   1     4 #> 912     2      2   16  34.4110990   1    19 #> 913     3      2   16  39.7554933   1    32 #> 914     4      2   16  34.4700677   1    12 #> 915     5      2   16  25.1824621   1     5 #> 916     6      2   16  37.2982600   1     0 #> 917     7      2   16  34.7866084   1    26 #> 918     8      2   16  38.1153983   1     9 #> 919     9      2   16  35.6054125   1     7 #> 920    10      2   16  33.3205562   1    20 #> 921     1      3   16  39.3494491   1    31 #> 922     2      3   16  37.0324443   1    38 #> 923     3      3   16  39.2671524   1    31 #> 924     4      3   16  38.4964103   1    61 #> 925     5      3   16  33.7376465   1    80 #> 926     6      3   16  39.9050350   1    47 #> 927     7      3   16  38.1025628   1    25 #> 928     8      3   16  43.3334087   1    37 #> 929     9      3   16  36.3091619   1    35 #> 930    10      3   16  37.7347974   1    68 #> 931     1      4   16  39.1973887   1    64 #> 932     2      4   16  29.9795212   1     2 #> 933     3      4   16  30.3417140   1    19 #> 934     4      4   16  31.7027506   1    21 #> 935     5      4   16  35.3126608   1    13 #> 936     6      4   16  32.8211111   1    24 #> 937     7      4   16  31.2940092   1     9 #> 938     8      4   16  39.0280709   1    28 #> 939     9      4   16  30.0561833   1    26 #> 940    10      4   16  33.7703059   1    NA #> 941     1      5   16  29.4098687   1    25 #> 942     2      5   16  19.6748820   1     6 #> 943     3      5   16  19.0065322   1    51 #> 944     4      5   16  21.2912080   1    10 #> 945     5      5   16  27.5335147   1    22 #> 946     6      5   16  21.4581235   1    26 #> 947     7      5   16  21.0740886   1     5 #> 948     8      5   16  26.7851625   1    28 #> 949     9      5   16  19.4334450   1     8 #> 950    10      5   16  22.6404250   1    22 #> 951     1      6   16  18.4248066   1    11 #> 952     2      6   16  12.0289079   1     4 #> 953     3      6   16  11.6969589   1     9 #> 954     4      6   16  12.4478206   1    13 #> 955     5      6   16  18.4295338   1    38 #> 956     6      6   16  13.1696193   1     0 #> 957     7      6   16  12.5585770   1    11 #> 958     8      6   16  16.1880820   1    31 #> 959     9      6   16  11.5415164   1    14 #> 960    10      6   16  13.8068269   1    30 #> 961     1      1   17  45.1770555   1    61 #> 962     2      1   17  60.2322590   1     6 #> 963     3      1   17  74.1481492   1    37 #> 964     4      1   17  61.1949992   1     6 #> 965     5      1   17  38.5970932   1    84 #> 966     6      1   17  63.0584889   1    95 #> 967     7      1   17  56.0213778   1    54 #> 968     8      1   17  61.2916844   1    67 #> 969     9      1   17  60.9235859   1    53 #> 970    10      1   17  56.9057290   1    59 #> 971     1      2   17  68.8231830   1    43 #> 972     2      2   17  82.7101978   1   119 #> 973     3      2   17  93.3740198   1    53 #> 974     4      2   17  83.5555971   1    53 #> 975     5      2   17  61.8611591   1    25 #> 976     6      2   17  88.0224905   1    54 #> 977     7      2   17  79.9278862   1   132 #> 978     8      2   17  87.9910708   1    53 #> 979     9      2   17  80.7502550   1    41 #> 980    10      2   17  81.7637068   1    64 #> 981     1      3   17  89.4846628   1    22 #> 982     2      3   17  88.4328468   1    18 #> 983     3      3   17  94.4868489   1    60 #> 984     4      3   17  92.4661715   1    48 #> 985     5      3   17  82.7987340   1    65 #> 986     6      3   17  91.0595205   1    56 #> 987     7      3   17  86.1322823   1    53 #> 988     8      3   17 101.8570519   1   128 #> 989     9      3   17  84.9657201   1    48 #> 990    10      3   17  92.3677861   1    86 #> 991     1      4   17  89.4741168   1    55 #> 992     2      4   17  70.2888966   1   144 #> 993     3      4   17  70.7109130   1   220 #> 994     4      4   17  77.5802441   1    44 #> 995     5      4   17  85.8804322   1    38 #> 996     6      4   17  74.8852882   1   224 #> 997     7      4   17  70.2006445   1    73 #> 998     8      4   17  89.4377145   1   110 #> 999     9      4   17  67.5623004   1    16 #> 1000   10      4   17  79.2788623   1     4 #> 1001    1      5   17  66.6784428   1    81 #> 1002    2      5   17  46.9237183   1    21 #> 1003    3      5   17  46.1724519   1    14 #> 1004    4      5   17  51.3074677   1    12 #> 1005    5      5   17  68.8558089   1    19 #> 1006    6      5   17  50.8130261   1    65 #> 1007    7      5   17  47.0010625   1    19 #> 1008    8      5   17  61.5272999   1    67 #> 1009    9      5   17  44.2334010   1    76 #> 1010   10      5   17  54.4383712   1    55 #> 1011    1      6   17  42.6722260   1     0 #> 1012    2      6   17  28.0751433   1    12 #> 1013    3      6   17  27.1468127   1     8 #> 1014    4      6   17  31.1701521   1    36 #> 1015    5      6   17  44.7320938   1   114 #> 1016    6      6   17  30.9936037   1    21 #> 1017    7      6   17  28.0803891   1    27 #> 1018    8      6   17  37.7531426   1    16 #> 1019    9      6   17  26.6923571   1    26 #> 1020   10      6   17  32.9333401   1    29 #> 1021    1      1   18  10.3798113   1     3 #> 1022    2      1   18  14.0271157   1     1 #> 1023    3      1   18  16.6994296   1     8 #> 1024    4      1   18  13.9631437   1    11 #> 1025    5      1   18   8.8669607   1     1 #> 1026    6      1   18  15.3027396   1     3 #> 1027    7      1   18  14.5398368   1     2 #> 1028    8      1   18  15.4930439   1    32 #> 1029    9      1   18  14.8275542   1    15 #> 1030   10      1   18  13.8817697   1     8 #> 1031    1      2   18  16.2947406   1     2 #> 1032    2      2   18  19.2350769   1    32 #> 1033    3      2   18  22.0039569   1    11 #> 1034    4      2   18  19.4667453   1    57 #> 1035    5      2   18  14.0403861   1    25 #> 1036    6      2   18  21.5373317   1    33 #> 1037    7      2   18  19.8180224   1    17 #> 1038    8      2   18  22.2504529   1     4 #> 1039    9      2   18  19.8957952   1    13 #> 1040   10      2   18  20.4677405   1    24 #> 1041    1      3   18  21.2372926   1    13 #> 1042    2      3   18  20.1709462   1    24 #> 1043    3      3   18  21.4707935   1    13 #> 1044    4      3   18  21.3144372   1    22 #> 1045    5      3   18  18.9902428   1     5 #> 1046    6      3   18  23.1912959   1    13 #> 1047    7      3   18  21.4181294   1    48 #> 1048    8      3   18  25.5724821   1    15 #> 1049    9      3   18  20.7151712   1    16 #> 1050   10      3   18  22.3696971   1    17 #> 1051    1      4   18  20.1106040   1    14 #> 1052    2      4   18  16.8051219   1    14 #> 1053    3      4   18  16.4348359   1     0 #> 1054    4      4   18  17.6715594   1    49 #> 1055    5      4   18  19.8871460   1    24 #> 1056    6      4   18  18.3485036   1    35 #> 1057    7      4   18  17.8607516   1    NA #> 1058    8      4   18  22.2075190   1     9 #> 1059    9      4   18  16.8815349   1    10 #> 1060   10      4   18  19.4751389   1     1 #> 1061    1      5   18  15.6529025   1     7 #> 1062    2      5   18  11.1545447   1     6 #> 1063    3      5   18  10.3420679   1    27 #> 1064    4      5   18  11.9026550   1    20 #> 1065    5      5   18  15.7548915   1    17 #> 1066    6      5   18  12.4658524   1    17 #> 1067    7      5   18  11.9300557   1    33 #> 1068    8      5   18  15.5039293   1     9 #> 1069    9      5   18  11.1873202   1     4 #> 1070   10      5   18  13.4967133   1     9 #> 1071    1      6   18   9.8033733   1     7 #> 1072    2      6   18   6.6059255   1     0 #> 1073    3      6   18   6.2796530   1     0 #> 1074    4      6   18   7.1814119   1     5 #> 1075    5      6   18  10.5062478   1    11 #> 1076    6      6   18   7.4540631   1     9 #> 1077    7      6   18   7.0766735   1    NA #> 1078    8      6   18   9.6736278   1    15 #> 1079    9      6   18   6.8007048   1    20 #> 1080   10      6   18   8.1909004   1     5 #> 1081    1      1   19   7.3747053   1     6 #> 1082    2      1   19  10.3360092   1    11 #> 1083    3      1   19  12.2022546   1    18 #> 1084    4      1   19  10.1557095   1     8 #> 1085    5      1   19   6.5462394   1     2 #> 1086    6      1   19  11.0673208   1    10 #> 1087    7      1   19  10.1828794   1    12 #> 1088    8      1   19  10.7968004   1     8 #> 1089    9      1   19  10.7609744   1     7 #> 1090   10      1   19  10.2061129   1    29 #> 1091    1      2   19  11.6283798   1     6 #> 1092    2      2   19  13.7371734   1     6 #> 1093    3      2   19  15.9274445   1     1 #> 1094    4      2   19  13.8958226   1    23 #> 1095    5      2   19  10.1880845   1     2 #> 1096    6      2   19  15.1127183   1     6 #> 1097    7      2   19  14.3460511   1     0 #> 1098    8      2   19  15.8448280   1    14 #> 1099    9      2   19  14.5362264   1     3 #> 1100   10      2   19  14.4934268   1    24 #> 1101    1      3   19  14.8204833   1    20 #> 1102    2      3   19  14.8892577   1    19 #> 1103    3      3   19  15.3417125   1    14 #> 1104    4      3   19  15.2832251   1     7 #> 1105    5      3   19  13.5022350   1     9 #> 1106    6      3   19  15.9551344   1     6 #> 1107    7      3   19  15.3792917   1     3 #> 1108    8      3   19  17.7664050   1    23 #> 1109    9      3   19  15.2489651   1    NA #> 1110   10      3   19  16.2229455   1     7 #> 1111    1      4   19  14.7575242   1    14 #> 1112    2      4   19  12.2648711   1     9 #> 1113    3      4   19  11.7532925   1     1 #> 1114    4      4   19  12.6439048   1    10 #> 1115    5      4   19  14.4866982   1     7 #> 1116    6      4   19  13.1275953   1    10 #> 1117    7      4   19  12.5363698   1    16 #> 1118    8      4   19  15.7617573   1     9 #> 1119    9      4   19  12.2399076   1    10 #> 1120   10      4   19  14.2410635   1     9 #> 1121    1      5   19  10.8978287   1     8 #> 1122    2      5   19   8.1418557   1    18 #> 1123    3      5   19   7.5618514   1     3 #> 1124    4      5   19   8.4420486   1     4 #> 1125    5      5   19  11.4424384   1    44 #> 1126    6      5   19   8.8297471   1    14 #> 1127    7      5   19   8.5419637   1     4 #> 1128    8      5   19  10.8422316   1    21 #> 1129    9      5   19   8.0746906   1    22 #> 1130   10      5   19   9.7066134   1    18 #> 1131    1      6   19   7.0861383   1    21 #> 1132    2      6   19   4.8874616   1     4 #> 1133    3      6   19   4.5655187   1     3 #> 1134    4      6   19   5.1271443   1     5 #> 1135    5      6   19   7.4083483   1    20 #> 1136    6      6   19   5.3145132   1     8 #> 1137    7      6   19   5.0741649   1     1 #> 1138    8      6   19   6.7021558   1    10 #> 1139    9      6   19   4.8795840   1     0 #> 1140   10      6   19   5.8649467   1     9 #> 1141    1      1   20   8.4091207   1    12 #> 1142    2      1   20  11.2093883   1     9 #> 1143    3      1   20  13.6385585   1    17 #> 1144    4      1   20  11.4994281   1    13 #> 1145    5      1   20   7.5865467   1     2 #> 1146    6      1   20  13.1659640   1    24 #> 1147    7      1   20  12.6821692   1    44 #> 1148    8      1   20  13.0280574   1     8 #> 1149    9      1   20  12.6152762   1    42 #> 1150   10      1   20  11.6117173   1     5 #> 1151    1      2   20  12.9338588   1    17 #> 1152    2      2   20  15.2131819   1    35 #> 1153    3      2   20  17.3830533   1    14 #> 1154    4      2   20  15.8708201   1    12 #> 1155    5      2   20  11.8641030   1     7 #> 1156    6      2   20  18.2475765   1    10 #> 1157    7      2   20  17.6839285   1    12 #> 1158    8      2   20  19.0212885   1    21 #> 1159    9      2   20  16.8310061   1    17 #> 1160   10      2   20  17.0018863   1    13 #> 1161    1      3   20  16.4331536   1     6 #> 1162    2      3   20  16.5213090   1    18 #> 1163    3      3   20  17.0189652   1    11 #> 1164    4      3   20  17.5696394   1    11 #> 1165    5      3   20  15.8899262   1     9 #> 1166    6      3   20  19.6058684   1     9 #> 1167    7      3   20  18.9566062   1    26 #> 1168    8      3   20  21.4594399   1    10 #> 1169    9      3   20  17.4598878   1     6 #> 1170   10      3   20  19.3041860   1    19 #> 1171    1      4   20  16.4859883   1     3 #> 1172    2      4   20  13.3767113   1    11 #> 1173    3      4   20  13.1776350   1    12 #> 1174    4      4   20  14.5742435   1     5 #> 1175    5      4   20  16.4673449   1    16 #> 1176    6      4   20  15.6648961   1     4 #> 1177    7      4   20  15.7688724   1     6 #> 1178    8      4   20  18.8223022   1    30 #> 1179    9      4   20  13.8664748   1    11 #> 1180   10      4   20  16.4577044   1    18 #> 1181    1      5   20  12.2666538   1    13 #> 1182    2      5   20   8.9419851   1     5 #> 1183    3      5   20   8.4034322   1    17 #> 1184    4      5   20   9.8051727   1     5 #> 1185    5      5   20  13.3919343   1     5 #> 1186    6      5   20  10.5125246   1     9 #> 1187    7      5   20  10.3387028   1    10 #> 1188    8      5   20  13.1116884   1    12 #> 1189    9      5   20   9.4982035   1    24 #> 1190   10      5   20  11.2576217   1     8 #> 1191    1      6   20   7.7321200   1     5 #> 1192    2      6   20   5.4421941   1    13 #> 1193    3      6   20   4.9817245   1     2 #> 1194    4      6   20   5.8949680   1     3 #> 1195    5      6   20   8.5916074   1     7 #> 1196    6      6   20   6.3113284   1     8 #> 1197    7      6   20   6.2470974   1     0 #> 1198    8      6   20   8.1159028   1     7 #> 1199    9      6   20   5.5732187   1     7 #> 1200   10      6   20   6.7225100   1     9 #> 1201    1      1   21  83.8458524   1   169 #> 1202    2      1   21 109.5072520   1   144 #> 1203    3      1   21 129.5504202   1   119 #> 1204    4      1   21 106.3685001   1    33 #> 1205    5      1   21  69.5608788   1   112 #> 1206    6      1   21 113.9900671   1    64 #> 1207    7      1   21 104.3209422   1    77 #> 1208    8      1   21 111.8874708   1   206 #> 1209    9      1   21 106.1010787   1   104 #> 1210   10      1   21  97.7178320   1   243 #> 1211    1      2   21 129.3671691   1   132 #> 1212    2      2   21 151.7926441   1   160 #> 1213    3      2   21 167.5798323   1    21 #> 1214    4      2   21 146.3021560   1   162 #> 1215    5      2   21 110.5162669   1   273 #> 1216    6      2   21 155.5716836   1    49 #> 1217    7      2   21 147.4162574   1    24 #> 1218    8      2   21 161.1441813   1   151 #> 1219    9      2   21 140.1483054   1    61 #> 1220   10      2   21 142.4155507   1   162 #> 1221    1      3   21 165.7810063   1    37 #> 1222    2      3   21 158.0980202   1    86 #> 1223    3      3   21 162.7102076   1   136 #> 1224    4      3   21 161.3178751   1    22 #> 1225    5      3   21 145.3838161   1    89 #> 1226    6      3   21 166.4898020   1    82 #> 1227    7      3   21 157.8988021   1    96 #> 1228    8      3   21 185.5635526   1   246 #> 1229    9      3   21 151.4255259   1   292 #> 1230   10      3   21 160.8821150   1   283 #> 1231    1      4   21 163.8263197   1   477 #> 1232    2      4   21 130.4163184   1    77 #> 1233    3      4   21 124.2008897   1   120 #> 1234    4      4   21 137.3303739   1   180 #> 1235    5      4   21 154.0975658   1   166 #> 1236    6      4   21 138.5475338   1   165 #> 1237    7      4   21 133.8207674   1   125 #> 1238    8      4   21 162.4055639   1   127 #> 1239    9      4   21 120.4950195   1    21 #> 1240   10      4   21 133.9138852   1   162 #> 1241    1      5   21 122.0558880   1    94 #> 1242    2      5   21  87.4812290   1    45 #> 1243    3      5   21  79.5040663   1   160 #> 1244    4      5   21  91.3097169   1    51 #> 1245    5      5   21 120.2921968   1    72 #> 1246    6      5   21  90.2278886   1   121 #> 1247    7      5   21  88.8326111   1    54 #> 1248    8      5   21 111.2552768   1    93 #> 1249    9      5   21  78.8068390   1    36 #> 1250   10      5   21  94.3524717   1   123 #> 1251    1      6   21  78.5516280   1    10 #> 1252    2      6   21  51.5108034   1    10 #> 1253    3      6   21  47.3786286   1    75 #> 1254    4      6   21  53.6327090   1     7 #> 1255    5      6   21  79.6963720   1   117 #> 1256    6      6   21  54.1910818   1    46 #> 1257    7      6   21  53.1628844   1    20 #> 1258    8      6   21  69.8049806   1   119 #> 1259    9      6   21  46.9920982   1    85 #> 1260   10      6   21  56.3653024   1    77 #> 1261    1      1   22   5.6225078   1     7 #> 1262    2      1   22   7.6879668   1    15 #> 1263    3      1   22   9.2672764   1    21 #> 1264    4      1   22   7.5071615   1     1 #> 1265    5      1   22   4.7300163   1     0 #> 1266    6      1   22   8.0232323   1     4 #> 1267    7      1   22   7.7297019   1     5 #> 1268    8      1   22   8.0524718   1     0 #> 1269    9      1   22   7.9132875   1     1 #> 1270   10      1   22   7.8597642   1    13 #> 1271    1      2   22   8.8054957   1     1 #> 1272    2      2   22  10.6766240   1    11 #> 1273    3      2   22  11.6577416   1    22 #> 1274    4      2   22  10.2460014   1    20 #> 1275    5      2   22   7.7869088   1     3 #> 1276    6      2   22  11.2119706   1     9 #> 1277    7      2   22  10.8003447   1     7 #> 1278    8      2   22  11.5979645   1     5 #> 1279    9      2   22  10.6924665   1     5 #> 1280   10      2   22  10.9367745   1    12 #> 1281    1      3   22  11.3832984   1     8 #> 1282    2      3   22  11.0806282   1     1 #> 1283    3      3   22  11.5122036   1    18 #> 1284    4      3   22  11.3490774   1    25 #> 1285    5      3   22  10.0032563   1     0 #> 1286    6      3   22  11.8632033   1     4 #> 1287    7      3   22  11.5451640   1     3 #> 1288    8      3   22  13.7377311   1    13 #> 1289    9      3   22  11.0790472   1     9 #> 1290   10      3   22  12.4617694   1    12 #> 1291    1      4   22  10.8496432   1     4 #> 1292    2      4   22   9.0505032   1     0 #> 1293    3      4   22   8.7864754   1    11 #> 1294    4      4   22   9.4194578   1    11 #> 1295    5      4   22  10.8007060   1     6 #> 1296    6      4   22   9.8893004   1    22 #> 1297    7      4   22   9.7495791   1    15 #> 1298    8      4   22  11.8679739   1     4 #> 1299    9      4   22   9.0031853   1    14 #> 1300   10      4   22  10.7495282   1    31 #> 1301    1      5   22   8.3016115   1     3 #> 1302    2      5   22   6.1730918   1     1 #> 1303    3      5   22   5.6952706   1    11 #> 1304    4      5   22   6.2577969   1     0 #> 1305    5      5   22   8.5996115   1     9 #> 1306    6      5   22   6.5114907   1     3 #> 1307    7      5   22   6.3781615   1    12 #> 1308    8      5   22   8.3513583   1     3 #> 1309    9      5   22   5.9525914   1     5 #> 1310   10      5   22   7.2039465   1    15 #> 1311    1      6   22   5.2479014   1    10 #> 1312    2      6   22   3.5813100   1     1 #> 1313    3      6   22   3.3677228   1     1 #> 1314    4      6   22   3.8083782   1     7 #> 1315    5      6   22   5.5291676   1     0 #> 1316    6      6   22   3.8860837   1     4 #> 1317    7      6   22   3.8791399   1     4 #> 1318    8      6   22   4.9403700   1     5 #> 1319    9      6   22   3.5845976   1     5 #> 1320   10      6   22   4.3261013   1     9 #> 1321    1      1   23   8.0208727   1    12 #> 1322    2      1   23  10.4638417   1     4 #> 1323    3      1   23  12.9190810   1    15 #> 1324    4      1   23  10.8600771   1     8 #> 1325    5      1   23   6.8606485   1    11 #> 1326    6      1   23  11.7080120   1    14 #> 1327    7      1   23  10.9662765   1    20 #> 1328    8      1   23  11.4201658   1    42 #> 1329    9      1   23  10.7059539   1    19 #> 1330   10      1   23  10.2025292   1    18 #> 1331    1      2   23  12.2548293   1     4 #> 1332    2      2   23  14.4009638   1     4 #> 1333    3      2   23  16.3539256   1    22 #> 1334    4      2   23  15.1526971   1     7 #> 1335    5      2   23  10.8164100   1     2 #> 1336    6      2   23  15.9517441   1    30 #> 1337    7      2   23  15.2911570   1     6 #> 1338    8      2   23  16.4195259   1    47 #> 1339    9      2   23  14.6985944   1    17 #> 1340   10      2   23  14.3358536   1     3 #> 1341    1      3   23  15.7202669   1     3 #> 1342    2      3   23  15.4369429   1    17 #> 1343    3      3   23  16.5459218   1     7 #> 1344    4      3   23  16.1159441   1     6 #> 1345    5      3   23  14.7477899   1    21 #> 1346    6      3   23  17.5259190   1    42 #> 1347    7      3   23  16.7120476   1    16 #> 1348    8      3   23  19.1354693   1    14 #> 1349    9      3   23  15.3316873   1     2 #> 1350   10      3   23  16.1844204   1    32 #> 1351    1      4   23  15.4480326   1    20 #> 1352    2      4   23  12.8156057   1     5 #> 1353    3      4   23  12.4461779   1     0 #> 1354    4      4   23  13.7938956   1     6 #> 1355    5      4   23  15.3019779   1     6 #> 1356    6      4   23  14.2144322   1    27 #> 1357    7      4   23  13.6626084   1     5 #> 1358    8      4   23  16.8537629   1    16 #> 1359    9      4   23  12.2191501   1    34 #> 1360   10      4   23  13.9984921   1    21 #> 1361    1      5   23  11.7365248   1    12 #> 1362    2      5   23   8.3775628   1     6 #> 1363    3      5   23   7.9544273   1    11 #> 1364    4      5   23   9.1481839   1     2 #> 1365    5      5   23  12.2209996   1     1 #> 1366    6      5   23   9.4228969   1     0 #> 1367    7      5   23   9.2468111   1     5 #> 1368    8      5   23  11.6353482   1    24 #> 1369    9      5   23   8.1449333   1     5 #> 1370   10      5   23   9.6302711   1    13 #> 1371    1      6   23   7.4329102   1    11 #> 1372    2      6   23   4.9815939   1     2 #> 1373    3      6   23   4.8161916   1     6 #> 1374    4      6   23   5.5196589   1     8 #> 1375    5      6   23   8.0847242   1     6 #> 1376    6      6   23   5.5779808   1     2 #> 1377    7      6   23   5.5194792   1     9 #> 1378    8      6   23   6.8087536   1     3 #> 1379    9      6   23   4.9021418   1     9 #> 1380   10      6   23   5.8366040   1     4 #> 1381    1      1   24   6.8354885   1     3 #> 1382    2      1   24   9.1403084   1     6 #> 1383    3      1   24  11.3306392   1     4 #> 1384    4      1   24   9.3474164   1     8 #> 1385    5      1   24   6.1998584   1    15 #> 1386    6      1   24  10.6861888   1     0 #> 1387    7      1   24  10.6392431   1     1 #> 1388    8      1   24  11.2463800   1     1 #> 1389    9      1   24  10.7812925   1     9 #> 1390   10      1   24  10.1095892   1     9 #> 1391    1      2   24  10.5691841   1     1 #> 1392    2      2   24  12.8622249   1     0 #> 1393    3      2   24  14.4537693   1     4 #> 1394    4      2   24  13.0806556   1     4 #> 1395    5      2   24   9.9209602   1    16 #> 1396    6      2   24  14.8982043   1     5 #> 1397    7      2   24  14.7327652   1     8 #> 1398    8      2   24  16.6036418   1    12 #> 1399    9      2   24  15.1066609   1    NA #> 1400   10      2   24  14.3450127   1     7 #> 1401    1      3   24  13.4602398   1    13 #> 1402    2      3   24  13.7840143   1     0 #> 1403    3      3   24  14.1359255   1     1 #> 1404    4      3   24  14.3949946   1    27 #> 1405    5      3   24  13.3497260   1    24 #> 1406    6      3   24  15.7099694   1    37 #> 1407    7      3   24  15.5620421   1     1 #> 1408    8      3   24  19.0278566   1    20 #> 1409    9      3   24  15.5515195   1    15 #> 1410   10      3   24  16.3672174   1     7 #> 1411    1      4   24  12.9119402   1    15 #> 1412    2      4   24  11.1016080   1    14 #> 1413    3      4   24  10.8729122   1    17 #> 1414    4      4   24  12.1534370   1     8 #> 1415    5      4   24  13.8970015   1    15 #> 1416    6      4   24  12.9595883   1    22 #> 1417    7      4   24  12.9046439   1    15 #> 1418    8      4   24  16.5097456   1     4 #> 1419    9      4   24  12.4791950   1    17 #> 1420   10      4   24  14.3845933   1     3 #> 1421    1      5   24   9.9744569   1     4 #> 1422    2      5   24   7.3960125   1     2 #> 1423    3      5   24   6.9023841   1     3 #> 1424    4      5   24   7.8578339   1     9 #> 1425    5      5   24  11.1226267   1    10 #> 1426    6      5   24   8.5393186   1     2 #> 1427    7      5   24   8.7025130   1    11 #> 1428    8      5   24  11.3989699   1    22 #> 1429    9      5   24   8.1472135   1     3 #> 1430   10      5   24   9.5561777   1     5 #> 1431    1      6   24   6.3598787   1    11 #> 1432    2      6   24   4.4520007   1     3 #> 1433    3      6   24   4.1788805   1     0 #> 1434    4      6   24   4.8072784   1     0 #> 1435    5      6   24   7.2312407   1     7 #> 1436    6      6   24   5.1688034   1     6 #> 1437    7      6   24   5.2476202   1    12 #> 1438    8      6   24   6.9936857   1     4 #> 1439    9      6   24   4.8780001   1     6 #> 1440   10      6   24   5.7469443   1    10 #> 1441    1      1   25  10.8356087   1    35 #> 1442    2      1   25  14.8134735   1     4 #> 1443    3      1   25  16.9963188   1    56 #> 1444    4      1   25  15.1106130   1    28 #> 1445    5      1   25   9.4584114   1     2 #> 1446    6      1   25  16.3582403   1     5 #> 1447    7      1   25  15.7817169   1    36 #> 1448    8      1   25  17.1480063   1     7 #> 1449    9      1   25  16.4620561   1    17 #> 1450   10      1   25  14.7565307   1     3 #> 1451    1      2   25  16.6900200   1     6 #> 1452    2      2   25  19.7821115   1    20 #> 1453    3      2   25  22.0233646   1    36 #> 1454    4      2   25  20.5721855   1     6 #> 1455    5      2   25  15.2522071   1    13 #> 1456    6      2   25  22.5879065   1    15 #> 1457    7      2   25  21.8535198   1    30 #> 1458    8      2   25  24.6369665   1    13 #> 1459    9      2   25  21.8150651   1    29 #> 1460   10      2   25  21.2981344   1    27 #> 1461    1      3   25  21.5437006   1    17 #> 1462    2      3   25  21.2551311   1    67 #> 1463    3      3   25  21.7652273   1    19 #> 1464    4      3   25  22.8835094   1    12 #> 1465    5      3   25  20.6958096   1    15 #> 1466    6      3   25  23.7491865   1    39 #> 1467    7      3   25  23.4370488   1    16 #> 1468    8      3   25  29.0444471   1    21 #> 1469    9      3   25  22.7903852   1    41 #> 1470   10      3   25  23.6222041   1    46 #> 1471    1      4   25  21.1892251   1    31 #> 1472    2      4   25  17.3186767   1    27 #> 1473    3      4   25  16.3725203   1    16 #> 1474    4      4   25  19.2866119   1    23 #> 1475    5      4   25  21.3392766   1    52 #> 1476    6      4   25  19.7493882   1    22 #> 1477    7      4   25  19.6666609   1    10 #> 1478    8      4   25  24.6681338   1    38 #> 1479    9      4   25  18.7948374   1     4 #> 1480   10      4   25  20.7539473   1    17 #> 1481    1      5   25  16.0450317   1    27 #> 1482    2      5   25  11.4174823   1     8 #> 1483    3      5   25  10.6487810   1     5 #> 1484    4      5   25  12.7618950   1     2 #> 1485    5      5   25  17.2046776   1    10 #> 1486    6      5   25  13.2348543   1     5 #> 1487    7      5   25  13.1144333   1     4 #> 1488    8      5   25  17.2749805   1    NA #> 1489    9      5   25  12.1586207   1    19 #> 1490   10      5   25  14.1522094   1     6 #> 1491    1      6   25  10.1274257   1     7 #> 1492    2      6   25   6.7661263   1     2 #> 1493    3      6   25   6.4031004   1     4 #> 1494    4      6   25   7.5856231   1     4 #> 1495    5      6   25  11.1240852   1     4 #> 1496    6      6   25   7.9114500   1     5 #> 1497    7      6   25   7.9007539   1     2 #> 1498    8      6   25  10.5570348   1    14 #> 1499    9      6   25   7.3750702   1    19 #> 1500   10      6   25   8.3704176   1     5 #> 1501    1      1   26  27.4736086   1    22 #> 1502    2      1   26  38.0967404   1    54 #> 1503    3      1   26  47.1413078   1    73 #> 1504    4      1   26  39.3168769   1    37 #> 1505    5      1   26  24.2573770   1    17 #> 1506    6      1   26  40.0043056   1   142 #> 1507    7      1   26  39.8712603   1    21 #> 1508    8      1   26  42.5770684   1    24 #> 1509    9      1   26  41.1434779   1    11 #> 1510   10      1   26  38.1266529   1     8 #> 1511    1      2   26  41.7990139   1    22 #> 1512    2      2   26  52.0157594   1    42 #> 1513    3      2   26  58.8468572   1    74 #> 1514    4      2   26  53.2323258   1    20 #> 1515    5      2   26  38.8642773   1    22 #> 1516    6      2   26  56.6549886   1   107 #> 1517    7      2   26  55.0155847   1    27 #> 1518    8      2   26  61.5921302   1   138 #> 1519    9      2   26  55.0614818   1    32 #> 1520   10      2   26  54.4205075   1    39 #> 1521    1      3   26  54.5647362   1    19 #> 1522    2      3   26  54.9643209   1    61 #> 1523    3      3   26  59.1090314   1   114 #> 1524    4      3   26  59.6817449   1    12 #> 1525    5      3   26  51.9389355   1    11 #> 1526    6      3   26  59.6410146   1   110 #> 1527    7      3   26  59.2142665   1    24 #> 1528    8      3   26  70.6109640   1    91 #> 1529    9      3   26  56.8308963   1    25 #> 1530   10      3   26  60.6007932   1   120 #> 1531    1      4   26  53.9119892   1    45 #> 1532    2      4   26  44.4505363   1    26 #> 1533    3      4   26  44.2935566   1    49 #> 1534    4      4   26  49.3922185   1     4 #> 1535    5      4   26  53.9512910   1    79 #> 1536    6      4   26  49.6378627   1    63 #> 1537    7      4   26  47.9270532   1    26 #> 1538    8      4   26  61.1881877   1    17 #> 1539    9      4   26  46.6881345   1    34 #> 1540   10      4   26  53.4120656   1    22 #> 1541    1      5   26  39.4229105   1    67 #> 1542    2      5   26  29.6250409   1    NA #> 1543    3      5   26  28.3832089   1    NA #> 1544    4      5   26  32.8904197   1    43 #> 1545    5      5   26  42.4886449   1    46 #> 1546    6      5   26  32.3419738   1     9 #> 1547    7      5   26  32.7506977   1    NA #> 1548    8      5   26  42.2756161   1    22 #> 1549    9      5   26  30.6846157   1    45 #> 1550   10      5   26  36.0555494   1    92 #> 1551    1      6   26  25.5003322   1    16 #> 1552    2      6   26  17.4837899   1    17 #> 1553    3      6   26  16.7938094   1    30 #> 1554    4      6   26  19.6007038   1    12 #> 1555    5      6   26  28.1520986   1     5 #> 1556    6      6   26  19.3262167   1    25 #> 1557    7      6   26  19.7647907   1    10 #> 1558    8      6   26  26.0618442   1    17 #> 1559    9      6   26  18.0723415   1     7 #> 1560   10      6   26  21.8478438   1     1 #> 1561    1      1   27   1.4561450   1     1 #> 1562    2      1   27   1.8657769   1     3 #> 1563    3      1   27   2.2132682   1     2 #> 1564    4      1   27   1.8970129   1     0 #> 1565    5      1   27   1.1905471   1     3 #> 1566    6      1   27   2.1186021   1     8 #> 1567    7      1   27   1.9611962   1     0 #> 1568    8      1   27   2.1350349   1     5 #> 1569    9      1   27   2.0117788   1     1 #> 1570   10      1   27   1.9740186   1     0 #> 1571    1      2   27   2.2697383   1     2 #> 1572    2      2   27   2.5272419   1     2 #> 1573    3      2   27   2.8702784   1     4 #> 1574    4      2   27   2.6149188   1     6 #> 1575    5      2   27   1.9186776   1     2 #> 1576    6      2   27   2.9206541   1     5 #> 1577    7      2   27   2.6890507   1     2 #> 1578    8      2   27   3.0948209   1     9 #> 1579    9      2   27   2.7504778   1     2 #> 1580   10      2   27   2.7853151   1    NA #> 1581    1      3   27   2.9060984   1     2 #> 1582    2      3   27   2.7093660   1     4 #> 1583    3      3   27   2.8344480   1     7 #> 1584    4      3   27   2.8392911   1     0 #> 1585    5      3   27   2.4823935   1     3 #> 1586    6      3   27   3.1080884   1     4 #> 1587    7      3   27   2.9973438   1     1 #> 1588    8      3   27   3.5020642   1     3 #> 1589    9      3   27   2.8922247   1     0 #> 1590   10      3   27   3.1583638   1     0 #> 1591    1      4   27   2.8705296   1     5 #> 1592    2      4   27   2.2246630   1     2 #> 1593    3      4   27   2.1608797   1     1 #> 1594    4      4   27   2.3770948   1     0 #> 1595    5      4   27   2.6378245   1     3 #> 1596    6      4   27   2.5246944   1     0 #> 1597    7      4   27   2.4188569   1     1 #> 1598    8      4   27   3.0747190   1     0 #> 1599    9      4   27   2.3073156   1     7 #> 1600   10      4   27   2.7342603   1     8 #> 1601    1      5   27   2.1582163   1     1 #> 1602    2      5   27   1.4673435   1     1 #> 1603    3      5   27   1.3897280   1     0 #> 1604    4      5   27   1.5763566   1    NA #> 1605    5      5   27   2.1178708   1     3 #> 1606    6      5   27   1.7189313   1     1 #> 1607    7      5   27   1.6507634   1     2 #> 1608    8      5   27   2.1685188   1     1 #> 1609    9      5   27   1.4935199   1     2 #> 1610   10      5   27   1.8447235   1     1 #> 1611    1      6   27   1.3671167   1     1 #> 1612    2      6   27   0.8770607   1     2 #> 1613    3      6   27   0.8367461   1     0 #> 1614    4      6   27   0.9541303   1     0 #> 1615    5      6   27   1.3817281   1     3 #> 1616    6      6   27   1.0143932   1     0 #> 1617    7      6   27   0.9751395   1    NA #> 1618    8      6   27   1.3061890   1     1 #> 1619    9      6   27   0.9124939   1     1 #> 1620   10      6   27   1.1079114   1     1 #> 1621    1      1   28 288.4930712   1   428 #> 1622    2      1   28 383.5402548   1   354 #> 1623    3      1   28 465.0652271   1   299 #> 1624    4      1   28 403.2093558   1   203 #> 1625    5      1   28 260.4298968   1   396 #> 1626    6      1   28 461.2995604   1   339 #> 1627    7      1   28 426.6290543   1   212 #> 1628    8      1   28 455.5455650   1   391 #> 1629    9      1   28 437.2573587   1   376 #> 1630   10      1   28 413.0698907   1    NA #> 1631    1      2   28 441.1238467   1    89 #> 1632    2      2   28 526.7711823   1  1303 #> 1633    3      2   28 594.5010825   1   655 #> 1634    4      2   28 557.9023850   1   374 #> 1635    5      2   28 424.4150590   1    59 #> 1636    6      2   28 624.2875772   1  2101 #> 1637    7      2   28 600.9387555   1   682 #> 1638    8      2   28 650.3622588   1  1858 #> 1639    9      2   28 585.0571358   1   288 #> 1640   10      2   28 581.6922683   1  1309 #> 1641    1      3   28 569.5238439   1   420 #> 1642    2      3   28 553.1313579   1   697 #> 1643    3      3   28 593.2546939   1   259 #> 1644    4      3   28 612.9362924   1   839 #> 1645    5      3   28 564.6524895   1  1272 #> 1646    6      3   28 683.4650092   1   734 #> 1647    7      3   28 642.3533059   1   359 #> 1648    8      3   28 759.2959975   1   189 #> 1649    9      3   28 611.5295248   1   585 #> 1650   10      3   28 647.4998809   1  1103 #> 1651    1      4   28 557.8042307   1   412 #> 1652    2      4   28 449.4459098   1   487 #> 1653    3      4   28 445.7796205   1   244 #> 1654    4      4   28 505.7897306   1   439 #> 1655    5      4   28 590.4146719   1   273 #> 1656    6      4   28 564.8424694   1   429 #> 1657    7      4   28 538.9728098   1   781 #> 1658    8      4   28 665.0706113   1   998 #> 1659    9      4   28 498.6813706   1   236 #> 1660   10      4   28 570.0699455   1    79 #> 1661    1      5   28 426.0474708   1   258 #> 1662    2      5   28 297.3368956   1   340 #> 1663    3      5   28 283.7948532   1    30 #> 1664    4      5   28 335.2876678   1   196 #> 1665    5      5   28 469.8829353   1   743 #> 1666    6      5   28 362.3400393   1    96 #> 1667    7      5   28 355.1126024   1   264 #> 1668    8      5   28 453.0770961   1   317 #> 1669    9      5   28 327.5156171   1   148 #> 1670   10      5   28 390.9039287   1   127 #> 1671    1      6   28 264.4030880   1   266 #> 1672    2      6   28 179.4002101   1   202 #> 1673    3      6   28 170.9879911   1    50 #> 1674    4      6   28 200.5431902   1   260 #> 1675    5      6   28 310.4217283   1    24 #> 1676    6      6   28 219.3372927   1    39 #> 1677    7      6   28 212.4309481   1   115 #> 1678    8      6   28 278.8607652   1   299 #> 1679    9      6   28 193.3497379   1    87 #> 1680   10      6   28 233.6694377   1   128 #> 1681    1      1   29  10.0379304   1    12 #> 1682    2      1   29  13.1151785   1     2 #> 1683    3      1   29  15.4945124   1    27 #> 1684    4      1   29  13.0854914   1    17 #> 1685    5      1   29   8.5861660   1     2 #> 1686    6      1   29  14.5253945   1    11 #> 1687    7      1   29  14.2281054   1    12 #> 1688    8      1   29  15.3511181   1    12 #> 1689    9      1   29  14.4469749   1    34 #> 1690   10      1   29  13.1780405   1    15 #> 1691    1      2   29  15.6361040   1    13 #> 1692    2      2   29  18.0421477   1     5 #> 1693    3      2   29  20.7150400   1    19 #> 1694    4      2   29  18.0980417   1    22 #> 1695    5      2   29  13.6523031   1    NA #> 1696    6      2   29  19.8970935   1     9 #> 1697    7      2   29  19.6706537   1     7 #> 1698    8      2   29  22.2383246   1    18 #> 1699    9      2   29  20.1387637   1    31 #> 1700   10      2   29  18.7367489   1     9 #> 1701    1      3   29  19.7105240   1    50 #> 1702    2      3   29  19.0192219   1    13 #> 1703    3      3   29  20.3929993   1     7 #> 1704    4      3   29  19.8207777   1     9 #> 1705    5      3   29  18.4958521   1     7 #> 1706    6      3   29  21.5628996   1     3 #> 1707    7      3   29  21.3798130   1    27 #> 1708    8      3   29  25.2885644   1    46 #> 1709    9      3   29  20.9650815   1    10 #> 1710   10      3   29  21.0985636   1     5 #> 1711    1      4   29  19.3160872   1     9 #> 1712    2      4   29  15.6381670   1    NA #> 1713    3      4   29  15.5198944   1    26 #> 1714    4      4   29  16.5599326   1     9 #> 1715    5      4   29  19.4660339   1     7 #> 1716    6      4   29  17.9793426   1    34 #> 1717    7      4   29  17.7904149   1     6 #> 1718    8      4   29  22.3989467   1    15 #> 1719    9      4   29  16.8960705   1    24 #> 1720   10      4   29  18.4071808   1     8 #> 1721    1      5   29  14.9971507   1     4 #> 1722    2      5   29  10.4689234   1    19 #> 1723    3      5   29   9.9418988   1     7 #> 1724    4      5   29  11.0916408   1    32 #> 1725    5      5   29  15.4008619   1    16 #> 1726    6      5   29  11.4977454   1    13 #> 1727    7      5   29  11.9735225   1    12 #> 1728    8      5   29  15.6112957   1     6 #> 1729    9      5   29  11.0875809   1    25 #> 1730   10      5   29  12.6254037   1    17 #> 1731    1      6   29   9.2044518   1     4 #> 1732    2      6   29   6.2080427   1     0 #> 1733    3      6   29   5.8920324   1     7 #> 1734    4      6   29   6.7101104   1     7 #> 1735    5      6   29  10.0812214   1     7 #> 1736    6      6   29   6.9515220   1     4 #> 1737    7      6   29   7.1100411   1     9 #> 1738    8      6   29   9.6566204   1    39 #> 1739    9      6   29   6.5901651   1    17 #> 1740   10      6   29   7.5981729   1     6 #> 1741    1      1   30  50.4290176   1     6 #> 1742    2      1   30  68.4110944   1    15 #> 1743    3      1   30  80.8569740   1    62 #> 1744    4      1   30  65.4116888   1    51 #> 1745    5      1   30  40.5550396   1     6 #> 1746    6      1   30  68.5606435   1    67 #> 1747    7      1   30  62.2645022   1     6 #> 1748    8      1   30  70.0956263   1    67 #> 1749    9      1   30  66.6214817   1    95 #> 1750   10      1   30  62.2452345   1    24 #> 1751    1      2   30  79.1078831   1   111 #> 1752    2      2   30  93.1904033   1    29 #> 1753    3      2   30 104.6705970   1    48 #> 1754    4      2   30  90.3886491   1    28 #> 1755    5      2   30  64.2907029   1    54 #> 1756    6      2   30  93.9334348   1    59 #> 1757    7      2   30  86.9611195   1    55 #> 1758    8      2   30 101.8334811   1    55 #> 1759    9      2   30  88.2367093   1   149 #> 1760   10      2   30  89.6819823   1    64 #> 1761    1      3   30  99.4541150   1    55 #> 1762    2      3   30 100.2496157   1   145 #> 1763    3      3   30 103.1317988   1    36 #> 1764    4      3   30  99.9166521   1    32 #> 1765    5      3   30  85.5827885   1   100 #> 1766    6      3   30 101.8915979   1    36 #> 1767    7      3   30  93.1398737   1    42 #> 1768    8      3   30 118.8187516   1    83 #> 1769    9      3   30  93.0990938   1   147 #> 1770   10      3   30 100.2391441   1   146 #> 1771    1      4   30  99.2604403   1   164 #> 1772    2      4   30  79.7611588   1   164 #> 1773    3      4   30  79.0342141   1    31 #> 1774    4      4   30  81.7347613   1   147 #> 1775    5      4   30  92.4004759   1   171 #> 1776    6      4   30  84.1933810   1   104 #> 1777    7      4   30  78.4806650   1   225 #> 1778    8      4   30 102.3496753   1    29 #> 1779    9      4   30  73.2599623   1    81 #> 1780   10      4   30  86.7070780   1    44 #> 1781    1      5   30  75.4441457   1    60 #> 1782    2      5   30  53.2991836   1    73 #> 1783    3      5   30  49.7275082   1    26 #> 1784    4      5   30  54.5933654   1     8 #> 1785    5      5   30  72.3915891   1    63 #> 1786    6      5   30  55.9026000   1   207 #> 1787    7      5   30  53.1620629   1   113 #> 1788    8      5   30  71.0381011   1    40 #> 1789    9      5   30  49.6535531   1    26 #> 1790   10      5   30  59.0378553   1    56 #> 1791    1      6   30  47.0816681   1    66 #> 1792    2      6   30  32.0652079   1    76 #> 1793    3      6   30  29.6668051   1    34 #> 1794    4      6   30  32.7015256   1     7 #> 1795    5      6   30  47.7060901   1    41 #> 1796    6      6   30  33.0033275   1    28 #> 1797    7      6   30  31.5153849   1    24 #> 1798    8      6   30  42.9189903   1    19 #> 1799    9      6   30  29.4749387   1    14 #> 1800   10      6   30  35.8190824   1    92 #> 1801    1      1   31  11.2899473   1     7 #> 1802    2      1   31  15.2433452   1     8 #> 1803    3      1   31  18.6765621   1    13 #> 1804    4      1   31  15.6388854   1    43 #> 1805    5      1   31   9.7387893   1     0 #> 1806    6      1   31  16.8969256   1    30 #> 1807    7      1   31  16.3211804   1    24 #> 1808    8      1   31  17.0168062   1    20 #> 1809    9      1   31  16.2041604   1     3 #> 1810   10      1   31  14.7117918   1    29 #> 1811    1      2   31  18.0455459   1     7 #> 1812    2      2   31  20.7641600   1    21 #> 1813    3      2   31  23.8362391   1    21 #> 1814    4      2   31  21.8348331   1     9 #> 1815    5      2   31  15.5401590   1     3 #> 1816    6      2   31  22.5788171   1    24 #> 1817    7      2   31  22.2302775   1    32 #> 1818    8      2   31  23.8049021   1    33 #> 1819    9      2   31  21.7358632   1    33 #> 1820   10      2   31  21.0972830   1    27 #> 1821    1      3   31  22.7742025   1    34 #> 1822    2      3   31  22.0435980   1    23 #> 1823    3      3   31  23.4124325   1    10 #> 1824    4      3   31  23.7640607   1    64 #> 1825    5      3   31  20.9059304   1    19 #> 1826    6      3   31  25.2000496   1    19 #> 1827    7      3   31  24.2931048   1    39 #> 1828    8      3   31  28.2962158   1    16 #> 1829    9      3   31  22.6860931   1    20 #> 1830   10      3   31  23.5416531   1     5 #> 1831    1      4   31  22.5445590   1     5 #> 1832    2      4   31  17.9974934   1    27 #> 1833    3      4   31  18.0801197   1    41 #> 1834    4      4   31  19.9252889   1    41 #> 1835    5      4   31  21.4414738   1    12 #> 1836    6      4   31  20.4293211   1     7 #> 1837    7      4   31  19.9077531   1    31 #> 1838    8      4   31  24.4062568   1    17 #> 1839    9      4   31  18.0993656   1    11 #> 1840   10      4   31  20.8807829   1    10 #> 1841    1      5   31  17.1835986   1     6 #> 1842    2      5   31  12.0212267   1    20 #> 1843    3      5   31  11.4718826   1    18 #> 1844    4      5   31  13.3394135   1    16 #> 1845    5      5   31  17.3605643   1    NA #> 1846    6      5   31  13.5143565   1     5 #> 1847    7      5   31  13.1099401   1     5 #> 1848    8      5   31  16.7268803   1     2 #> 1849    9      5   31  12.0279297   1    19 #> 1850   10      5   31  14.1299323   1     2 #> 1851    1      6   31  10.5767100   1     2 #> 1852    2      6   31   7.2135988   1    27 #> 1853    3      6   31   6.7768391   1     4 #> 1854    4      6   31   8.0601624   1     9 #> 1855    5      6   31  11.4878489   1     4 #> 1856    6      6   31   8.0328594   1     2 #> 1857    7      6   31   7.9249631   1     4 #> 1858    8      6   31  10.3341415   1    26 #> 1859    9      6   31   7.1822617   1     3 #> 1860   10      6   31   8.4319381   1    28 #> 1861    1      1   32  26.9799173   1     7 #> 1862    2      1   32  35.9604194   1    51 #> 1863    3      1   32  43.4349752   1    38 #> 1864    4      1   32  36.0873321   1   121 #> 1865    5      1   32  22.2711899   1    38 #> 1866    6      1   32  38.3670454   1    15 #> 1867    7      1   32  33.7978053   1    32 #> 1868    8      1   32  36.7435324   1     7 #> 1869    9      1   32  35.2243810   1   102 #> 1870   10      1   32  33.2391004   1    34 #> 1871    1      2   32  41.6905316   1    15 #> 1872    2      2   32  48.1321283   1    12 #> 1873    3      2   32  55.0727141   1    60 #> 1874    4      2   32  49.8813437   1    62 #> 1875    5      2   32  35.2838543   1    21 #> 1876    6      2   32  52.1712078   1    39 #> 1877    7      2   32  46.7324101   1    47 #> 1878    8      2   32  53.1145502   1    41 #> 1879    9      2   32  47.6004398   1     8 #> 1880   10      2   32  46.6157416   1    94 #> 1881    1      3   32  53.1278128   1    10 #> 1882    2      3   32  51.3701657   1    42 #> 1883    3      3   32  55.4642694   1     4 #> 1884    4      3   32  53.7484707   1     7 #> 1885    5      3   32  47.3602427   1    40 #> 1886    6      3   32  56.0310022   1    70 #> 1887    7      3   32  50.7654754   1    10 #> 1888    8      3   32  62.0393555   1    41 #> 1889    9      3   32  50.6128018   1    29 #> 1890   10      3   32  53.2319490   1    35 #> 1891    1      4   32  53.2702298   1     9 #> 1892    2      4   32  42.5546634   1    97 #> 1893    3      4   32  43.0160484   1    16 #> 1894    4      4   32  44.5622540   1    62 #> 1895    5      4   32  49.3249210   1    35 #> 1896    6      4   32  45.7824107   1    NA #> 1897    7      4   32  42.2092408   1    26 #> 1898    8      4   32  54.1087621   1    98 #> 1899    9      4   32  40.8600336   1    29 #> 1900   10      4   32  45.5183898   1    58 #> 1901    1      5   32  39.8487383   1     9 #> 1902    2      5   32  28.2685387   1    38 #> 1903    3      5   32  26.9324548   1    21 #> 1904    4      5   32  30.3490887   1    16 #> 1905    5      5   32  39.9628835   1    26 #> 1906    6      5   32  30.8471287   1    14 #> 1907    7      5   32  28.6086060   1    44 #> 1908    8      5   32  37.1821769   1    19 #> 1909    9      5   32  26.8647057   1    15 #> 1910   10      5   32  30.9804324   1    16 #> 1911    1      6   32  25.4330647   1    29 #> 1912    2      6   32  16.7142057   1    11 #> 1913    3      6   32  16.1065631   1    33 #> 1914    4      6   32  18.1035058   1     3 #> 1915    5      6   32  25.8870849   1    14 #> 1916    6      6   32  18.1702705   1     1 #> 1917    7      6   32  16.9009596   1    48 #> 1918    8      6   32  22.5427786   1    14 #> 1919    9      6   32  16.1034389   1    36 #> 1920   10      6   32  19.1350889   1    13 #> 1921    1      1   33  13.1342551   1     4 #> 1922    2      1   33  16.7865352   1    23 #> 1923    3      1   33  20.0799454   1    68 #> 1924    4      1   33  16.4417047   1    22 #> 1925    5      1   33  10.6799744   1    19 #> 1926    6      1   33  18.6102396   1     8 #> 1927    7      1   33  16.9693604   1    15 #> 1928    8      1   33  18.1251231   1    11 #> 1929    9      1   33  17.1531516   1    42 #> 1930   10      1   33  16.3830332   1    23 #> 1931    1      2   33  19.9001239   1    17 #> 1932    2      2   33  23.0648665   1    NA #> 1933    3      2   33  25.5201622   1    27 #> 1934    4      2   33  22.8077232   1    18 #> 1935    5      2   33  17.1882578   1    26 #> 1936    6      2   33  25.5652559   1    20 #> 1937    7      2   33  23.8549402   1     2 #> 1938    8      2   33  26.5311326   1    23 #> 1939    9      2   33  23.2968040   1     9 #> 1940   10      2   33  23.3904572   1    31 #> 1941    1      3   33  25.4998397   1     9 #> 1942    2      3   33  24.1585296   1    26 #> 1943    3      3   33  25.8526903   1     4 #> 1944    4      3   33  25.0024201   1    49 #> 1945    5      3   33  22.4692317   1    23 #> 1946    6      3   33  27.1306730   1    13 #> 1947    7      3   33  25.4180867   1     2 #> 1948    8      3   33  30.4216981   1    19 #> 1949    9      3   33  24.4151166   1    38 #> 1950   10      3   33  26.3026972   1    23 #> 1951    1      4   33  25.6013355   1     1 #> 1952    2      4   33  19.9305318   1    19 #> 1953    3      4   33  19.8815429   1    24 #> 1954    4      4   33  21.0068749   1    37 #> 1955    5      4   33  23.3372308   1    22 #> 1956    6      4   33  22.0884650   1    49 #> 1957    7      4   33  21.3148636   1    24 #> 1958    8      4   33  26.6406235   1    22 #> 1959    9      4   33  19.7806417   1    31 #> 1960   10      4   33  22.5202369   1     5 #> 1961    1      5   33  19.4706003   1     8 #> 1962    2      5   33  13.2338316   1    11 #> 1963    3      5   33  12.5977802   1     3 #> 1964    4      5   33  14.0458718   1     9 #> 1965    5      5   33  18.9577940   1    10 #> 1966    6      5   33  14.6898134   1     2 #> 1967    7      5   33  14.2635941   1    17 #> 1968    8      5   33  18.7531751   1     7 #> 1969    9      5   33  13.0353132   1    16 #> 1970   10      5   33  15.8097825   1    17 #> 1971    1      6   33  12.0890320   1    12 #> 1972    2      6   33   7.9934105   1    11 #> 1973    3      6   33   7.4866222   1     4 #> 1974    4      6   33   8.4086185   1     6 #> 1975    5      6   33  12.2994356   1    35 #> 1976    6      6   33   8.9622240   1     6 #> 1977    7      6   33   8.3758465   1     2 #> 1978    8      6   33  11.3137782   1    12 #> 1979    9      6   33   7.6872304   1    15 #> 1980   10      6   33   9.3713948   1     2 #> 1981    1      1   34   9.2482838   1    NA #> 1982    2      1   34  12.4876545   1    24 #> 1983    3      1   34  14.9144643   1     2 #> 1984    4      1   34  12.5478344   1     3 #> 1985    5      1   34   8.0373767   1    18 #> 1986    6      1   34  14.0889713   1    13 #> 1987    7      1   34  12.8653563   1    20 #> 1988    8      1   34  14.1375218   1    14 #> 1989    9      1   34  13.2631854   1    17 #> 1990   10      1   34  12.8139990   1    35 #> 1991    1      2   34  14.3900566   1    14 #> 1992    2      2   34  17.2296700   1    18 #> 1993    3      2   34  18.7074717   1     6 #> 1994    4      2   34  16.7992414   1    24 #> 1995    5      2   34  12.7111043   1     2 #> 1996    6      2   34  18.8773023   1    10 #> 1997    7      2   34  17.9088955   1    13 #> 1998    8      2   34  20.5456027   1    46 #> 1999    9      2   34  17.7944392   1    34 #> 2000   10      2   34  19.1088255   1    10 #> 2001    1      3   34  18.6336210   1    33 #> 2002    2      3   34  18.1750897   1    NA #> 2003    3      3   34  18.2825632   1     3 #> 2004    4      3   34  18.6781515   1     6 #> 2005    5      3   34  16.6616349   1    26 #> 2006    6      3   34  20.2391252   1     5 #> 2007    7      3   34  19.2534194   1    21 #> 2008    8      3   34  22.9615663   1    40 #> 2009    9      3   34  18.6007064   1    12 #> 2010   10      3   34  20.8745504   1    24 #> 2011    1      4   34  18.1523216   1    26 #> 2012    2      4   34  14.9525634   1     6 #> 2013    3      4   34  14.3470667   1    28 #> 2014    4      4   34  15.6936961   1    14 #> 2015    5      4   34  17.7824608   1    26 #> 2016    6      4   34  16.5621196   1     3 #> 2017    7      4   34  16.2271901   1     8 #> 2018    8      4   34  20.6704574   1     1 #> 2019    9      4   34  15.2014913   1     5 #> 2020   10      4   34  18.4330260   1    15 #> 2021    1      5   34  13.6495095   1    19 #> 2022    2      5   34   9.6876502   1     8 #> 2023    3      5   34   8.9606614   1     8 #> 2024    4      5   34  10.6238709   1    11 #> 2025    5      5   34  14.1228356   1    22 #> 2026    6      5   34  11.0319404   1     5 #> 2027    7      5   34  10.6371289   1     3 #> 2028    8      5   34  14.0353994   1    40 #> 2029    9      5   34   9.8739129   1    11 #> 2030   10      5   34  12.2604365   1    18 #> 2031    1      6   34   8.8031856   1    10 #> 2032    2      6   34   5.8358110   1    19 #> 2033    3      6   34   5.5213763   1     1 #> 2034    4      6   34   6.2487781   1    10 #> 2035    5      6   34   9.3184135   1    10 #> 2036    6      6   34   6.7068259   1    22 #> 2037    7      6   34   6.4545136   1     9 #> 2038    8      6   34   8.5835512   1     6 #> 2039    9      6   34   5.9097124   1     1 #> 2040   10      6   34   7.5431920   1     7 #> 2041    1      1   35   3.0296317   1     6 #> 2042    2      1   35   4.1099438   1     0 #> 2043    3      1   35   4.9831695   1     6 #> 2044    4      1   35   4.2350666   1     1 #> 2045    5      1   35   2.6831644   1     2 #> 2046    6      1   35   4.4728899   1     4 #> 2047    7      1   35   4.1820389   1     4 #> 2048    8      1   35   4.5844617   1     1 #> 2049    9      1   35   4.3853270   1    10 #> 2050   10      1   35   4.1647987   1     9 #> 2051    1      2   35   4.7108134   1    12 #> 2052    2      2   35   5.4908504   1    13 #> 2053    3      2   35   6.4380036   1     4 #> 2054    4      2   35   5.7580228   1    11 #> 2055    5      2   35   4.1210678   1    10 #> 2056    6      2   35   6.1768178   1     6 #> 2057    7      2   35   5.8348518   1    25 #> 2058    8      2   35   6.6022830   1     2 #> 2059    9      2   35   5.9658982   1     8 #> 2060   10      2   35   5.8905739   1     2 #> 2061    1      3   35   6.1224291   1     7 #> 2062    2      3   35   5.9678556   1     2 #> 2063    3      3   35   6.2006813   1    10 #> 2064    4      3   35   6.2651621   1     6 #> 2065    5      3   35   5.5991839   1     2 #> 2066    6      3   35   6.4966827   1     1 #> 2067    7      3   35   6.3434538   1     2 #> 2068    8      3   35   7.4455824   1     2 #> 2069    9      3   35   6.2328723   1    10 #> 2070   10      3   35   6.6653173   1    18 #> 2071    1      4   35   6.0239728   1     9 #> 2072    2      4   35   4.7937458   1     7 #> 2073    3      4   35   4.8255511   1     3 #> 2074    4      4   35   5.3551502   1     5 #> 2075    5      4   35   5.9142048   1     2 #> 2076    6      4   35   5.5350386   1     7 #> 2077    7      4   35   5.1977863   1     3 #> 2078    8      4   35   6.5439663   1    20 #> 2079    9      4   35   4.9159899   1    NA #> 2080   10      4   35   5.8161141   1     1 #> 2081    1      5   35   4.5594974   1    13 #> 2082    2      5   35   3.1580068   1     1 #> 2083    3      5   35   3.1145182   1     3 #> 2084    4      5   35   3.5444942   1     4 #> 2085    5      5   35   4.7324944   1     2 #> 2086    6      5   35   3.6192438   1     2 #> 2087    7      5   35   3.5093376   1     2 #> 2088    8      5   35   4.6223397   1    12 #> 2089    9      5   35   3.2129963   1     5 #> 2090   10      5   35   3.9481308   1     4 #> 2091    1      6   35   2.8807134   1     9 #> 2092    2      6   35   1.8845446   1     5 #> 2093    3      6   35   1.8060130   1     5 #> 2094    4      6   35   2.1471992   1     1 #> 2095    5      6   35   3.0773375   1     3 #> 2096    6      6   35   2.1884734   1     0 #> 2097    7      6   35   2.0751010   1     6 #> 2098    8      6   35   2.7922013   1     4 #> 2099    9      6   35   1.9197118   1     0 #> 2100   10      6   35   2.3762804   1     0 #> 2101    1      1   36   6.5336986   1    12 #> 2102    2      1   36   8.6879924   1     2 #> 2103    3      1   36  10.1987732   1    15 #> 2104    4      1   36   8.5543350   1    20 #> 2105    5      1   36   5.3881470   1     8 #> 2106    6      1   36   8.9908383   1     6 #> 2107    7      1   36   8.9641040   1     4 #> 2108    8      1   36   9.4514821   1    10 #> 2109    9      1   36   9.1611465   1     1 #> 2110   10      1   36   8.7951695   1    10 #> 2111    1      2   36  10.1460511   1     3 #> 2112    2      2   36  11.9105231   1    32 #> 2113    3      2   36  13.1701376   1    46 #> 2114    4      2   36  11.7292530   1     8 #> 2115    5      2   36   8.4457998   1    17 #> 2116    6      2   36  12.4401952   1    22 #> 2117    7      2   36  12.1103482   1     9 #> 2118    8      2   36  13.7895205   1     0 #> 2119    9      2   36  12.5308492   1     6 #> 2120   10      2   36  12.2840432   1    20 #> 2121    1      3   36  12.8602881   1     0 #> 2122    2      3   36  12.2796964   1     5 #> 2123    3      3   36  12.8626093   1    11 #> 2124    4      3   36  12.8603061   1     6 #> 2125    5      3   36  11.4074770   1     9 #> 2126    6      3   36  13.4926234   1     9 #> 2127    7      3   36  12.8107539   1    30 #> 2128    8      3   36  16.1117355   1    19 #> 2129    9      3   36  12.9042777   1     8 #> 2130   10      3   36  13.9232965   1    39 #> 2131    1      4   36  12.7984340   1    29 #> 2132    2      4   36  10.2023737   1     1 #> 2133    3      4   36  10.0175564   1     6 #> 2134    4      4   36  10.7195558   1     6 #> 2135    5      4   36  11.9865684   1     4 #> 2136    6      4   36  10.9309568   1     9 #> 2137    7      4   36  10.7886283   1    43 #> 2138    8      4   36  13.9410458   1     1 #> 2139    9      4   36  10.4149642   1    26 #> 2140   10      4   36  12.2261616   1     2 #> 2141    1      5   36   9.8240296   1     7 #> 2142    2      5   36   6.7140030   1    15 #> 2143    3      5   36   6.2342263   1    12 #> 2144    4      5   36   7.2028859   1     8 #> 2145    5      5   36   9.5731717   1    15 #> 2146    6      5   36   7.3654252   1     7 #> 2147    7      5   36   7.2988917   1     3 #> 2148    8      5   36   9.6010764   1    13 #> 2149    9      5   36   6.7869108   1     4 #> 2150   10      5   36   8.2125786   1     5 #> 2151    1      6   36   6.2595583   1     3 #> 2152    2      6   36   4.1135514   1     5 #> 2153    3      6   36   3.7790190   1     6 #> 2154    4      6   36   4.2891263   1     9 #> 2155    5      6   36   6.3878502   1     3 #> 2156    6      6   36   4.4404692   1     6 #> 2157    7      6   36   4.4210334   1     2 #> 2158    8      6   36   5.7889434   1     1 #> 2159    9      6   36   4.0805028   1    12 #> 2160   10      6   36   5.0277326   1     7 #> 2161    1      1   37   4.0303101   1     4 #> 2162    2      1   37   5.4442409   1     2 #> 2163    3      1   37   6.6456582   1     3 #> 2164    4      1   37   5.3785611   1     7 #> 2165    5      1   37   3.3072502   1     1 #> 2166    6      1   37   5.7002931   1     6 #> 2167    7      1   37   5.4348501   1     4 #> 2168    8      1   37   5.6626687   1     0 #> 2169    9      1   37   5.7539075   1    14 #> 2170   10      1   37   5.2187427   1     8 #> 2171    1      2   37   6.2284831   1     6 #> 2172    2      2   37   7.4844038   1    11 #> 2173    3      2   37   8.4699276   1    15 #> 2174    4      2   37   7.6104973   1     9 #> 2175    5      2   37   5.3195988   1     4 #> 2176    6      2   37   7.7498112   1     5 #> 2177    7      2   37   7.7580548   1     8 #> 2178    8      2   37   8.3330331   1     1 #> 2179    9      2   37   7.6809378   1    14 #> 2180   10      2   37   7.5434077   1     4 #> 2181    1      3   37   7.9107609   1     2 #> 2182    2      3   37   7.8711010   1    15 #> 2183    3      3   37   8.4755482   1    21 #> 2184    4      3   37   8.2262150   1     2 #> 2185    5      3   37   7.2061869   1     7 #> 2186    6      3   37   8.5234772   1    15 #> 2187    7      3   37   8.1480748   1    13 #> 2188    8      3   37   9.5944700   1     7 #> 2189    9      3   37   8.1249360   1    17 #> 2190   10      3   37   8.3176931   1    10 #> 2191    1      4   37   7.9201876   1     9 #> 2192    2      4   37   6.4525805   1     8 #> 2193    3      4   37   6.3524297   1     2 #> 2194    4      4   37   6.9986321   1    16 #> 2195    5      4   37   7.5538022   1     5 #> 2196    6      4   37   6.9498321   1    12 #> 2197    7      4   37   6.8244597   1     6 #> 2198    8      4   37   8.3157929   1    12 #> 2199    9      4   37   6.4378282   1     3 #> 2200   10      4   37   7.4666279   1     5 #> 2201    1      5   37   6.1017836   1     7 #> 2202    2      5   37   4.2970019   1     2 #> 2203    3      5   37   4.0724928   1     5 #> 2204    4      5   37   4.6384400   1    13 #> 2205    5      5   37   5.9898205   1     7 #> 2206    6      5   37   4.5434325   1     4 #> 2207    7      5   37   4.5098597   1     1 #> 2208    8      5   37   5.8177020   1     9 #> 2209    9      5   37   4.2423544   1     5 #> 2210   10      5   37   4.9965013   1     4 #> 2211    1      6   37   3.7807285   1     4 #> 2212    2      6   37   2.5409744   1     0 #> 2213    3      6   37   2.4385481   1     6 #> 2214    4      6   37   2.7334382   1     1 #> 2215    5      6   37   3.9122210   1     2 #> 2216    6      6   37   2.7358921   1    10 #> 2217    7      6   37   2.7444984   1     2 #> 2218    8      6   37   3.4946094   1     0 #> 2219    9      6   37   2.5366664   1     1 #> 2220   10      6   37   3.0582343   1     1 #> 2221    1      1   38   4.3862656   1    14 #> 2222    2      1   38   6.1083901   1     8 #> 2223    3      1   38   7.1782801   1     4 #> 2224    4      1   38   5.8762085   1     0 #> 2225    5      1   38   3.7570762   1     2 #> 2226    6      1   38   6.5205525   1     2 #> 2227    7      1   38   6.0715518   1     3 #> 2228    8      1   38   6.4698086   1     3 #> 2229    9      1   38   6.1884443   1     2 #> 2230   10      1   38   5.9758130   1    NA #> 2231    1      2   38   6.9091797   1     7 #> 2232    2      2   38   8.2346321   1     2 #> 2233    3      2   38   9.3973269   1    26 #> 2234    4      2   38   8.3771208   1    13 #> 2235    5      2   38   5.9308391   1     2 #> 2236    6      2   38   9.0213938   1     6 #> 2237    7      2   38   8.2851704   1    10 #> 2238    8      2   38   9.3381251   1     4 #> 2239    9      2   38   8.4790321   1     5 #> 2240   10      2   38   8.4746817   1     0 #> 2241    1      3   38   8.7824916   1    20 #> 2242    2      3   38   8.8703022   1     2 #> 2243    3      3   38   9.0868225   1     8 #> 2244    4      3   38   8.9063986   1     4 #> 2245    5      3   38   7.9049397   1     5 #> 2246    6      3   38   9.6064298   1     5 #> 2247    7      3   38   9.1613515   1     6 #> 2248    8      3   38  10.7111576   1    14 #> 2249    9      3   38   8.8684070   1     9 #> 2250   10      3   38   9.4610987   1     9 #> 2251    1      4   38   8.4758925   1     2 #> 2252    2      4   38   7.0962547   1    13 #> 2253    3      4   38   7.0038149   1    15 #> 2254    4      4   38   7.4593405   1    12 #> 2255    5      4   38   8.2646119   1    19 #> 2256    6      4   38   7.8488392   1     1 #> 2257    7      4   38   7.4509452   1     9 #> 2258    8      4   38   9.4954731   1     1 #> 2259    9      4   38   7.1376690   1     1 #> 2260   10      4   38   8.1914397   1    13 #> 2261    1      5   38   6.4626934   1     5 #> 2262    2      5   38   4.6804704   1     4 #> 2263    3      5   38   4.4780506   1    12 #> 2264    4      5   38   4.9321837   1    10 #> 2265    5      5   38   6.6042635   1    13 #> 2266    6      5   38   5.1438759   1     1 #> 2267    7      5   38   4.9745452   1     3 #> 2268    8      5   38   6.4261673   1     0 #> 2269    9      5   38   4.6721779   1     2 #> 2270   10      5   38   5.6484753   1     5 #> 2271    1      6   38   4.0662944   1     4 #> 2272    2      6   38   2.8631796   1     8 #> 2273    3      6   38   2.6698870   1     5 #> 2274    4      6   38   3.0557580   1     5 #> 2275    5      6   38   4.3743731   1     6 #> 2276    6      6   38   3.1408443   1     0 #> 2277    7      6   38   2.9617881   1     3 #> 2278    8      6   38   3.8795651   1     4 #> 2279    9      6   38   2.7648392   1     1 #> 2280   10      6   38   3.4334420   1     5 #> 2281    1      1   39   6.2414918   1    NA #> 2282    2      1   39   8.4890194   1     2 #> 2283    3      1   39   9.9535166   1    13 #> 2284    4      1   39   8.3883943   1     7 #> 2285    5      1   39   5.1886553   1    12 #> 2286    6      1   39   9.3422224   1     7 #> 2287    7      1   39   8.4792588   1     7 #> 2288    8      1   39   9.4579375   1     9 #> 2289    9      1   39   9.1689085   1    19 #> 2290   10      1   39   8.3992167   1     2 #> 2291    1      2   39   9.6455429   1     3 #> 2292    2      2   39  11.5104773   1    13 #> 2293    3      2   39  12.9401889   1     5 #> 2294    4      2   39  11.6136679   1     7 #> 2295    5      2   39   8.2978949   1     6 #> 2296    6      2   39  12.8626361   1     8 #> 2297    7      2   39  11.7696112   1     7 #> 2298    8      2   39  13.6382987   1    19 #> 2299    9      2   39  12.3366760   1     0 #> 2300   10      2   39  12.5073754   1    10 #> 2301    1      3   39  12.0046383   1    21 #> 2302    2      3   39  12.3929676   1     7 #> 2303    3      3   39  12.7653478   1    10 #> 2304    4      3   39  12.7168001   1     9 #> 2305    5      3   39  11.0716222   1     7 #> 2306    6      3   39  13.5008021   1    23 #> 2307    7      3   39  12.8458474   1    11 #> 2308    8      3   39  15.4384880   1    NA #> 2309    9      3   39  12.7694892   1    16 #> 2310   10      3   39  13.6856251   1     7 #> 2311    1      4   39  12.0384971   1     1 #> 2312    2      4   39   9.8631605   1     8 #> 2313    3      4   39   9.7264182   1     8 #> 2314    4      4   39  10.4749610   1    31 #> 2315    5      4   39  11.6035269   1    18 #> 2316    6      4   39  11.1113621   1     1 #> 2317    7      4   39  10.5804319   1     7 #> 2318    8      4   39  13.7754790   1    24 #> 2319    9      4   39  10.3473729   1     5 #> 2320   10      4   39  12.1690158   1    19 #> 2321    1      5   39   9.1220048   1     2 #> 2322    2      5   39   6.4811080   1     4 #> 2323    3      5   39   6.1408782   1    21 #> 2324    4      5   39   7.0945362   1    13 #> 2325    5      5   39   9.2540337   1    21 #> 2326    6      5   39   7.4547486   1     3 #> 2327    7      5   39   6.9705511   1     2 #> 2328    8      5   39   9.5340927   1    10 #> 2329    9      5   39   6.7398426   1     8 #> 2330   10      5   39   8.3174464   1    14 #> 2331    1      6   39   5.7134400   1     8 #> 2332    2      6   39   3.8592522   1     4 #> 2333    3      6   39   3.7117248   1     6 #> 2334    4      6   39   4.2291137   1     1 #> 2335    5      6   39   5.9923495   1     1 #> 2336    6      6   39   4.4787263   1     5 #> 2337    7      6   39   4.3232569   1     2 #> 2338    8      6   39   5.7893930   1     4 #> 2339    9      6   39   4.0028679   1     1 #> 2340   10      6   39   4.9722363   1     6 #> 2341    1      1   40  31.7226057   1     4 #> 2342    2      1   40  42.9748457   1    49 #> 2343    3      1   40  50.3071398   1    58 #> 2344    4      1   40  42.0249741   1    19 #> 2345    5      1   40  27.3312855   1    58 #> 2346    6      1   40  46.8546055   1   117 #> 2347    7      1   40  43.1627403   1    78 #> 2348    8      1   40  46.9562736   1    90 #> 2349    9      1   40  43.5659064   1    24 #> 2350   10      1   40  41.4813905   1    20 #> 2351    1      2   40  49.7600265   1    60 #> 2352    2      2   40  58.9079742   1    82 #> 2353    3      2   40  64.2800417   1    36 #> 2354    4      2   40  58.0685076   1    98 #> 2355    5      2   40  43.9625475   1    13 #> 2356    6      2   40  64.7012976   1    30 #> 2357    7      2   40  59.8078818   1     8 #> 2358    8      2   40  64.8679966   1    79 #> 2359    9      2   40  59.3480119   1     7 #> 2360   10      2   40  60.0851257   1    39 #> 2361    1      3   40  63.3027314   1   102 #> 2362    2      3   40  62.3264970   1    38 #> 2363    3      3   40  64.8060812   1    48 #> 2364    4      3   40  62.1919931   1    21 #> 2365    5      3   40  58.9779600   1   135 #> 2366    6      3   40  70.9222435   1    19 #> 2367    7      3   40  65.9433479   1    42 #> 2368    8      3   40  75.7012610   1    51 #> 2369    9      3   40  61.9403713   1   103 #> 2370   10      3   40  65.9090936   1    18 #> 2371    1      4   40  61.6895777   1    13 #> 2372    2      4   40  50.3013733   1    57 #> 2373    3      4   40  48.4975292   1    34 #> 2374    4      4   40  53.2313000   1    25 #> 2375    5      4   40  62.1049578   1    10 #> 2376    6      4   40  57.0519362   1   118 #> 2377    7      4   40  53.4041242   1    68 #> 2378    8      4   40  66.6128843   1    75 #> 2379    9      4   40  49.6154109   1    24 #> 2380   10      4   40  56.2437876   1    37 #> 2381    1      5   40  47.3342044   1    26 #> 2382    2      5   40  33.7293221   1    68 #> 2383    3      5   40  30.8602381   1    37 #> 2384    4      5   40  35.6966178   1    78 #> 2385    5      5   40  49.1778319   1    50 #> 2386    6      5   40  37.7066041   1    42 #> 2387    7      5   40  35.4527988   1    61 #> 2388    8      5   40  46.1694561   1    79 #> 2389    9      5   40  33.1972426   1   113 #> 2390   10      5   40  38.9740197   1    17 #> 2391    1      6   40  30.4865486   1    48 #> 2392    2      6   40  20.0307802   1    NA #> 2393    3      6   40  18.5770601   1    25 #> 2394    4      6   40  20.9418242   1    23 #> 2395    5      6   40  32.4359770   1    30 #> 2396    6      6   40  22.0701045   1    30 #> 2397    7      6   40  21.7720093   1     4 #> 2398    8      6   40  28.1813566   1    39 #> 2399    9      6   40  19.6031951   1     2 #> 2400   10      6   40  23.3805610   1    15 #> 2401    1      1   41  23.0156107   1     1 #> 2402    2      1   41  31.5756228   1     6 #> 2403    3      1   41  36.8620593   1    60 #> 2404    4      1   41  29.6081755   1     9 #> 2405    5      1   41  18.3323349   1    11 #> 2406    6      1   41  32.0225986   1    31 #> 2407    7      1   41  30.0034502   1    24 #> 2408    8      1   41  32.1231286   1    52 #> 2409    9      1   41  31.0990555   1    64 #> 2410   10      1   41  28.4033587   1    13 #> 2411    1      2   41  35.4750920   1    25 #> 2412    2      2   41  43.0900379   1   155 #> 2413    3      2   41  46.8976043   1    31 #> 2414    4      2   41  41.6105115   1    34 #> 2415    5      2   41  29.3399272   1    13 #> 2416    6      2   41  44.6811134   1    12 #> 2417    7      2   41  41.4290054   1   143 #> 2418    8      2   41  46.5726061   1    65 #> 2419    9      2   41  41.4630854   1    50 #> 2420   10      2   41  40.8096848   1    31 #> 2421    1      3   41  46.5912061   1    64 #> 2422    2      3   41  45.9291895   1    39 #> 2423    3      3   41  46.8265806   1    43 #> 2424    4      3   41  45.6307454   1    52 #> 2425    5      3   41  39.3033666   1     7 #> 2426    6      3   41  47.2185342   1    42 #> 2427    7      3   41  45.0902546   1    53 #> 2428    8      3   41  52.8607289   1   106 #> 2429    9      3   41  43.9249687   1    21 #> 2430   10      3   41  45.4837383   1    52 #> 2431    1      4   41  44.7177646   1    68 #> 2432    2      4   41  38.0512084   1    14 #> 2433    3      4   41  35.8197942   1     9 #> 2434    4      4   41  38.3958727   1    33 #> 2435    5      4   41  41.5753192   1    28 #> 2436    6      4   41  38.6660841   1    23 #> 2437    7      4   41  37.7362688   1    49 #> 2438    8      4   41  46.9408314   1    19 #> 2439    9      4   41  35.6248514   1    23 #> 2440   10      4   41  39.1799472   1     8 #> 2441    1      5   41  34.2270222   1     4 #> 2442    2      5   41  24.5323960   1    22 #> 2443    3      5   41  23.1675893   1    57 #> 2444    4      5   41  24.8917062   1    19 #> 2445    5      5   41  32.9285787   1    21 #> 2446    6      5   41  25.6666121   1    27 #> 2447    7      5   41  24.7350432   1    23 #> 2448    8      5   41  32.5528186   1   124 #> 2449    9      5   41  23.0140636   1    10 #> 2450   10      5   41  27.2059700   1     6 #> 2451    1      6   41  21.3693854   1    43 #> 2452    2      6   41  14.7907665   1     1 #> 2453    3      6   41  13.5371370   1    14 #> 2454    4      6   41  15.0840487   1    11 #> 2455    5      6   41  21.4720332   1    34 #> 2456    6      6   41  15.3062757   1    22 #> 2457    7      6   41  14.9673710   1     6 #> 2458    8      6   41  19.8366131   1    23 #> 2459    9      6   41  13.5009194   1    12 #> 2460   10      6   41  16.4846152   1    11 #> 2461    1      1   42   4.7288146   1     1 #> 2462    2      1   42   6.0132505   1    14 #> 2463    3      1   42   7.5126540   1     6 #> 2464    4      1   42   6.3488936   1     5 #> 2465    5      1   42   4.0219285   1     7 #> 2466    6      1   42   7.2728775   1     3 #> 2467    7      1   42   6.6286992   1    11 #> 2468    8      1   42   7.3069181   1     6 #> 2469    9      1   42   7.2617662   1     3 #> 2470   10      1   42   6.7476250   1     7 #> 2471    1      2   42   7.2219257   1     3 #> 2472    2      2   42   8.1851460   1     6 #> 2473    3      2   42   9.7124927   1     7 #> 2474    4      2   42   8.6970874   1    15 #> 2475    5      2   42   6.5447975   1     5 #> 2476    6      2   42  10.0291237   1    11 #> 2477    7      2   42   9.1809875   1    11 #> 2478    8      2   42  10.5255594   1    20 #> 2479    9      2   42   9.7841723   1     4 #> 2480   10      2   42   9.5370050   1     4 #> 2481    1      3   42   9.2428497   1     2 #> 2482    2      3   42   8.6062863   1    19 #> 2483    3      3   42   9.7171062   1    14 #> 2484    4      3   42   9.5508687   1    21 #> 2485    5      3   42   8.7588228   1    30 #> 2486    6      3   42  10.6168073   1    11 #> 2487    7      3   42  10.0978632   1     4 #> 2488    8      3   42  12.2577219   1     0 #> 2489    9      3   42  10.3141527   1     0 #> 2490   10      3   42  10.8829917   1    20 #> 2491    1      4   42   9.0581858   1     7 #> 2492    2      4   42   6.9593208   1     7 #> 2493    3      4   42   7.3797673   1     2 #> 2494    4      4   42   7.9688157   1    11 #> 2495    5      4   42   9.0200554   1     9 #> 2496    6      4   42   8.7055939   1     5 #> 2497    7      4   42   8.3322360   1    21 #> 2498    8      4   42  10.6108379   1     7 #> 2499    9      4   42   8.1843323   1     2 #> 2500   10      4   42   9.4687104   1    20 #> 2501    1      5   42   6.8424258   1     3 #> 2502    2      5   42   4.7135074   1     7 #> 2503    3      5   42   4.7637479   1     2 #> 2504    4      5   42   5.3852958   1     6 #> 2505    5      5   42   7.2800836   1     4 #> 2506    6      5   42   5.7799209   1    10 #> 2507    7      5   42   5.5578474   1     2 #> 2508    8      5   42   7.3122428   1     0 #> 2509    9      5   42   5.4521820   1     3 #> 2510   10      5   42   6.3480012   1     8 #> 2511    1      6   42   4.3422348   1     0 #> 2512    2      6   42   2.7842634   1     0 #> 2513    3      6   42   2.7710406   1     3 #> 2514    4      6   42   3.2876879   1     6 #> 2515    5      6   42   4.7573063   1    11 #> 2516    6      6   42   3.4329033   1     1 #> 2517    7      6   42   3.3344736   1     8 #> 2518    8      6   42   4.5215101   1     3 #> 2519    9      6   42   3.2142763   1     4 #> 2520   10      6   42   3.9015077   1     5 #> 2521    1      1   43  12.4680712   1    11 #> 2522    2      1   43  16.6762950   1    35 #> 2523    3      1   43  21.0455587   1    10 #> 2524    4      1   43  16.8390401   1     3 #> 2525    5      1   43  10.8514445   1     3 #> 2526    6      1   43  18.7271230   1    23 #> 2527    7      1   43  17.7655950   1     7 #> 2528    8      1   43  18.5891644   1    15 #> 2529    9      1   43  17.3195987   1    24 #> 2530   10      1   43  16.1161158   1     4 #> 2531    1      2   43  19.1850321   1     1 #> 2532    2      2   43  22.5289414   1    24 #> 2533    3      2   43  26.2907728   1    38 #> 2534    4      2   43  23.3712814   1    25 #> 2535    5      2   43  17.2942416   1    17 #> 2536    6      2   43  25.6523234   1    52 #> 2537    7      2   43  23.8903274   1    44 #> 2538    8      2   43  27.2310802   1    53 #> 2539    9      2   43  23.6992257   1     8 #> 2540   10      2   43  23.0155692   1    43 #> 2541    1      3   43  24.9133832   1    40 #> 2542    2      3   43  24.1453922   1    27 #> 2543    3      3   43  26.6637648   1    33 #> 2544    4      3   43  25.9780950   1    11 #> 2545    5      3   43  23.3579160   1    28 #> 2546    6      3   43  27.5388898   1    11 #> 2547    7      3   43  25.7363535   1     6 #> 2548    8      3   43  31.1704899   1    28 #> 2549    9      3   43  24.3828194   1    43 #> 2550   10      3   43  25.8263694   1    38 #> 2551    1      4   43  24.7888417   1    41 #> 2552    2      4   43  19.7339643   1    29 #> 2553    3      4   43  20.3754912   1    NA #> 2554    4      4   43  21.2825271   1    13 #> 2555    5      4   43  24.5637698   1    15 #> 2556    6      4   43  22.5585770   1    20 #> 2557    7      4   43  21.8207941   1    12 #> 2558    8      4   43  26.9645675   1     3 #> 2559    9      4   43  19.8139137   1    42 #> 2560   10      4   43  22.1868985   1    35 #> 2561    1      5   43  18.3049910   1    21 #> 2562    2      5   43  13.1291026   1    18 #> 2563    3      5   43  12.9554709   1     5 #> 2564    4      5   43  14.1622804   1     3 #> 2565    5      5   43  19.2977684   1    15 #> 2566    6      5   43  14.7923137   1    36 #> 2567    7      5   43  14.2794600   1    17 #> 2568    8      5   43  18.6990603   1    35 #> 2569    9      5   43  13.0528942   1    15 #> 2570   10      5   43  15.5815539   1    16 #> 2571    1      6   43  11.7489630   1    10 #> 2572    2      6   43   7.7980506   1     7 #> 2573    3      6   43   7.6286660   1     5 #> 2574    4      6   43   8.5682222   1    12 #> 2575    5      6   43  12.5557919   1     0 #> 2576    6      6   43   9.0166447   1     7 #> 2577    7      6   43   8.8474186   1     2 #> 2578    8      6   43  11.3097147   1    24 #> 2579    9      6   43   7.6287615   1     4 #> 2580   10      6   43   9.3593981   1     9 #> 2581    1      1   44  39.0480675   1    25 #> 2582    2      1   44  51.6028748   1    47 #> 2583    3      1   44  62.9718937   1    16 #> 2584    4      1   44  52.9117068   1    11 #> 2585    5      1   44  33.7758379   1     3 #> 2586    6      1   44  59.0858642   1    56 #> 2587    7      1   44  58.3743964   1    62 #> 2588    8      1   44  62.0942018   1   103 #> 2589    9      1   44  60.7033143   1    12 #> 2590   10      1   44  56.9100178   1    26 #> 2591    1      2   44  60.7904624   1    67 #> 2592    2      2   44  70.9593435   1    39 #> 2593    3      2   44  81.4221066   1    96 #> 2594    4      2   44  74.8180044   1    55 #> 2595    5      2   44  54.0815844   1    70 #> 2596    6      2   44  80.7957861   1    NA #> 2597    7      2   44  80.4442281   1    30 #> 2598    8      2   44  87.9876896   1   123 #> 2599    9      2   44  78.3464798   1    99 #> 2600   10      2   44  81.2000109   1   187 #> 2601    1      3   44  77.3330187   1    60 #> 2602    2      3   44  74.3663828   1   182 #> 2603    3      3   44  81.3175222   1    66 #> 2604    4      3   44  80.8915754   1   136 #> 2605    5      3   44  74.0089568   1    75 #> 2606    6      3   44  88.0147576   1   121 #> 2607    7      3   44  87.9109502   1   264 #> 2608    8      3   44 102.2729581   1   124 #> 2609    9      3   44  83.1493800   1    83 #> 2610   10      3   44  91.7361020   1    82 #> 2611    1      4   44  76.0242552   1    76 #> 2612    2      4   44  60.8143568   1    54 #> 2613    3      4   44  61.6112732   1    82 #> 2614    4      4   44  68.1434332   1    22 #> 2615    5      4   44  76.6566003   1   127 #> 2616    6      4   44  70.3631048   1    72 #> 2617    7      4   44  70.9839967   1   125 #> 2618    8      4   44  91.5985148   1   146 #> 2619    9      4   44  66.6835014   1    76 #> 2620   10      4   44  78.1862717   1   149 #> 2621    1      5   44  57.1762699   1    43 #> 2622    2      5   44  39.8893653   1    14 #> 2623    3      5   44  39.2103722   1    62 #> 2624    4      5   44  44.3361122   1    57 #> 2625    5      5   44  61.7163918   1    67 #> 2626    6      5   44  46.9526798   1    19 #> 2627    7      5   44  48.4509320   1    NA #> 2628    8      5   44  61.5342086   1    35 #> 2629    9      5   44  43.6881910   1    43 #> 2630   10      5   44  54.0193869   1    40 #> 2631    1      6   44  35.5514829   1    41 #> 2632    2      6   44  23.8101087   1     0 #> 2633    3      6   44  23.6249375   1    51 #> 2634    4      6   44  27.1297205   1    23 #> 2635    5      6   44  39.9780712   1    35 #> 2636    6      6   44  28.0877105   1    26 #> 2637    7      6   44  28.7120328   1     9 #> 2638    8      6   44  38.0580122   1     8 #> 2639    9      6   44  26.3949638   1    23 #> 2640   10      6   44  33.2370274   1    42 #> 2641    1      1   45  15.1007986   1    11 #> 2642    2      1   45  20.1570858   1    27 #> 2643    3      1   45  24.7690102   1     2 #> 2644    4      1   45  20.7620194   1     5 #> 2645    5      1   45  13.1504902   1    18 #> 2646    6      1   45  22.3279332   1    10 #> 2647    7      1   45  20.3624708   1    18 #> 2648    8      1   45  21.5495004   1    25 #> 2649    9      1   45  20.9908903   1     3 #> 2650   10      1   45  19.7116753   1    27 #> 2651    1      2   45  22.7927241   1     5 #> 2652    2      2   45  28.0884587   1    71 #> 2653    3      2   45  32.5877887   1     6 #> 2654    4      2   45  28.7820961   1    25 #> 2655    5      2   45  20.9016407   1    22 #> 2656    6      2   45  30.8719083   1    40 #> 2657    7      2   45  28.0128574   1    23 #> 2658    8      2   45  31.1457167   1    22 #> 2659    9      2   45  28.5125936   1    10 #> 2660   10      2   45  27.5830354   1    28 #> 2661    1      3   45  29.3897915   1    46 #> 2662    2      3   45  29.8603539   1    24 #> 2663    3      3   45  31.9378850   1    15 #> 2664    4      3   45  31.1420576   1     6 #> 2665    5      3   45  28.1359594   1     7 #> 2666    6      3   45  33.0872078   1    40 #> 2667    7      3   45  29.5757786   1    44 #> 2668    8      3   45  35.5120156   1    12 #> 2669    9      3   45  29.6579078   1    42 #> 2670   10      3   45  31.5081428   1    NA #> 2671    1      4   45  28.6009023   1    31 #> 2672    2      4   45  23.9897850   1    75 #> 2673    3      4   45  24.4379145   1    33 #> 2674    4      4   45  25.8549534   1    34 #> 2675    5      4   45  29.1519777   1    14 #> 2676    6      4   45  27.0706370   1    17 #> 2677    7      4   45  24.8041035   1    11 #> 2678    8      4   45  31.5589821   1    16 #> 2679    9      4   45  24.0006657   1    35 #> 2680   10      4   45  27.7506425   1    53 #> 2681    1      5   45  22.1914406   1     9 #> 2682    2      5   45  15.7987476   1    40 #> 2683    3      5   45  15.5719987   1    45 #> 2684    4      5   45  17.7651115   1    63 #> 2685    5      5   45  23.4779977   1    15 #> 2686    6      5   45  17.5992531   1    33 #> 2687    7      5   45  16.7398449   1    24 #> 2688    8      5   45  21.9936166   1     8 #> 2689    9      5   45  15.6013121   1    45 #> 2690   10      5   45  18.5697297   1    38 #> 2691    1      6   45  13.7777845   1     3 #> 2692    2      6   45   9.6441509   1    11 #> 2693    3      6   45   9.5437214   1     5 #> 2694    4      6   45  10.4177889   1     7 #> 2695    5      6   45  15.3556785   1     6 #> 2696    6      6   45  10.5465099   1    10 #> 2697    7      6   45  10.1083757   1    22 #> 2698    8      6   45  13.1332114   1     9 #> 2699    9      6   45   9.4025373   1     3 #> 2700   10      6   45  11.1516645   1    17 #> 2701    1      1   46   8.2062266   1     6 #> 2702    2      1   46  11.3226230   1    17 #> 2703    3      1   46  13.5829449   1    13 #> 2704    4      1   46  11.0519956   1     7 #> 2705    5      1   46   7.1899141   1     1 #> 2706    6      1   46  11.7723408   1     8 #> 2707    7      1   46  11.8556482   1     7 #> 2708    8      1   46  12.4466240   1    36 #> 2709    9      1   46  11.7780301   1    26 #> 2710   10      1   46  11.6397505   1    23 #> 2711    1      2   46  12.7908029   1     2 #> 2712    2      2   46  15.3491123   1     6 #> 2713    3      2   46  17.2613331   1     4 #> 2714    4      2   46  15.3325101   1    10 #> 2715    5      2   46  11.4979070   1     7 #> 2716    6      2   46  16.6058995   1    24 #> 2717    7      2   46  15.8700339   1    15 #> 2718    8      2   46  18.2102529   1    37 #> 2719    9      2   46  15.5909262   1    44 #> 2720   10      2   46  16.3376808   1    30 #> 2721    1      3   46  16.3189103   1    16 #> 2722    2      3   46  16.4423644   1    13 #> 2723    3      3   46  17.2832758   1    33 #> 2724    4      3   46  16.6944397   1    15 #> 2725    5      3   46  15.2275966   1    24 #> 2726    6      3   46  17.9368977   1    19 #> 2727    7      3   46  17.3224035   1    11 #> 2728    8      3   46  20.6728622   1    13 #> 2729    9      3   46  16.7033633   1     9 #> 2730   10      3   46  18.2540930   1     7 #> 2731    1      4   46  16.0839455   1     8 #> 2732    2      4   46  13.6022958   1     4 #> 2733    3      4   46  13.3083686   1    19 #> 2734    4      4   46  13.7748997   1    22 #> 2735    5      4   46  15.7288407   1    15 #> 2736    6      4   46  14.6064868   1    22 #> 2737    7      4   46  14.3298769   1     4 #> 2738    8      4   46  17.6505689   1    29 #> 2739    9      4   46  13.4509948   1    29 #> 2740   10      4   46  15.6305433   1    18 #> 2741    1      5   46  12.3037482   1    22 #> 2742    2      5   46   8.8414863   1    13 #> 2743    3      5   46   8.2470752   1    11 #> 2744    4      5   46   9.3789426   1     3 #> 2745    5      5   46  12.5463648   1     4 #> 2746    6      5   46   9.6296941   1    21 #> 2747    7      5   46   9.5618512   1    17 #> 2748    8      5   46  12.9137163   1    14 #> 2749    9      5   46   8.7844980   1     4 #> 2750   10      5   46  10.9318670   1    19 #> 2751    1      6   46   7.7967149   1     1 #> 2752    2      6   46   5.3386283   1     4 #> 2753    3      6   46   5.0220546   1     6 #> 2754    4      6   46   5.7216544   1    10 #> 2755    5      6   46   8.2696808   1     9 #> 2756    6      6   46   5.7126795   1     6 #> 2757    7      6   46   5.7735213   1    10 #> 2758    8      6   46   7.6156161   1    18 #> 2759    9      6   46   5.1814244   1    11 #> 2760   10      6   46   6.5268788   1     4 #> 2761    1      1   47   6.6072424   1     4 #> 2762    2      1   47   8.6133842   1    12 #> 2763    3      1   47  10.6087159   1    18 #> 2764    4      1   47   8.9337371   1     3 #> 2765    5      1   47   5.4859131   1     2 #> 2766    6      1   47   9.2139983   1    22 #> 2767    7      1   47   8.5899658   1     6 #> 2768    8      1   47   9.6858826   1     4 #> 2769    9      1   47   9.5595186   1    13 #> 2770   10      1   47   8.7930800   1     6 #> 2771    1      2   47  10.0838715   1    15 #> 2772    2      2   47  11.7067989   1     4 #> 2773    3      2   47  13.5924023   1     3 #> 2774    4      2   47  12.5848260   1     7 #> 2775    5      2   47   8.6459243   1     5 #> 2776    6      2   47  12.7505180   1    11 #> 2777    7      2   47  11.8560528   1     1 #> 2778    8      2   47  13.7632907   1    10 #> 2779    9      2   47  12.6285893   1    19 #> 2780   10      2   47  12.5620334   1    12 #> 2781    1      3   47  12.8697773   1    24 #> 2782    2      3   47  12.5158810   1    14 #> 2783    3      3   47  13.4049123   1    10 #> 2784    4      3   47  13.5816243   1    10 #> 2785    5      3   47  11.5815243   1     6 #> 2786    6      3   47  13.6143455   1     1 #> 2787    7      3   47  13.1172693   1    20 #> 2788    8      3   47  15.9013534   1     6 #> 2789    9      3   47  13.5343334   1    14 #> 2790   10      3   47  14.4125293   1    17 #> 2791    1      4   47  12.9550845   1     1 #> 2792    2      4   47  10.2076607   1     9 #> 2793    3      4   47  10.2270754   1     7 #> 2794    4      4   47  11.1928283   1     3 #> 2795    5      4   47  12.1977540   1    21 #> 2796    6      4   47  11.1367744   1     7 #> 2797    7      4   47  10.8571790   1     2 #> 2798    8      4   47  14.2071681   1     5 #> 2799    9      4   47  10.7739158   1     4 #> 2800   10      4   47  12.3761798   1    25 #> 2801    1      5   47   9.9775793   1     6 #> 2802    2      5   47   6.8403287   1     0 #> 2803    3      5   47   6.5344925   1     4 #> 2804    4      5   47   7.6352803   1     2 #> 2805    5      5   47   9.7121193   1    22 #> 2806    6      5   47   7.4133154   1    24 #> 2807    7      5   47   7.1941731   1     2 #> 2808    8      5   47   9.9341450   1    13 #> 2809    9      5   47   6.9313625   1    12 #> 2810   10      5   47   8.6050159   1    16 #> 2811    1      6   47   6.1943077   1    16 #> 2812    2      6   47   4.0268476   1     2 #> 2813    3      6   47   3.9233086   1    NA #> 2814    4      6   47   4.5805839   1    10 #> 2815    5      6   47   6.3426243   1     1 #> 2816    6      6   47   4.4556489   1     6 #> 2817    7      6   47   4.2684057   1    10 #> 2818    8      6   47   5.9689303   1     2 #> 2819    9      6   47   4.1742002   1     4 #> 2820   10      6   47   5.1156426   1     0 #> 2821    1      1   48   3.4936389   1     0 #> 2822    2      1   48   4.6834148   1     6 #> 2823    3      1   48   5.5436798   1     3 #> 2824    4      1   48   4.5849631   1     4 #> 2825    5      1   48   2.8779107   1     5 #> 2826    6      1   48   5.0497445   1     0 #> 2827    7      1   48   4.6523305   1    11 #> 2828    8      1   48   4.8093800   1     0 #> 2829    9      1   48   4.7099235   1     2 #> 2830   10      1   48   4.3034077   1     5 #> 2831    1      2   48   5.4953315   1     3 #> 2832    2      2   48   6.3890417   1     6 #> 2833    3      2   48   7.0736243   1     7 #> 2834    4      2   48   6.2844454   1     1 #> 2835    5      2   48   4.6294753   1     1 #> 2836    6      2   48   6.8227203   1     4 #> 2837    7      2   48   6.4006018   1     4 #> 2838    8      2   48   6.9544994   1     3 #> 2839    9      2   48   6.2675737   1     6 #> 2840   10      2   48   6.1969944   1    12 #> 2841    1      3   48   6.8802355   1     1 #> 2842    2      3   48   6.8402432   1    11 #> 2843    3      3   48   7.0489289   1    14 #> 2844    4      3   48   6.8432179   1     3 #> 2845    5      3   48   6.2263527   1     3 #> 2846    6      3   48   7.4185950   1     4 #> 2847    7      3   48   6.8612481   1     5 #> 2848    8      3   48   8.1312431   1    10 #> 2849    9      3   48   6.5867617   1     3 #> 2850   10      3   48   7.0349699   1     7 #> 2851    1      4   48   6.7030942   1     5 #> 2852    2      4   48   5.6616376   1     4 #> 2853    3      4   48   5.3346030   1     3 #> 2854    4      4   48   5.7246953   1     2 #> 2855    5      4   48   6.4747617   1    NA #> 2856    6      4   48   6.0906706   1     7 #> 2857    7      4   48   5.7049775   1     5 #> 2858    8      4   48   7.0899970   1     4 #> 2859    9      4   48   5.3305421   1     7 #> 2860   10      4   48   6.0134157   1     4 #> 2861    1      5   48   5.1988952   1     3 #> 2862    2      5   48   3.7045053   1     3 #> 2863    3      5   48   3.3622113   1     0 #> 2864    4      5   48   3.8251549   1    NA #> 2865    5      5   48   5.1595662   1     4 #> 2866    6      5   48   3.9773836   1     1 #> 2867    7      5   48   3.8447278   1     2 #> 2868    8      5   48   4.8869698   1     3 #> 2869    9      5   48   3.5112807   1     3 #> 2870   10      5   48   4.0819390   1     8 #> 2871    1      6   48   3.3076685   1     4 #> 2872    2      6   48   2.2191509   1     1 #> 2873    3      6   48   2.0591338   1     0 #> 2874    4      6   48   2.3364880   1     3 #> 2875    5      6   48   3.3410189   1     1 #> 2876    6      6   48   2.3936600   1     3 #> 2877    7      6   48   2.3183149   1     3 #> 2878    8      6   48   2.9708091   1     5 #> 2879    9      6   48   2.0632157   1     0 #> 2880   10      6   48   2.4810830   1     0 #> 2881    1      1   49   6.4677375   1     0 #> 2882    2      1   49   8.5027991   1     8 #> 2883    3      1   49   9.7729620   1    39 #> 2884    4      1   49   7.7971656   1     2 #> 2885    5      1   49   5.0079299   1     3 #> 2886    6      1   49   8.8449047   1    11 #> 2887    7      1   49   7.9757913   1    21 #> 2888    8      1   49   8.8413774   1    41 #> 2889    9      1   49   8.3755058   1     3 #> 2890   10      1   49   8.1299407   1     9 #> 2891    1      2   49   9.9086614   1     5 #> 2892    2      2   49  11.7208846   1    10 #> 2893    3      2   49  12.4490113   1    16 #> 2894    4      2   49  10.8963010   1     9 #> 2895    5      2   49   7.9098434   1     0 #> 2896    6      2   49  12.0167874   1     7 #> 2897    7      2   49  10.9968573   1     5 #> 2898    8      2   49  12.8560444   1    15 #> 2899    9      2   49  11.4858687   1     8 #> 2900   10      2   49  11.5605114   1     0 #> 2901    1      3   49  13.1185175   1     5 #> 2902    2      3   49  12.3725773   1    11 #> 2903    3      3   49  12.3124983   1     5 #> 2904    4      3   49  11.9935761   1     5 #> 2905    5      3   49  10.6567677   1     5 #> 2906    6      3   49  13.0169841   1    25 #> 2907    7      3   49  11.8845549   1    19 #> 2908    8      3   49  14.6355623   1    14 #> 2909    9      3   49  11.8593041   1    28 #> 2910   10      3   49  13.4353930   1    34 #> 2911    1      4   49  12.4550295   1     1 #> 2912    2      4   49  10.0190786   1    14 #> 2913    3      4   49   9.6901027   1    18 #> 2914    4      4   49  10.0320210   1     6 #> 2915    5      4   49  11.0399948   1    20 #> 2916    6      4   49  10.7862951   1    13 #> 2917    7      4   49   9.8952966   1    23 #> 2918    8      4   49  12.6338469   1     5 #> 2919    9      4   49   9.6891206   1     7 #> 2920   10      4   49  11.2345160   1    17 #> 2921    1      5   49   9.4722648   1     6 #> 2922    2      5   49   6.7441074   1    21 #> 2923    3      5   49   6.1270938   1    10 #> 2924    4      5   49   6.6847145   1     3 #> 2925    5      5   49   8.9727476   1    11 #> 2926    6      5   49   7.0954250   1     5 #> 2927    7      5   49   6.6276770   1     9 #> 2928    8      5   49   8.9806942   1     5 #> 2929    9      5   49   6.3596253   1    10 #> 2930   10      5   49   7.6915423   1     4 #> 2931    1      6   49   6.1169843   1     0 #> 2932    2      6   49   4.0277766   1     4 #> 2933    3      6   49   3.5598928   1     1 #> 2934    4      6   49   3.9721633   1     0 #> 2935    5      6   49   5.7231646   1    13 #> 2936    6      6   49   4.2365969   1    10 #> 2937    7      6   49   3.9046383   1     7 #> 2938    8      6   49   5.4271805   1    31 #> 2939    9      6   49   3.7165063   1     6 #> 2940   10      6   49   4.6277716   1     1 #> 2941    1      1   50  14.3290376   1    10 #> 2942    2      1   50  18.0667498   1    21 #> 2943    3      1   50  22.5205034   1    15 #> 2944    4      1   50  19.1086369   1    20 #> 2945    5      1   50  11.7012406   1     8 #> 2946    6      1   50  19.6190478   1    12 #> 2947    7      1   50  18.3614668   1    11 #> 2948    8      1   50  19.2339648   1     9 #> 2949    9      1   50  18.5856422   1    15 #> 2950   10      1   50  17.5306825   1     0 #> 2951    1      2   50  22.5105253   1    13 #> 2952    2      2   50  25.2908871   1     5 #> 2953    3      2   50  28.1127875   1    37 #> 2954    4      2   50  25.8245193   1    11 #> 2955    5      2   50  19.0113843   1    18 #> 2956    6      2   50  26.3810556   1    40 #> 2957    7      2   50  24.5604183   1    25 #> 2958    8      2   50  27.5919454   1    32 #> 2959    9      2   50  24.9095983   1    10 #> 2960   10      2   50  25.4006438   1    10 #> 2961    1      3   50  28.2848881   1    18 #> 2962    2      3   50  26.5049095   1    22 #> 2963    3      3   50  28.2200347   1    59 #> 2964    4      3   50  28.5817025   1    28 #> 2965    5      3   50  25.5348906   1    28 #> 2966    6      3   50  29.2997484   1    17 #> 2967    7      3   50  26.4820183   1    16 #> 2968    8      3   50  31.8600536   1    74 #> 2969    9      3   50  26.7814916   1    12 #> 2970   10      3   50  28.1170098   1     5 #> 2971    1      4   50  27.9326143   1    25 #> 2972    2      4   50  21.6543600   1    11 #> 2973    3      4   50  22.4143170   1    39 #> 2974    4      4   50  24.0301075   1    70 #> 2975    5      4   50  26.2355746   1    21 #> 2976    6      4   50  23.6326811   1     5 #> 2977    7      4   50  21.9268596   1     0 #> 2978    8      4   50  27.7411616   1    14 #> 2979    9      4   50  20.9774839   1    40 #> 2980   10      4   50  24.6620045   1    65 #> 2981    1      5   50  21.4986199   1     2 #> 2982    2      5   50  14.2527285   1     5 #> 2983    3      5   50  13.5963105   1     0 #> 2984    4      5   50  15.6963931   1    14 #> 2985    5      5   50  20.8586334   1    12 #> 2986    6      5   50  15.3761835   1    11 #> 2987    7      5   50  14.6846976   1     8 #> 2988    8      5   50  19.7662288   1    34 #> 2989    9      5   50  13.9315363   1    11 #> 2990   10      5   50  17.0805275   1    44 #> 2991    1      6   50  13.4376729   1     8 #> 2992    2      6   50   8.3864699   1     9 #> 2993    3      6   50   8.2064196   1     8 #> 2994    4      6   50   9.5859034   1     8 #> 2995    5      6   50  13.7691437   1     7 #> 2996    6      6   50   9.2858133   1     3 #> 2997    7      6   50   8.7345151   1    31 #> 2998    8      6   50  11.9535363   1     8 #> 2999    9      6   50   8.2491286   1     6 #> 3000   10      6   50  10.2284125   1     8 #>  #> Slot \"Response\": #> [1] \"Count\" #>  #> Slot \"Minimum\": #> [1] \"\" #>  #> Slot \"Imputation\": #>               [,1]        [,2]        [,3]        [,4]         [,5]        [,6] #>  [1,]   39.0106176   19.102603  -21.484620 -78.8195130  -24.1275537 -171.677724 #>  [2,]  -43.3130275 -131.682194 -154.728335  -9.1140569    3.5417713  -43.504662 #>  [3,]   74.0319689   37.047785  -43.383705  16.6151846   22.8091367    4.472844 #>  [4,]   96.9112192   95.428414   55.095454 -18.8320658   44.4231118   40.762692 #>  [5,]   66.0243792   -7.201005  170.291733  94.8462468   42.5560955  -60.149579 #>  [6,]   59.8697985 -116.969208  -39.656620   6.3462995  -14.0840208   72.258242 #>  [7,]   57.4623525    6.679126  -62.512118 -79.2967782   36.4167224  -84.583138 #>  [8,]   -4.1558512   35.458151   67.744716 -18.1421203  -33.2353440   78.476474 #>  [9,]   57.9620503  -77.426155   42.723338 154.0716307  -57.6563226   86.369533 #> [10,]   21.7071853  -71.428708   21.113535  57.9890250  153.7547583  -72.423828 #> [11,]  110.6690977   11.114219   42.176834  67.6024880   55.7578784   66.389736 #> [12,]  -59.0808643   37.713196   23.640051  64.4019282   32.5310802  -15.165875 #> [13,]  -10.2329784   67.157885 -142.317039  76.3532731  -49.5763246   31.844999 #> [14,]  -71.8419300  -79.133122   34.308209 -72.5644738  -51.4777145    8.581691 #> [15,]   77.2024242  184.550233   62.881040  61.0061425   35.5118159  -14.915054 #> [16,] -105.8016055   51.678948   73.349866 -62.8205676   67.7030536   14.917205 #> [17,]   26.4417696   54.611293  -24.098756  68.7124933  -15.4001105   54.368469 #> [18,]  -62.9454188  122.638362   77.908874  -0.3990298  159.0205944  127.564490 #> [19,]  -66.3550486  -24.771745   68.425103  28.6420912    0.9461745  175.284397 #> [20,]   19.9952162  -47.893764  120.230597  -3.2906527   25.2582170   54.624641 #> [21,]  -71.8645964   21.656599 -125.323780 136.0385038  109.6783438  -11.199504 #> [22,]  -13.9994195  -57.101291    9.005277  18.4231662   95.7479416   44.906760 #> [23,]   46.4861271    9.747987   -7.411109  73.3064938  -39.7934594  -20.613521 #> [24,]  -70.6744631   19.046681   26.155341 -31.6611090   59.0137603  -79.554323 #> [25,]   55.5990720   68.404594   97.237999  29.9424542  -77.0740321  -60.178435 #> [26,]   31.0351652   -8.126829   24.433851  54.9516770  102.9258703   65.270124 #> [27,]  -58.3903337   51.951020   64.465310  44.7725612  160.3784034   65.591723 #> [28,]    0.5840966  -29.929679   33.106051  22.1256729  -17.7084681   49.449138 #> [29,]  -45.9790047   30.400785   67.844032  23.3412104  -75.7123886   84.041378 #> [30,]    5.3603903   28.852622 -195.491486  -4.1253791  -28.6381620  -29.125024 #> [31,]  405.8366262  513.072681  417.261228 472.5654646  264.5044721  307.923867 #> [32,]   82.2283733   17.703685   -1.946760  76.3598201  135.5438253  -55.113925 #> [33,]   56.1078728   11.534910   32.198507  43.6509650   24.6060631 -119.915144 #> [34,]   53.8123361   94.957044  -11.726658  62.3405271   -1.4244049  -11.902705 #> [35,]   51.6450864    4.014536  150.755546 -12.8106815  -45.1312289   18.044722 #> [36,]  142.1590110   79.003664  102.162380  48.5970977   17.9157507   78.101615 #> [37,]  -15.9046684   77.847303   11.902628 -55.7355426  -41.8125520  -66.901869 #> [38,]  -95.9590401  -51.887620    6.769320  10.3324622   31.4614526   42.159132 #> [39,]  101.4979826   21.995303   25.748424  92.8031253  127.6594340   42.436362 #> [40,] -106.0655827  -56.759826   21.229134  -8.9477275  -28.3561876  -41.453613 #> [41,]   25.3070593  -17.744640   42.618400 102.6193311  -25.5247938  -75.017361 #> [42,]   27.1812426  -75.310555   36.073106  -7.1785329    0.1723951 -111.770669 #> [43,]   29.8205738   73.884149  -57.543768 -38.6518574   20.0958576   99.647591 #> [44,]  -42.5880570  -33.098367  117.048483 -36.5124352   20.6166853  -83.134205 #> [45,]   57.5274496   41.161812   65.344406 122.3546347  137.8263991   28.617792 #> [46,]  -20.0909667   62.765647   -4.766004  71.5494768   63.7414779   41.380511 #> [47,]  167.4390546   86.405978   31.485612  76.1354484  154.7221753   40.006797 #> [48,]  -67.0944753   12.578325  -26.203647  -1.8320716 -111.3809900  -39.412812 #> [49,]   58.0705347    8.526490   60.361069 -48.4944962   55.0792554   89.189738 #> [50,]   24.2473028  -51.763205  -34.120519 -80.1601246  100.8290732    8.758170 #>              [,7]        [,8]        [,9]        [,10]       [,11]       [,12] #>  [1,]  -60.855639  -37.564918   12.505732  -54.9197602 -29.8570900  -59.637416 #>  [2,]   -2.326176  -40.501990  -44.446611   92.6727054 -72.6497368   77.285717 #>  [3,]  150.913816   59.245118  -21.952145  -17.3414141  27.2949080    5.041479 #>  [4,]   -1.025774  141.703081  -15.890200   88.0583841   7.2732335  133.515096 #>  [5,]  -30.694519  -61.344393   51.765671   25.0897596  52.9925391   71.697756 #>  [6,]  -24.796291   28.066677   -1.601812   21.2391783  41.4749893   50.621267 #>  [7,]   16.546451   67.702921  -62.905892  -30.9290187 -65.8301390   -5.931366 #>  [8,] -103.411791    2.124799  -22.899805   95.3974205   9.8975487  -47.820430 #>  [9,]  106.646000  -92.374942    1.747936    4.8712332  22.2036598   46.137446 #> [10,]  131.860725  -17.910437   11.258296   -9.5111698 -34.6565040  -32.554682 #> [11,]   64.503625  227.785973  120.318553   47.3001189 -11.0967574   -9.499902 #> [12,]  163.242884    7.641374  -38.859163  -29.6862183 -53.9327581   92.981142 #> [13,]  121.409927   50.750109 -133.546072  -57.1041296 -39.1340768   38.329631 #> [14,]   79.997155  -74.987616  106.633702    0.8226553 -60.5914297  -62.955381 #> [15,]   12.072245  -42.940694    8.394846  -12.3567352  80.2714844   86.440041 #> [16,]   79.755742  142.935931  -56.775228  -40.7490055  39.8704645  -94.036808 #> [17,]   95.133785  118.868170  155.334293  152.6479594  85.6588389  -67.110027 #> [18,]  173.925619   91.958110  167.488159  141.1858133  97.2035716  -11.426892 #> [19,]  -21.210298   64.547205  101.338415    2.5396125  42.7240393  -50.307124 #> [20,]  -42.673026   -2.279273   -9.064599   -1.9858979 -31.4526349   82.168326 #> [21,]  -35.580198 -111.606001  -93.007545 -111.5839526  29.2269780  -58.309989 #> [22,]   36.385197  -13.265379   98.442109   51.2958200 -57.3415801   57.819421 #> [23,]   95.379690   33.295459   54.470538    2.6876261 165.6773906   19.640549 #> [24,]  -38.900725   88.978977   26.831391  -42.7013920  19.1138407  116.970916 #> [25,]  -35.476930  -64.979616   58.463334  -69.8577342   0.3441788   25.517351 #> [26,]  -26.613997   38.843974  -53.913482   46.5565214  80.6475211   53.531919 #> [27,]   13.554542  -51.547116   86.529504   57.6295108  53.6308764  -51.942854 #> [28,]    4.170473   51.111511  -88.497513  -64.1470014  33.7771831   45.135207 #> [29,]  -15.861106   69.770712   42.417836   25.7094600  18.3647566  -72.647911 #> [30,]   21.715835  -36.311208  188.359256  125.4963299 -12.3941233 -100.113602 #> [31,]  426.920443  397.564309  530.380862  369.5793530 460.3823919  441.853927 #> [32,]   82.824211  100.864994   20.740816   30.4816743   9.2814275   49.755905 #> [33,]    9.236696  -78.697931   23.824169  -68.0960877  56.8954006 -114.625606 #> [34,]   29.455855  -66.700313  -65.558885   32.1760313 -31.2916908  -11.244107 #> [35,]   39.473793   30.419570  128.666508  -39.6409589 104.3674214   75.129462 #> [36,]   85.964630  156.572837  -31.103245  -59.4532763 -72.9005029   78.496608 #> [37,]  -20.037640 -118.158240  -84.827396   62.5563894  80.2871469   -1.476642 #> [38,]  143.229534   85.911132   89.512076   22.1313888  17.2871621    8.308648 #> [39,]  -57.559333  146.422146 -132.111652   20.8781277  27.0676304   22.128614 #> [40,]  -88.286681  -28.522166   63.550616  130.5806471  -0.5315732  -74.700644 #> [41,]   87.425609   67.593577   66.046897   28.7541624  24.7403473  140.574953 #> [42,]  -39.825525  148.191178   59.770125   54.0837364   7.8005023   57.830628 #> [43,]   22.165046  -38.201517   69.469079  -13.2864211  15.9251658  151.628963 #> [44,]  111.484960  -44.255929   43.383096   69.8270879 117.1269304   30.833390 #> [45,]  123.152497    7.476386  130.010236   -5.3777905  74.1474400  -23.827576 #> [46,]   32.312101  111.295992  141.128075   93.9421756  39.1628775   20.738473 #> [47,]  -34.675419   32.956007  162.986847   46.0869153 -74.3558377  113.656658 #> [48,]   90.472782  -87.814642   48.482434   19.3292330 -67.4606617  -26.158271 #> [49,]  -22.550356   61.531331   62.561956   68.1785503  30.3561224  -27.466320 #> [50,]  -41.329451  -69.051659  -37.946047   14.6526178 -64.6474857    4.910829 #>              [,13]       [,14]       [,15]        [,16]       [,17]      [,18] #>  [1,]  -29.8331586   32.160818  -54.344953 -138.9466596   29.704224  30.389562 #>  [2,]    9.5583244  154.919797 -105.637969 -122.4066203   70.518365 -62.309838 #>  [3,]    7.7218265   74.784455   32.149398  148.5816894   -9.660467 -44.063097 #>  [4,]  -65.4718385  -51.093725   29.629660   13.4671517   -8.259350  95.164488 #>  [5,] -132.6623654   46.747483  207.350515  -13.4971379   54.214458 136.367497 #>  [6,]   15.7340119   87.461217  117.526879  -13.1537748  -73.675164  23.046350 #>  [7,]  -10.6117951   -8.159379   12.152767  101.8341443 -169.423219 -11.398432 #>  [8,]    1.5217086   27.905174   48.908957   16.7496984   24.897570 -71.248758 #>  [9,]   16.1995446  -12.069879   76.680722   31.3795367   56.811962  41.515890 #> [10,]   -1.7599101   26.220507  -23.662026   -4.2910325    6.210980 -23.032104 #> [11,]   45.9632008 -121.995621   99.341829  -54.5527497   63.329203  82.582653 #> [12,]  -42.0392965   64.069228   67.243135   26.0747916    5.481347  56.544397 #> [13,] -148.6157790  -36.054555   40.038669  -70.5748811   14.157393 116.199492 #> [14,]   70.3870097  162.515895   28.737443   -0.6681474  -85.401763 -34.607442 #> [15,]   53.2904723   63.386696 -164.273475  -22.9819604  -52.161287  70.468044 #> [16,]    1.5227792  -11.072259  -58.998263 -104.7410994   42.992065  -1.138142 #> [17,]  -56.0488048   87.079151  120.529090   45.3219234  187.754340  53.882186 #> [18,]   48.2618399   55.995677  187.102770  -10.6909200   49.379453  96.751303 #> [19,]  -39.0216125   20.500655  -24.175663   67.3826332   12.447260 130.214646 #> [20,]   12.4339018  -53.034578   16.015816   92.0733383  -57.213440  98.155412 #> [21,]    2.1420731   14.135796  -21.824422  164.6201709  -19.246255  48.642926 #> [22,]   -2.4534850  -66.946189  -52.315891  -84.8961062  -13.505413  80.309195 #> [23,]  -66.3612296   14.362328   75.572944  -93.4839576  -32.592363  62.088729 #> [24,]  -54.8878588   15.734744  -24.010190 -108.7795068   14.605007  59.359076 #> [25,]    8.3046587   40.793949  -58.139407  -54.8116991  -69.146545 -55.287428 #> [26,]  -13.7818700   20.167110   61.222927   99.9827464  114.114873 104.705926 #> [27,]    2.8375237   11.773620  -32.441053   59.2817231  135.569235  62.640403 #> [28,]   61.3417346  -60.790392  123.465280  -72.2791697   60.836137  89.277935 #> [29,]   15.5020767 -123.422627  -71.280974  -74.4986172  -13.436116 -43.021511 #> [30,]    7.2503278   21.508198  -70.619765   65.1276792   16.188761 -41.215056 #> [31,]  461.5517162  463.553746  405.578676  455.4786339  379.286826 430.542806 #> [32,]   -0.4333016   22.573058   71.293368   43.6372417   -1.845824  94.458487 #> [33,]   49.3777877  117.194058  -54.334849   84.9009731   31.368086  79.966229 #> [34,]   58.8579822   23.237053 -114.260902  -48.1391523  107.109267 -39.215361 #> [35,]  -51.6706491  -68.048559   10.679958   65.3533127   -8.198283  67.075456 #> [36,]  -31.5103172  109.933883   57.194176  -45.4842418   10.984534 -55.826443 #> [37,]  136.4596031  -28.485706   48.690096   19.6536932   -3.981605  75.338763 #> [38,]  -20.3157824   86.793007   74.085211  -20.1873652  -43.713743 160.953882 #> [39,]  -37.2215352  -51.307893    9.366152    1.4353135  -24.742296  97.547243 #> [40,]   53.3781378  -40.653888  -15.526948   83.7718090  -19.923241 -87.871743 #> [41,]   50.9636352  -47.920561   13.255764   13.5340186  -92.909799 -42.194154 #> [42,]   30.1474645  153.926450    9.078252  -46.4466000  123.719557 -12.940460 #> [43,]   22.8416322    4.837181   27.617333  -80.6549189  127.234368 100.642746 #> [44,]   -9.0789770  -60.589613   52.288128    1.6003366   49.609985   8.019661 #> [45,]   69.3466592  -14.798821  -33.046862   84.4870874  172.341055  87.178445 #> [46,]  165.3550075   -8.114038  103.699472  260.8352885   17.618209   9.350053 #> [47,]   45.2829729  -12.283268  -84.210093   21.1196674  -49.696121  80.017651 #> [48,]  -38.7462592   68.894290  -25.925283    1.1746199   42.976982 -32.564661 #> [49,]   41.1053212   -5.652674  -43.218179   21.5729647  -14.175411  46.505538 #> [50,]  -13.5698437  -44.066496   11.369987  -10.4594242   -0.555488   1.248933 #>             [,19] #>  [1,] -126.073275 #>  [2,]  -41.859803 #>  [3,]    3.395074 #>  [4,]  -26.946265 #>  [5,]  127.962674 #>  [6,]   53.530420 #>  [7,]  -22.276517 #>  [8,]  -17.485405 #>  [9,]  177.805873 #> [10,]   -7.137746 #> [11,]   45.462216 #> [12,]  -82.042434 #> [13,]  -70.303404 #> [14,]  -53.249437 #> [15,]  154.091757 #> [16,]   76.360737 #> [17,]    4.728656 #> [18,]  188.673757 #> [19,]   42.173865 #> [20,]  -93.353584 #> [21,]   90.761746 #> [22,]  -48.524580 #> [23,]   -8.373550 #> [24,]   82.489724 #> [25,]  202.932515 #> [26,]   63.300052 #> [27,]  -22.610868 #> [28,]   47.884829 #> [29,]   11.889271 #> [30,]  -97.949313 #> [31,]  442.281253 #> [32,]  154.120996 #> [33,]  211.637291 #> [34,]  -56.998133 #> [35,]  -67.246589 #> [36,]  -63.078526 #> [37,]   59.665069 #> [38,]   78.739991 #> [39,]   14.220168 #> [40,]  143.118599 #> [41,]   27.768264 #> [42,]   13.078037 #> [43,]   31.839301 #> [44,]   37.613920 #> [45,]   63.881149 #> [46,]  151.902163 #> [47,]   41.295077 #> [48,]  166.035561 #> [49,]  -23.517860 #> [50,]   24.083151 #>  #> Slot \"Extra\": #> [1] Year   Period Site   Mu     Run    Count  #> <0 rows> (or 0-length row.names) #>"},{"path":"https://inbo.github.io/multimput/reference/maybeInla-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The maybeInla class — maybeInla-class","title":"The maybeInla class — maybeInla-class","text":"superclass holding either NULL object inla class.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_at_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate missing data at random — missing_at_random","title":"Generate missing data at random — missing_at_random","text":"observed values either equal counts missing. probability missing inverse counts + 1.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_at_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate missing data at random — missing_at_random","text":"","code":"missing_at_random(   dataset,   proportion = 0.25,   count_variable = \"Count\",   observed_variable = \"Observed\" )"},{"path":"https://inbo.github.io/multimput/reference/missing_at_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate missing data at random — missing_at_random","text":"dataset dataset observation missing data. proportion proportion observations missing. count_variable name variable holding counts. observed_variable name variable holding observed values = either count missing.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_current_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate missing data depending on the counts — missing_current_count","title":"Generate missing data depending on the counts — missing_current_count","text":"observed values either equal counts missing. probability missing inverse counts + 1.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_current_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate missing data depending on the counts — missing_current_count","text":"","code":"missing_current_count(   dataset,   proportion = 0.25,   count_variable = \"Count\",   observed_variable = \"Observed\" )"},{"path":"https://inbo.github.io/multimput/reference/missing_current_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate missing data depending on the counts — missing_current_count","text":"dataset dataset observation missing data. proportion proportion observations missing. count_variable name variable holding counts. observed_variable name variable holding observed values = either count missing.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_observed.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate missing data based on the observed patterns in the real dataset. — missing_observed","title":"Generate missing data based on the observed patterns in the real dataset. — missing_observed","text":"observed values either equal counts missing. probability missing inverse counts + 1.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_observed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate missing data based on the observed patterns in the real dataset. — missing_observed","text":"","code":"missing_observed(   dataset,   count_variable = \"Count\",   observed_variable = \"Observed\",   site_variable = \"Site\",   year_variable = \"Year\",   period_variable = \"Period\" )"},{"path":"https://inbo.github.io/multimput/reference/missing_observed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate missing data based on the observed patterns in the real dataset. — missing_observed","text":"dataset dataset observation missing data. count_variable name variable holding counts. observed_variable name variable holding observed values = either count missing. site_variable name variable holding sites. year_variable name variable holding years. period_variable name variable holding period.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_volunteer.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate missing data mimicking choices made by volunteers. — missing_volunteer","title":"Generate missing data mimicking choices made by volunteers. — missing_volunteer","text":"observed values either equal counts missing. probability missing inverse counts + 1.","code":""},{"path":"https://inbo.github.io/multimput/reference/missing_volunteer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate missing data mimicking choices made by volunteers. — missing_volunteer","text":"","code":"missing_volunteer(   dataset,   proportion = 0.25,   count_variable = \"Count\",   observed_variable = \"Observed\",   year_variable = \"Year\",   site_variable = \"Site\",   max_count = 100 )"},{"path":"https://inbo.github.io/multimput/reference/missing_volunteer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate missing data mimicking choices made by volunteers. — missing_volunteer","text":"dataset dataset observation missing data. proportion proportion observations missing. count_variable name variable holding counts. observed_variable name variable holding observed values = either count missing. year_variable name variable holding years. site_variable name variable holding sites. max_count maximum count.","code":""},{"path":"https://inbo.github.io/multimput/reference/model_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Model an imputed dataset — model_impute","title":"Model an imputed dataset — model_impute","text":"Model imputed dataset","code":""},{"path":"https://inbo.github.io/multimput/reference/model_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model an imputed dataset — model_impute","text":"","code":"model_impute(   object,   model_fun,   rhs,   model_args = list(),   extractor,   extractor_args = list(),   filter = list(),   mutate = list(),   ...,   timeout = 600 )  # S4 method for class 'ANY' model_impute(   object,   model_fun,   rhs,   model_args = list(),   extractor,   extractor_args = list(),   filter = list(),   mutate = list(),   ...,   timeout = 600 )  # S4 method for class 'aggregatedImputed' model_impute(   object,   model_fun,   rhs,   model_args = list(),   extractor,   extractor_args = list(),   filter = list(),   mutate = list(),   ...,   timeout = 600 )"},{"path":"https://inbo.github.io/multimput/reference/model_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model an imputed dataset — model_impute","text":"object imputed dataset. model_fun function apply imputation set. string name function. Include package name function one base R packages. example: \"glm\" \"INLA::inla\". rhs right hand side model. model_args optional list arguments pass model function. extractor function return matrix data.frame. first column contain estimate, second standard error estimate. extractor_args optional list arguments pass extractor function. filter optional argument filter aggregated dataset. Either function takes Covariate slot argument. list passed .dots argument dplyr::filter(). can filter covariates aggregated dataset. Besides can also filter Imputation_min Imputation_max. variables represent lowest highest value imputations per row data. mutate optional argument alter aggregated dataset. passed .dots argument dplyr::mutate(). mainly useful simple conversions, e.g. factors numbers vice versa. ... currently ignored. timeout Maximum duration allowed fitting single imputation model seconds. Defaults 600 seconds (10 minutes).","code":""},{"path":"https://inbo.github.io/multimput/reference/model_impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model an imputed dataset — model_impute","text":"","code":"dataset <- generate_data(n_year = 10, n_site = 50, n_run = 1) dataset$Count[sample(nrow(dataset), 50)] <- NA model <- lm(Count ~ Year + factor(Period) + factor(Site), data = dataset) imputed <- impute(data = dataset, model = model) aggr <- aggregate_impute(imputed, grouping = c(\"Year\", \"Period\"), fun = sum) extractor <- function(model) {   summary(model)$coefficients[, c(\"Estimate\", \"Std. Error\")] } model_impute(   object = aggr,   model_fun = lm,   rhs = \"0 + factor(Year)\",   extractor = extractor ) #> # A tibble: 10 × 5 #>    Parameter      Estimate    SE   LCL   UCL #>    <fct>             <dbl> <dbl> <dbl> <dbl> #>  1 factor(Year)1     1460.  216. 1036. 1883. #>  2 factor(Year)2     1460.  216. 1037. 1883. #>  3 factor(Year)3     1569.  216. 1145. 1993. #>  4 factor(Year)4     1808.  216. 1385. 2231. #>  5 factor(Year)5     1671.  216. 1247. 2094. #>  6 factor(Year)6     1546.  217. 1121. 1970. #>  7 factor(Year)7     1681.  216. 1257. 2104. #>  8 factor(Year)8     1633.  216. 1209. 2056. #>  9 factor(Year)9     1798.  216. 1375. 2220. #> 10 factor(Year)10    1426.  216. 1003. 1849."},{"path":"https://inbo.github.io/multimput/reference/rawImputed-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The rawImputed class Holds a dataset and imputed values — rawImputed-class","title":"The rawImputed class Holds a dataset and imputed values — rawImputed-class","text":"rawImputed class Holds dataset imputed values","code":""},{"path":"https://inbo.github.io/multimput/reference/rawImputed-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The rawImputed class Holds a dataset and imputed values — rawImputed-class","text":"Data data.frame data. Response character holding name response variable. Minimum optional character holding name variable minimum. Imputation matrix imputed values. Extra data.frame extra data add imputations. data used imputation model. must contain variables original data.","code":""},{"path":"https://inbo.github.io/multimput/reference/waterfowl.html","id":null,"dir":"Reference","previous_headings":"","what":"The observation pattern in the Flemish waterfowl dataset — waterfowl","title":"The observation pattern in the Flemish waterfowl dataset — waterfowl","text":"Data fig 1 2 Onkelinx et al","code":""},{"path":"https://inbo.github.io/multimput/reference/waterfowl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The observation pattern in the Flemish waterfowl dataset — waterfowl","text":"","code":"data(waterfowl)"},{"path":"https://inbo.github.io/multimput/reference/waterfowl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The observation pattern in the Flemish waterfowl dataset — waterfowl","text":"data frame 77157 rows 5 variables","code":""},{"path":"https://inbo.github.io/multimput/reference/waterfowl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The observation pattern in the Flemish waterfowl dataset — waterfowl","text":"Site Site ID. Winter Winter ID. Period ID month. Species Number observed species. Birds Total number birds.","code":""},{"path":"https://inbo.github.io/multimput/news/index.html","id":"multimput-0214","dir":"Changelog","previous_headings":"","what":"multimput 0.2.14","title":"multimput 0.2.14","text":"case imputed values identical, model_impute() runs single model one imputation. reports mean standard errors based single model -. model_impute() handles empty data. model_impute() can filter covariates user supplied function. model_impute() gains timeout argument. Bugfix generating zero-inflated negative binomial data.","code":""},{"path":"https://inbo.github.io/multimput/news/index.html","id":"multimput-0213","dir":"Changelog","previous_headings":"","what":"multimput 0.2.13","title":"multimput 0.2.13","text":"aggregate_impute() handles corner case join results empty dataset. model_fun argument model_impute() can either function string containing name function (like \"glm\"). Include package name case function available base R (like \"INLA::inla\").","code":""},{"path":"https://inbo.github.io/multimput/news/index.html","id":"multimput-0212","dir":"Changelog","previous_headings":"","what":"multimput 0.2.12","title":"multimput 0.2.12","text":"impute() gains extra argument. Use observations model still want add follow-analysis. example: exclude rare observations model want aggregations. impute() INLA models now also handles binomial, zero-inflated Poison (type 0 1) zero-inflated negative binomial (type 0 1) distributions. Add hurdle_impute() fit hurdle model based model presences model counts. Added validation rules rawImputed aggregatedImputed objects. Update checklist infrastructure.","code":""},{"path":"https://inbo.github.io/multimput/news/index.html","id":"multimput-0211","dir":"Changelog","previous_headings":"","what":"multimput 0.2.11","title":"multimput 0.2.11","text":"Vignette runs without INLA. Required make package build https://inbo.r-universe.dev","code":""},{"path":"https://inbo.github.io/multimput/news/index.html","id":"multimput-0210","dir":"Changelog","previous_headings":"","what":"multimput 0.2.10","title":"multimput 0.2.10","text":"Use checklist infrastructure.","code":""},{"path":"https://inbo.github.io/multimput/news/index.html","id":"multimput-0279000","dir":"Changelog","previous_headings":"","what":"multimput 0.2.7.9000","title":"multimput 0.2.7.9000","text":"aggregate_impute() now also works aggregatedImputed objects (#34)","code":""}]
